import{J as On,S as Ri,i as Ci,s as Pi,C as ts,D as ns,E as is,F as rs,g as De,d as ze,I as bn,K as Nn,L as Cn,y as ct,z as ut,A as ht,B as ft,M as pd,o as Wa,a as jt,e as Ai,c as en,b as Ot,f as Ds,h as It,N as wg,O as su,P as Tg,v as Os,Q as Ow,t as Nw,k as x0,l as M0,m as S0,n as b0,R as Fw,w as E0,T as Bw,U as zw,V as kw,W as ui,X as Ag,Y as Hw,Z as Gw,_ as Rg,$ as w0,H as rl,a0 as Cg}from"../chunks/index.9ba212c6.js";import{w as jn,d as T0}from"../chunks/index.4b46e337.js";/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const hu="153",Vw={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Ww={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},A0=0,Rf=1,R0=2,Xw=3,$w=0,md=1,fu=2,Zi=3,Ar=0,Vn=1,Ji=2,qw=2,Er=0,Ns=1,Cf=2,Pf=3,Lf=4,C0=5,Rs=100,P0=101,L0=102,If=103,Uf=104,I0=200,U0=201,D0=202,O0=203,gd=204,_d=205,N0=206,F0=207,B0=208,z0=209,k0=210,H0=0,G0=1,V0=2,au=3,W0=4,X0=5,$0=6,q0=7,sl=0,Y0=1,Z0=2,ji=0,J0=1,K0=2,Q0=3,vd=4,j0=5,du=300,Kr=301,Qr=302,zo=303,ko=304,Xa=306,Ho=1e3,Dn=1001,Go=1002,un=1003,ou=1004,Yw=1004,Do=1005,Zw=1005,hn=1006,yd=1007,Jw=1007,jr=1008,Kw=1008,wr=1009,ev=1010,tv=1011,pu=1012,xd=1013,br=1014,Ki=1015,ka=1016,Md=1017,Sd=1018,Yr=1020,nv=1021,hi=1023,iv=1024,rv=1025,Zr=1026,zs=1027,sv=1028,bd=1029,av=1030,Ed=1031,wd=1033,Kc=33776,Qc=33777,jc=33778,eu=33779,Df=35840,Of=35841,Nf=35842,Ff=35843,ov=36196,Bf=37492,zf=37496,kf=37808,Hf=37809,Gf=37810,Vf=37811,Wf=37812,Xf=37813,$f=37814,qf=37815,Yf=37816,Zf=37817,Jf=37818,Kf=37819,Qf=37820,jf=37821,tu=36492,lv=36283,ed=36284,td=36285,nd=36286,cv=2200,uv=2201,hv=2202,Vo=2300,Wo=2301,nu=2302,Ps=2400,Ls=2401,Xo=2402,mu=2500,Td=2501,Qw=0,jw=1,eT=2,$o=3e3,Tr=3001,fv=3200,dv=3201,ss=0,pv=1,Jr="",mt="srgb",ki="srgb-linear",Ad="display-p3",tT=0,iu=7680,nT=7681,iT=7682,rT=7683,sT=34055,aT=34056,oT=5386,lT=512,cT=513,uT=514,hT=515,fT=516,dT=517,pT=518,mv=519,gv=512,_v=513,vv=514,yv=515,xv=516,Mv=517,Sv=518,bv=519,qo=35044,mT=35048,gT=35040,_T=35045,vT=35049,yT=35041,xT=35046,MT=35050,ST=35042,bT="100",id="300 es",lu=1035,Qi=2e3,Yo=2001;class Cr{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,e);e.target=null}}}const In=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Pg=1234567;const Fs=Math.PI/180,Ha=180/Math.PI;function di(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(In[s&255]+In[s>>8&255]+In[s>>16&255]+In[s>>24&255]+"-"+In[e&255]+In[e>>8&255]+"-"+In[e>>16&15|64]+In[e>>24&255]+"-"+In[t&63|128]+In[t>>8&255]+"-"+In[t>>16&255]+In[t>>24&255]+In[n&255]+In[n>>8&255]+In[n>>16&255]+In[n>>24&255]).toLowerCase()}function an(s,e,t){return Math.max(e,Math.min(t,s))}function Rd(s,e){return(s%e+e)%e}function ET(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}function wT(s,e,t){return s!==e?(t-s)/(e-s):0}function Oo(s,e,t){return(1-t)*s+t*e}function TT(s,e,t,n){return Oo(s,e,1-Math.exp(-t*n))}function AT(s,e=1){return e-Math.abs(Rd(s,e*2)-e)}function RT(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function CT(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function PT(s,e){return s+Math.floor(Math.random()*(e-s+1))}function LT(s,e){return s+Math.random()*(e-s)}function IT(s){return s*(.5-Math.random())}function UT(s){s!==void 0&&(Pg=s);let e=Pg+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function DT(s){return s*Fs}function OT(s){return s*Ha}function rd(s){return(s&s-1)===0&&s!==0}function Ev(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function cu(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function NT(s,e,t,n,i){const r=Math.cos,o=Math.sin,l=r(t/2),u=o(t/2),h=r((e+n)/2),f=o((e+n)/2),p=r((e-n)/2),m=o((e-n)/2),g=r((n-e)/2),v=o((n-e)/2);switch(i){case"XYX":s.set(l*f,u*p,u*m,l*h);break;case"YZY":s.set(u*m,l*f,u*p,l*h);break;case"ZXZ":s.set(u*p,u*m,l*f,l*h);break;case"XZX":s.set(l*f,u*v,u*g,l*h);break;case"YXY":s.set(u*g,l*f,u*v,l*h);break;case"ZYZ":s.set(u*v,u*g,l*f,l*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function fi(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function Mt(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const FT={DEG2RAD:Fs,RAD2DEG:Ha,generateUUID:di,clamp:an,euclideanModulo:Rd,mapLinear:ET,inverseLerp:wT,lerp:Oo,damp:TT,pingpong:AT,smoothstep:RT,smootherstep:CT,randInt:PT,randFloat:LT,randFloatSpread:IT,seededRandom:UT,degToRad:DT,radToDeg:OT,isPowerOfTwo:rd,ceilPowerOfTwo:Ev,floorPowerOfTwo:cu,setQuaternionFromProperEuler:NT,normalize:Mt,denormalize:fi};class fe{constructor(e=0,t=0){fe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(an(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*n-o*i+e.x,this.y=r*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class xt{constructor(e,t,n,i,r,o,l,u,h){xt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,o,l,u,h)}set(e,t,n,i,r,o,l,u,h){const f=this.elements;return f[0]=e,f[1]=i,f[2]=l,f[3]=t,f[4]=r,f[5]=u,f[6]=n,f[7]=o,f[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],l=n[3],u=n[6],h=n[1],f=n[4],p=n[7],m=n[2],g=n[5],v=n[8],M=i[0],y=i[3],_=i[6],b=i[1],S=i[4],w=i[7],L=i[2],T=i[5],C=i[8];return r[0]=o*M+l*b+u*L,r[3]=o*y+l*S+u*T,r[6]=o*_+l*w+u*C,r[1]=h*M+f*b+p*L,r[4]=h*y+f*S+p*T,r[7]=h*_+f*w+p*C,r[2]=m*M+g*b+v*L,r[5]=m*y+g*S+v*T,r[8]=m*_+g*w+v*C,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],l=e[5],u=e[6],h=e[7],f=e[8];return t*o*f-t*l*h-n*r*f+n*l*u+i*r*h-i*o*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],l=e[5],u=e[6],h=e[7],f=e[8],p=f*o-l*h,m=l*u-f*r,g=h*r-o*u,v=t*p+n*m+i*g;if(v===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/v;return e[0]=p*M,e[1]=(i*h-f*n)*M,e[2]=(l*n-i*o)*M,e[3]=m*M,e[4]=(f*t-i*u)*M,e[5]=(i*r-l*t)*M,e[6]=g*M,e[7]=(n*u-h*t)*M,e[8]=(o*t-n*r)*M,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,o,l){const u=Math.cos(r),h=Math.sin(r);return this.set(n*u,n*h,-n*(u*o+h*l)+o+e,-i*h,i*u,-i*(-h*o+u*l)+l+t,0,0,1),this}scale(e,t){return this.premultiply(Xh.makeScale(e,t)),this}rotate(e){return this.premultiply(Xh.makeRotation(-e)),this}translate(e,t){return this.premultiply(Xh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Xh=new xt;function wv(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const BT={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Da(s,e){return new BT[s](e)}function Zo(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}const Lg={};function No(s){s in Lg||(Lg[s]=!0,console.warn(s))}function Ba(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function $h(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const zT=new xt().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),kT=new xt().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function HT(s){return s.convertSRGBToLinear().applyMatrix3(kT)}function GT(s){return s.applyMatrix3(zT).convertLinearToSRGB()}const VT={[ki]:s=>s,[mt]:s=>s.convertSRGBToLinear(),[Ad]:HT},WT={[ki]:s=>s,[mt]:s=>s.convertLinearToSRGB(),[Ad]:GT},li={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(s){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!s},get workingColorSpace(){return ki},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,e,t){if(this.enabled===!1||e===t||!e||!t)return s;const n=VT[e],i=WT[t];if(n===void 0||i===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return i(n(s))},fromWorkingColorSpace:function(s,e){return this.convert(s,this.workingColorSpace,e)},toWorkingColorSpace:function(s,e){return this.convert(s,e,this.workingColorSpace)}};let fa;class Cd{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{fa===void 0&&(fa=Zo("canvas")),fa.width=e.width,fa.height=e.height;const n=fa.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=fa}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Zo("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=Ba(r[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Ba(t[n]/255)*255):t[n]=Ba(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let XT=0;class Is{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:XT++}),this.uuid=di(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,l=i.length;o<l;o++)i[o].isDataTexture?r.push(qh(i[o].image)):r.push(qh(i[o]))}else r=qh(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function qh(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?Cd.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let $T=0;class fn extends Cr{constructor(e=fn.DEFAULT_IMAGE,t=fn.DEFAULT_MAPPING,n=Dn,i=Dn,r=hn,o=jr,l=hi,u=wr,h=fn.DEFAULT_ANISOTROPY,f=Jr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:$T++}),this.uuid=di(),this.name="",this.source=new Is(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=h,this.format=l,this.internalFormat=null,this.type=u,this.offset=new fe(0,0),this.repeat=new fe(1,1),this.center=new fe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new xt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof f=="string"?this.colorSpace=f:(No("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=f===Tr?mt:Jr),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==du)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Ho:e.x=e.x-Math.floor(e.x);break;case Dn:e.x=e.x<0?0:1;break;case Go:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Ho:e.y=e.y-Math.floor(e.y);break;case Dn:e.y=e.y<0?0:1;break;case Go:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return No("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===mt?Tr:$o}set encoding(e){No("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Tr?mt:Jr}}fn.DEFAULT_IMAGE=null;fn.DEFAULT_MAPPING=du;fn.DEFAULT_ANISOTROPY=1;class zt{constructor(e=0,t=0,n=0,i=1){zt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const u=e.elements,h=u[0],f=u[4],p=u[8],m=u[1],g=u[5],v=u[9],M=u[2],y=u[6],_=u[10];if(Math.abs(f-m)<.01&&Math.abs(p-M)<.01&&Math.abs(v-y)<.01){if(Math.abs(f+m)<.1&&Math.abs(p+M)<.1&&Math.abs(v+y)<.1&&Math.abs(h+g+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const S=(h+1)/2,w=(g+1)/2,L=(_+1)/2,T=(f+m)/4,C=(p+M)/4,R=(v+y)/4;return S>w&&S>L?S<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(S),i=T/n,r=C/n):w>L?w<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(w),n=T/i,r=R/i):L<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(L),n=C/r,i=R/r),this.set(n,i,r,t),this}let b=Math.sqrt((y-v)*(y-v)+(p-M)*(p-M)+(m-f)*(m-f));return Math.abs(b)<.001&&(b=1),this.x=(y-v)/b,this.y=(p-M)/b,this.z=(m-f)/b,this.w=Math.acos((h+g+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Hi extends Cr{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new zt(0,0,e,t),this.scissorTest=!1,this.viewport=new zt(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(No("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===Tr?mt:Jr),this.texture=new fn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:hn,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Is(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class gu extends fn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=un,this.minFilter=un,this.wrapR=Dn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class qT extends Hi{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new gu(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Pd extends fn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=un,this.minFilter=un,this.wrapR=Dn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class YT extends Hi{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Pd(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class ZT extends Hi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const r=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=r.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Qn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,o,l){let u=n[i+0],h=n[i+1],f=n[i+2],p=n[i+3];const m=r[o+0],g=r[o+1],v=r[o+2],M=r[o+3];if(l===0){e[t+0]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p;return}if(l===1){e[t+0]=m,e[t+1]=g,e[t+2]=v,e[t+3]=M;return}if(p!==M||u!==m||h!==g||f!==v){let y=1-l;const _=u*m+h*g+f*v+p*M,b=_>=0?1:-1,S=1-_*_;if(S>Number.EPSILON){const L=Math.sqrt(S),T=Math.atan2(L,_*b);y=Math.sin(y*T)/L,l=Math.sin(l*T)/L}const w=l*b;if(u=u*y+m*w,h=h*y+g*w,f=f*y+v*w,p=p*y+M*w,y===1-l){const L=1/Math.sqrt(u*u+h*h+f*f+p*p);u*=L,h*=L,f*=L,p*=L}}e[t]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,r,o){const l=n[i],u=n[i+1],h=n[i+2],f=n[i+3],p=r[o],m=r[o+1],g=r[o+2],v=r[o+3];return e[t]=l*v+f*p+u*g-h*m,e[t+1]=u*v+f*m+h*p-l*g,e[t+2]=h*v+f*g+l*m-u*p,e[t+3]=f*v-l*p-u*m-h*g,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,r=e._z,o=e._order,l=Math.cos,u=Math.sin,h=l(n/2),f=l(i/2),p=l(r/2),m=u(n/2),g=u(i/2),v=u(r/2);switch(o){case"XYZ":this._x=m*f*p+h*g*v,this._y=h*g*p-m*f*v,this._z=h*f*v+m*g*p,this._w=h*f*p-m*g*v;break;case"YXZ":this._x=m*f*p+h*g*v,this._y=h*g*p-m*f*v,this._z=h*f*v-m*g*p,this._w=h*f*p+m*g*v;break;case"ZXY":this._x=m*f*p-h*g*v,this._y=h*g*p+m*f*v,this._z=h*f*v+m*g*p,this._w=h*f*p-m*g*v;break;case"ZYX":this._x=m*f*p-h*g*v,this._y=h*g*p+m*f*v,this._z=h*f*v-m*g*p,this._w=h*f*p+m*g*v;break;case"YZX":this._x=m*f*p+h*g*v,this._y=h*g*p+m*f*v,this._z=h*f*v-m*g*p,this._w=h*f*p-m*g*v;break;case"XZY":this._x=m*f*p-h*g*v,this._y=h*g*p-m*f*v,this._z=h*f*v+m*g*p,this._w=h*f*p+m*g*v;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],o=t[1],l=t[5],u=t[9],h=t[2],f=t[6],p=t[10],m=n+l+p;if(m>0){const g=.5/Math.sqrt(m+1);this._w=.25/g,this._x=(f-u)*g,this._y=(r-h)*g,this._z=(o-i)*g}else if(n>l&&n>p){const g=2*Math.sqrt(1+n-l-p);this._w=(f-u)/g,this._x=.25*g,this._y=(i+o)/g,this._z=(r+h)/g}else if(l>p){const g=2*Math.sqrt(1+l-n-p);this._w=(r-h)/g,this._x=(i+o)/g,this._y=.25*g,this._z=(u+f)/g}else{const g=2*Math.sqrt(1+p-n-l);this._w=(o-i)/g,this._x=(r+h)/g,this._y=(u+f)/g,this._z=.25*g}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(an(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,o=e._w,l=t._x,u=t._y,h=t._z,f=t._w;return this._x=n*f+o*l+i*h-r*u,this._y=i*f+o*u+r*l-n*h,this._z=r*f+o*h+n*u-i*l,this._w=o*f-n*l-i*u-r*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,o=this._w;let l=o*e._w+n*e._x+i*e._y+r*e._z;if(l<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,l=-l):this.copy(e),l>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const u=1-l*l;if(u<=Number.EPSILON){const g=1-t;return this._w=g*o+t*this._w,this._x=g*n+t*this._x,this._y=g*i+t*this._y,this._z=g*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(u),f=Math.atan2(h,l),p=Math.sin((1-t)*f)/h,m=Math.sin(t*f)/h;return this._w=o*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=r*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class N{constructor(e=0,t=0,n=0){N.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Ig.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Ig.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,o=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,o=e.y,l=e.z,u=e.w,h=u*t+o*i-l*n,f=u*n+l*t-r*i,p=u*i+r*n-o*t,m=-r*t-o*n-l*i;return this.x=h*u+m*-r+f*-l-p*-o,this.y=f*u+m*-o+p*-r-h*-l,this.z=p*u+m*-l+h*-o-f*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,o=t.x,l=t.y,u=t.z;return this.x=i*u-r*l,this.y=r*o-n*u,this.z=n*l-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Yh.copy(this).projectOnVector(e),this.sub(Yh)}reflect(e){return this.sub(Yh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(an(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Yh=new N,Ig=new Qn;class nr{constructor(e=new N(1/0,1/0,1/0),t=new N(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(gr.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(gr.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=gr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),da.copy(e.boundingBox),da.applyMatrix4(e.matrixWorld),this.union(da);else{const i=e.geometry;if(i!==void 0)if(t&&i.attributes!==void 0&&i.attributes.position!==void 0){const r=i.attributes.position;for(let o=0,l=r.count;o<l;o++)gr.fromBufferAttribute(r,o).applyMatrix4(e.matrixWorld),this.expandByPoint(gr)}else i.boundingBox===null&&i.computeBoundingBox(),da.copy(i.boundingBox),da.applyMatrix4(e.matrixWorld),this.union(da)}const n=e.children;for(let i=0,r=n.length;i<r;i++)this.expandByObject(n[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,gr),gr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(xo),cc.subVectors(this.max,xo),pa.subVectors(e.a,xo),ma.subVectors(e.b,xo),ga.subVectors(e.c,xo),Gr.subVectors(ma,pa),Vr.subVectors(ga,ma),vs.subVectors(pa,ga);let t=[0,-Gr.z,Gr.y,0,-Vr.z,Vr.y,0,-vs.z,vs.y,Gr.z,0,-Gr.x,Vr.z,0,-Vr.x,vs.z,0,-vs.x,-Gr.y,Gr.x,0,-Vr.y,Vr.x,0,-vs.y,vs.x,0];return!Zh(t,pa,ma,ga,cc)||(t=[1,0,0,0,1,0,0,0,1],!Zh(t,pa,ma,ga,cc))?!1:(uc.crossVectors(Gr,Vr),t=[uc.x,uc.y,uc.z],Zh(t,pa,ma,ga,cc))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,gr).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(gr).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(mr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),mr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),mr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),mr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),mr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),mr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),mr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),mr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(mr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const mr=[new N,new N,new N,new N,new N,new N,new N,new N],gr=new N,da=new nr,pa=new N,ma=new N,ga=new N,Gr=new N,Vr=new N,vs=new N,xo=new N,cc=new N,uc=new N,ys=new N;function Zh(s,e,t,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){ys.fromArray(s,r);const l=i.x*Math.abs(ys.x)+i.y*Math.abs(ys.y)+i.z*Math.abs(ys.z),u=e.dot(ys),h=t.dot(ys),f=n.dot(ys);if(Math.max(-Math.max(u,h,f),Math.min(u,h,f))>l)return!1}return!0}const JT=new nr,Mo=new N,Jh=new N;class Gi{constructor(e=new N,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):JT.setFromPoints(e).getCenter(n);let i=0;for(let r=0,o=e.length;r<o;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Mo.subVectors(e,this.center);const t=Mo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Mo,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Jh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Mo.copy(e.center).add(Jh)),this.expandByPoint(Mo.copy(e.center).sub(Jh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const _r=new N,Kh=new N,hc=new N,Wr=new N,Qh=new N,fc=new N,jh=new N;class $a{constructor(e=new N,t=new N(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,_r)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=_r.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(_r.copy(this.origin).addScaledVector(this.direction,t),_r.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Kh.copy(e).add(t).multiplyScalar(.5),hc.copy(t).sub(e).normalize(),Wr.copy(this.origin).sub(Kh);const r=e.distanceTo(t)*.5,o=-this.direction.dot(hc),l=Wr.dot(this.direction),u=-Wr.dot(hc),h=Wr.lengthSq(),f=Math.abs(1-o*o);let p,m,g,v;if(f>0)if(p=o*u-l,m=o*l-u,v=r*f,p>=0)if(m>=-v)if(m<=v){const M=1/f;p*=M,m*=M,g=p*(p+o*m+2*l)+m*(o*p+m+2*u)+h}else m=r,p=Math.max(0,-(o*m+l)),g=-p*p+m*(m+2*u)+h;else m=-r,p=Math.max(0,-(o*m+l)),g=-p*p+m*(m+2*u)+h;else m<=-v?(p=Math.max(0,-(-o*r+l)),m=p>0?-r:Math.min(Math.max(-r,-u),r),g=-p*p+m*(m+2*u)+h):m<=v?(p=0,m=Math.min(Math.max(-r,-u),r),g=m*(m+2*u)+h):(p=Math.max(0,-(o*r+l)),m=p>0?r:Math.min(Math.max(-r,-u),r),g=-p*p+m*(m+2*u)+h);else m=o>0?-r:r,p=Math.max(0,-(o*m+l)),g=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(Kh).addScaledVector(hc,m),g}intersectSphere(e,t){_r.subVectors(e.center,this.origin);const n=_r.dot(this.direction),i=_r.dot(_r)-n*n,r=e.radius*e.radius;if(i>r)return null;const o=Math.sqrt(r-i),l=n-o,u=n+o;return u<0?null:l<0?this.at(u,t):this.at(l,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,o,l,u;const h=1/this.direction.x,f=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),f>=0?(r=(e.min.y-m.y)*f,o=(e.max.y-m.y)*f):(r=(e.max.y-m.y)*f,o=(e.min.y-m.y)*f),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),p>=0?(l=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(l=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||l>i)||((l>n||n!==n)&&(n=l),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,_r)!==null}intersectTriangle(e,t,n,i,r){Qh.subVectors(t,e),fc.subVectors(n,e),jh.crossVectors(Qh,fc);let o=this.direction.dot(jh),l;if(o>0){if(i)return null;l=1}else if(o<0)l=-1,o=-o;else return null;Wr.subVectors(this.origin,e);const u=l*this.direction.dot(fc.crossVectors(Wr,fc));if(u<0)return null;const h=l*this.direction.dot(Qh.cross(Wr));if(h<0||u+h>o)return null;const f=-l*Wr.dot(jh);return f<0?null:this.at(f/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ot{constructor(e,t,n,i,r,o,l,u,h,f,p,m,g,v,M,y){ot.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,o,l,u,h,f,p,m,g,v,M,y)}set(e,t,n,i,r,o,l,u,h,f,p,m,g,v,M,y){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=r,_[5]=o,_[9]=l,_[13]=u,_[2]=h,_[6]=f,_[10]=p,_[14]=m,_[3]=g,_[7]=v,_[11]=M,_[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ot().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/_a.setFromMatrixColumn(e,0).length(),r=1/_a.setFromMatrixColumn(e,1).length(),o=1/_a.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,o=Math.cos(n),l=Math.sin(n),u=Math.cos(i),h=Math.sin(i),f=Math.cos(r),p=Math.sin(r);if(e.order==="XYZ"){const m=o*f,g=o*p,v=l*f,M=l*p;t[0]=u*f,t[4]=-u*p,t[8]=h,t[1]=g+v*h,t[5]=m-M*h,t[9]=-l*u,t[2]=M-m*h,t[6]=v+g*h,t[10]=o*u}else if(e.order==="YXZ"){const m=u*f,g=u*p,v=h*f,M=h*p;t[0]=m+M*l,t[4]=v*l-g,t[8]=o*h,t[1]=o*p,t[5]=o*f,t[9]=-l,t[2]=g*l-v,t[6]=M+m*l,t[10]=o*u}else if(e.order==="ZXY"){const m=u*f,g=u*p,v=h*f,M=h*p;t[0]=m-M*l,t[4]=-o*p,t[8]=v+g*l,t[1]=g+v*l,t[5]=o*f,t[9]=M-m*l,t[2]=-o*h,t[6]=l,t[10]=o*u}else if(e.order==="ZYX"){const m=o*f,g=o*p,v=l*f,M=l*p;t[0]=u*f,t[4]=v*h-g,t[8]=m*h+M,t[1]=u*p,t[5]=M*h+m,t[9]=g*h-v,t[2]=-h,t[6]=l*u,t[10]=o*u}else if(e.order==="YZX"){const m=o*u,g=o*h,v=l*u,M=l*h;t[0]=u*f,t[4]=M-m*p,t[8]=v*p+g,t[1]=p,t[5]=o*f,t[9]=-l*f,t[2]=-h*f,t[6]=g*p+v,t[10]=m-M*p}else if(e.order==="XZY"){const m=o*u,g=o*h,v=l*u,M=l*h;t[0]=u*f,t[4]=-p,t[8]=h*f,t[1]=m*p+M,t[5]=o*f,t[9]=g*p-v,t[2]=v*p-g,t[6]=l*f,t[10]=M*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(KT,e,QT)}lookAt(e,t,n){const i=this.elements;return ai.subVectors(e,t),ai.lengthSq()===0&&(ai.z=1),ai.normalize(),Xr.crossVectors(n,ai),Xr.lengthSq()===0&&(Math.abs(n.z)===1?ai.x+=1e-4:ai.z+=1e-4,ai.normalize(),Xr.crossVectors(n,ai)),Xr.normalize(),dc.crossVectors(ai,Xr),i[0]=Xr.x,i[4]=dc.x,i[8]=ai.x,i[1]=Xr.y,i[5]=dc.y,i[9]=ai.y,i[2]=Xr.z,i[6]=dc.z,i[10]=ai.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],l=n[4],u=n[8],h=n[12],f=n[1],p=n[5],m=n[9],g=n[13],v=n[2],M=n[6],y=n[10],_=n[14],b=n[3],S=n[7],w=n[11],L=n[15],T=i[0],C=i[4],R=i[8],A=i[12],D=i[1],X=i[5],ce=i[9],q=i[13],Y=i[2],W=i[6],he=i[10],j=i[14],oe=i[3],de=i[7],te=i[11],Ee=i[15];return r[0]=o*T+l*D+u*Y+h*oe,r[4]=o*C+l*X+u*W+h*de,r[8]=o*R+l*ce+u*he+h*te,r[12]=o*A+l*q+u*j+h*Ee,r[1]=f*T+p*D+m*Y+g*oe,r[5]=f*C+p*X+m*W+g*de,r[9]=f*R+p*ce+m*he+g*te,r[13]=f*A+p*q+m*j+g*Ee,r[2]=v*T+M*D+y*Y+_*oe,r[6]=v*C+M*X+y*W+_*de,r[10]=v*R+M*ce+y*he+_*te,r[14]=v*A+M*q+y*j+_*Ee,r[3]=b*T+S*D+w*Y+L*oe,r[7]=b*C+S*X+w*W+L*de,r[11]=b*R+S*ce+w*he+L*te,r[15]=b*A+S*q+w*j+L*Ee,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],o=e[1],l=e[5],u=e[9],h=e[13],f=e[2],p=e[6],m=e[10],g=e[14],v=e[3],M=e[7],y=e[11],_=e[15];return v*(+r*u*p-i*h*p-r*l*m+n*h*m+i*l*g-n*u*g)+M*(+t*u*g-t*h*m+r*o*m-i*o*g+i*h*f-r*u*f)+y*(+t*h*p-t*l*g-r*o*p+n*o*g+r*l*f-n*h*f)+_*(-i*l*f-t*u*p+t*l*m+i*o*p-n*o*m+n*u*f)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],l=e[5],u=e[6],h=e[7],f=e[8],p=e[9],m=e[10],g=e[11],v=e[12],M=e[13],y=e[14],_=e[15],b=p*y*h-M*m*h+M*u*g-l*y*g-p*u*_+l*m*_,S=v*m*h-f*y*h-v*u*g+o*y*g+f*u*_-o*m*_,w=f*M*h-v*p*h+v*l*g-o*M*g-f*l*_+o*p*_,L=v*p*u-f*M*u-v*l*m+o*M*m+f*l*y-o*p*y,T=t*b+n*S+i*w+r*L;if(T===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/T;return e[0]=b*C,e[1]=(M*m*r-p*y*r-M*i*g+n*y*g+p*i*_-n*m*_)*C,e[2]=(l*y*r-M*u*r+M*i*h-n*y*h-l*i*_+n*u*_)*C,e[3]=(p*u*r-l*m*r-p*i*h+n*m*h+l*i*g-n*u*g)*C,e[4]=S*C,e[5]=(f*y*r-v*m*r+v*i*g-t*y*g-f*i*_+t*m*_)*C,e[6]=(v*u*r-o*y*r-v*i*h+t*y*h+o*i*_-t*u*_)*C,e[7]=(o*m*r-f*u*r+f*i*h-t*m*h-o*i*g+t*u*g)*C,e[8]=w*C,e[9]=(v*p*r-f*M*r-v*n*g+t*M*g+f*n*_-t*p*_)*C,e[10]=(o*M*r-v*l*r+v*n*h-t*M*h-o*n*_+t*l*_)*C,e[11]=(f*l*r-o*p*r-f*n*h+t*p*h+o*n*g-t*l*g)*C,e[12]=L*C,e[13]=(f*M*i-v*p*i+v*n*m-t*M*m-f*n*y+t*p*y)*C,e[14]=(v*l*i-o*M*i-v*n*u+t*M*u+o*n*y-t*l*y)*C,e[15]=(o*p*i-f*l*i+f*n*u-t*p*u-o*n*m+t*l*m)*C,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,o=e.x,l=e.y,u=e.z,h=r*o,f=r*l;return this.set(h*o+n,h*l-i*u,h*u+i*l,0,h*l+i*u,f*l+n,f*u-i*o,0,h*u-i*l,f*u+i*o,r*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,o){return this.set(1,n,r,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,o=t._y,l=t._z,u=t._w,h=r+r,f=o+o,p=l+l,m=r*h,g=r*f,v=r*p,M=o*f,y=o*p,_=l*p,b=u*h,S=u*f,w=u*p,L=n.x,T=n.y,C=n.z;return i[0]=(1-(M+_))*L,i[1]=(g+w)*L,i[2]=(v-S)*L,i[3]=0,i[4]=(g-w)*T,i[5]=(1-(m+_))*T,i[6]=(y+b)*T,i[7]=0,i[8]=(v+S)*C,i[9]=(y-b)*C,i[10]=(1-(m+M))*C,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=_a.set(i[0],i[1],i[2]).length();const o=_a.set(i[4],i[5],i[6]).length(),l=_a.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Oi.copy(this);const h=1/r,f=1/o,p=1/l;return Oi.elements[0]*=h,Oi.elements[1]*=h,Oi.elements[2]*=h,Oi.elements[4]*=f,Oi.elements[5]*=f,Oi.elements[6]*=f,Oi.elements[8]*=p,Oi.elements[9]*=p,Oi.elements[10]*=p,t.setFromRotationMatrix(Oi),n.x=r,n.y=o,n.z=l,this}makePerspective(e,t,n,i,r,o,l=Qi){const u=this.elements,h=2*r/(t-e),f=2*r/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let g,v;if(l===Qi)g=-(o+r)/(o-r),v=-2*o*r/(o-r);else if(l===Yo)g=-o/(o-r),v=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+l);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=f,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=g,u[14]=v,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,r,o,l=Qi){const u=this.elements,h=1/(t-e),f=1/(n-i),p=1/(o-r),m=(t+e)*h,g=(n+i)*f;let v,M;if(l===Qi)v=(o+r)*p,M=-2*p;else if(l===Yo)v=r*p,M=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+l);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*f,u[9]=0,u[13]=-g,u[2]=0,u[6]=0,u[10]=M,u[14]=-v,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const _a=new N,Oi=new ot,KT=new N(0,0,0),QT=new N(1,1,1),Xr=new N,dc=new N,ai=new N,Ug=new ot,Dg=new Qn;class al{constructor(e=0,t=0,n=0,i=al.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],o=i[4],l=i[8],u=i[1],h=i[5],f=i[9],p=i[2],m=i[6],g=i[10];switch(t){case"XYZ":this._y=Math.asin(an(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-f,g),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-an(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(l,g),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,r),this._z=0);break;case"ZXY":this._x=Math.asin(an(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,g),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(u,r));break;case"ZYX":this._y=Math.asin(-an(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,g),this._z=Math.atan2(u,r)):(this._x=0,this._z=Math.atan2(-o,h));break;case"YZX":this._z=Math.asin(an(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-f,h),this._y=Math.atan2(-p,r)):(this._x=0,this._y=Math.atan2(l,g));break;case"XZY":this._z=Math.asin(-an(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(l,r)):(this._x=Math.atan2(-f,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Ug.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Ug,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Dg.setFromEuler(this),this.setFromQuaternion(Dg,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}al.DEFAULT_ORDER="XYZ";class _u{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let jT=0;const Og=new N,va=new Qn,vr=new ot,pc=new N,So=new N,eA=new N,tA=new Qn,Ng=new N(1,0,0),Fg=new N(0,1,0),Bg=new N(0,0,1),nA={type:"added"},zg={type:"removed"};class Pt extends Cr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:jT++}),this.uuid=di(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Pt.DEFAULT_UP.clone();const e=new N,t=new al,n=new Qn,i=new N(1,1,1);function r(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ot},normalMatrix:{value:new xt}}),this.matrix=new ot,this.matrixWorld=new ot,this.matrixAutoUpdate=Pt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Pt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new _u,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return va.setFromAxisAngle(e,t),this.quaternion.multiply(va),this}rotateOnWorldAxis(e,t){return va.setFromAxisAngle(e,t),this.quaternion.premultiply(va),this}rotateX(e){return this.rotateOnAxis(Ng,e)}rotateY(e){return this.rotateOnAxis(Fg,e)}rotateZ(e){return this.rotateOnAxis(Bg,e)}translateOnAxis(e,t){return Og.copy(e).applyQuaternion(this.quaternion),this.position.add(Og.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Ng,e)}translateY(e){return this.translateOnAxis(Fg,e)}translateZ(e){return this.translateOnAxis(Bg,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(vr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?pc.copy(e):pc.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),So.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?vr.lookAt(So,pc,this.up):vr.lookAt(pc,So,this.up),this.quaternion.setFromRotationMatrix(vr),i&&(vr.extractRotation(i.matrixWorld),va.setFromRotationMatrix(vr),this.quaternion.premultiply(va.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(nA)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(zg)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(zg)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),vr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),vr.multiply(e.parent.matrixWorld)),e.applyMatrix4(vr),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,r=this.children.length;i<r;i++){const o=this.children[i].getObjectsByProperty(e,t);o.length>0&&(n=n.concat(o))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(So,e,eA),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(So,tA,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const r=t[n];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++){const l=i[r];l.matrixWorldAutoUpdate===!0&&l.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(l,u){return l[u.uuid]===void 0&&(l[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const l=this.geometry.parameters;if(l!==void 0&&l.shapes!==void 0){const u=l.shapes;if(Array.isArray(u))for(let h=0,f=u.length;h<f;h++){const p=u[h];r(e.shapes,p)}else r(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const l=[];for(let u=0,h=this.material.length;u<h;u++)l.push(r(e.materials,this.material[u]));i.material=l}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let l=0;l<this.children.length;l++)i.children.push(this.children[l].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let l=0;l<this.animations.length;l++){const u=this.animations[l];i.animations.push(r(e.animations,u))}}if(t){const l=o(e.geometries),u=o(e.materials),h=o(e.textures),f=o(e.images),p=o(e.shapes),m=o(e.skeletons),g=o(e.animations),v=o(e.nodes);l.length>0&&(n.geometries=l),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),f.length>0&&(n.images=f),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),g.length>0&&(n.animations=g),v.length>0&&(n.nodes=v)}return n.object=i,n;function o(l){const u=[];for(const h in l){const f=l[h];delete f.metadata,u.push(f)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Pt.DEFAULT_UP=new N(0,1,0);Pt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Pt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Ni=new N,yr=new N,ef=new N,xr=new N,ya=new N,xa=new N,kg=new N,tf=new N,nf=new N,rf=new N;let mc=!1;class Kn{constructor(e=new N,t=new N,n=new N){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Ni.subVectors(e,t),i.cross(Ni);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Ni.subVectors(i,t),yr.subVectors(n,t),ef.subVectors(e,t);const o=Ni.dot(Ni),l=Ni.dot(yr),u=Ni.dot(ef),h=yr.dot(yr),f=yr.dot(ef),p=o*h-l*l;if(p===0)return r.set(-2,-1,-1);const m=1/p,g=(h*u-l*f)*m,v=(o*f-l*u)*m;return r.set(1-g-v,v,g)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,xr),xr.x>=0&&xr.y>=0&&xr.x+xr.y<=1}static getUV(e,t,n,i,r,o,l,u){return mc===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),mc=!0),this.getInterpolation(e,t,n,i,r,o,l,u)}static getInterpolation(e,t,n,i,r,o,l,u){return this.getBarycoord(e,t,n,i,xr),u.setScalar(0),u.addScaledVector(r,xr.x),u.addScaledVector(o,xr.y),u.addScaledVector(l,xr.z),u}static isFrontFacing(e,t,n,i){return Ni.subVectors(n,t),yr.subVectors(e,t),Ni.cross(yr).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Ni.subVectors(this.c,this.b),yr.subVectors(this.a,this.b),Ni.cross(yr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Kn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Kn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return mc===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),mc=!0),Kn.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}getInterpolation(e,t,n,i,r){return Kn.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return Kn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Kn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let o,l;ya.subVectors(i,n),xa.subVectors(r,n),tf.subVectors(e,n);const u=ya.dot(tf),h=xa.dot(tf);if(u<=0&&h<=0)return t.copy(n);nf.subVectors(e,i);const f=ya.dot(nf),p=xa.dot(nf);if(f>=0&&p<=f)return t.copy(i);const m=u*p-f*h;if(m<=0&&u>=0&&f<=0)return o=u/(u-f),t.copy(n).addScaledVector(ya,o);rf.subVectors(e,r);const g=ya.dot(rf),v=xa.dot(rf);if(v>=0&&g<=v)return t.copy(r);const M=g*h-u*v;if(M<=0&&h>=0&&v<=0)return l=h/(h-v),t.copy(n).addScaledVector(xa,l);const y=f*v-g*p;if(y<=0&&p-f>=0&&g-v>=0)return kg.subVectors(r,i),l=(p-f)/(p-f+(g-v)),t.copy(i).addScaledVector(kg,l);const _=1/(y+M+m);return o=M*_,l=m*_,t.copy(n).addScaledVector(ya,o).addScaledVector(xa,l)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let iA=0;class Fn extends Cr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:iA++}),this.uuid=di(),this.name="",this.type="Material",this.blending=Ns,this.side=Ar,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=gd,this.blendDst=_d,this.blendEquation=Rs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=au,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=mv,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=iu,this.stencilZFail=iu,this.stencilZPass=iu,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Ns&&(n.blending=this.blending),this.side!==Ar&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const o=[];for(const l in r){const u=r[l];delete u.metadata,o.push(u)}return o}if(t){const r=i(e.textures),o=i(e.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const Tv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Fi={h:0,s:0,l:0},gc={h:0,s:0,l:0};function sf(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class Le{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=mt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,li.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=li.workingColorSpace){return this.r=e,this.g=t,this.b=n,li.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=li.workingColorSpace){if(e=Rd(e,1),t=an(t,0,1),n=an(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,o=2*n-r;this.r=sf(o,r,e+1/3),this.g=sf(o,r,e),this.b=sf(o,r,e-1/3)}return li.toWorkingColorSpace(this,i),this}setStyle(e,t=mt){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=i[1],l=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=mt){const n=Tv[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Ba(e.r),this.g=Ba(e.g),this.b=Ba(e.b),this}copyLinearToSRGB(e){return this.r=$h(e.r),this.g=$h(e.g),this.b=$h(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=mt){return li.fromWorkingColorSpace(Un.copy(this),e),Math.round(an(Un.r*255,0,255))*65536+Math.round(an(Un.g*255,0,255))*256+Math.round(an(Un.b*255,0,255))}getHexString(e=mt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=li.workingColorSpace){li.fromWorkingColorSpace(Un.copy(this),t);const n=Un.r,i=Un.g,r=Un.b,o=Math.max(n,i,r),l=Math.min(n,i,r);let u,h;const f=(l+o)/2;if(l===o)u=0,h=0;else{const p=o-l;switch(h=f<=.5?p/(o+l):p/(2-o-l),o){case n:u=(i-r)/p+(i<r?6:0);break;case i:u=(r-n)/p+2;break;case r:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=f,e}getRGB(e,t=li.workingColorSpace){return li.fromWorkingColorSpace(Un.copy(this),t),e.r=Un.r,e.g=Un.g,e.b=Un.b,e}getStyle(e=mt){li.fromWorkingColorSpace(Un.copy(this),e);const t=Un.r,n=Un.g,i=Un.b;return e!==mt?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Fi),Fi.h+=e,Fi.s+=t,Fi.l+=n,this.setHSL(Fi.h,Fi.s,Fi.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Fi),e.getHSL(gc);const n=Oo(Fi.h,gc.h,t),i=Oo(Fi.s,gc.s,t),r=Oo(Fi.l,gc.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Un=new Le;Le.NAMES=Tv;class Pr extends Fn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=sl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Sr=rA();function rA(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const r=new Uint32Array(2048),o=new Uint32Array(64),l=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,f=0;for(;!(h&8388608);)h<<=1,f-=8388608;h&=-8388609,f+=947912704,r[u]=h|f}for(let u=1024;u<2048;++u)r[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)o[u]=u<<23;o[31]=1199570944,o[32]=2147483648;for(let u=33;u<63;++u)o[u]=2147483648+(u-32<<23);o[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(l[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:o,offsetTable:l}}function Jn(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=an(s,-65504,65504),Sr.floatView[0]=s;const e=Sr.uint32View[0],t=e>>23&511;return Sr.baseTable[t]+((e&8388607)>>Sr.shiftTable[t])}function Io(s){const e=s>>10;return Sr.uint32View[0]=Sr.mantissaTable[Sr.offsetTable[e]+(s&1023)]+Sr.exponentTable[e],Sr.floatView[0]}const sA={toHalfFloat:Jn,fromHalfFloat:Io},pn=new N,_c=new fe;class Wt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=qo,this.updateRange={offset:0,count:-1},this.gpuType=Ki,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)_c.fromBufferAttribute(this,t),_c.applyMatrix3(e),this.setXY(t,_c.x,_c.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)pn.fromBufferAttribute(this,t),pn.applyMatrix3(e),this.setXYZ(t,pn.x,pn.y,pn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)pn.fromBufferAttribute(this,t),pn.applyMatrix4(e),this.setXYZ(t,pn.x,pn.y,pn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)pn.fromBufferAttribute(this,t),pn.applyNormalMatrix(e),this.setXYZ(t,pn.x,pn.y,pn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)pn.fromBufferAttribute(this,t),pn.transformDirection(e),this.setXYZ(t,pn.x,pn.y,pn.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=fi(t,this.array)),t}setX(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=fi(t,this.array)),t}setY(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=fi(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=fi(t,this.array)),t}setW(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array),r=Mt(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==qo&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class aA extends Wt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class oA extends Wt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class lA extends Wt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class cA extends Wt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Ld extends Wt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class uA extends Wt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Id extends Wt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class hA extends Wt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=Io(this.array[e*this.itemSize]);return this.normalized&&(t=fi(t,this.array)),t}setX(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize]=Jn(t),this}getY(e){let t=Io(this.array[e*this.itemSize+1]);return this.normalized&&(t=fi(t,this.array)),t}setY(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+1]=Jn(t),this}getZ(e){let t=Io(this.array[e*this.itemSize+2]);return this.normalized&&(t=fi(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+2]=Jn(t),this}getW(e){let t=Io(this.array[e*this.itemSize+3]);return this.normalized&&(t=fi(t,this.array)),t}setW(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+3]=Jn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array)),this.array[e+0]=Jn(t),this.array[e+1]=Jn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array)),this.array[e+0]=Jn(t),this.array[e+1]=Jn(n),this.array[e+2]=Jn(i),this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array),r=Mt(r,this.array)),this.array[e+0]=Jn(t),this.array[e+1]=Jn(n),this.array[e+2]=Jn(i),this.array[e+3]=Jn(r),this}}class Ve extends Wt{constructor(e,t,n){super(new Float32Array(e),t,n)}}class fA extends Wt{constructor(e,t,n){super(new Float64Array(e),t,n)}}let dA=0;const wi=new ot,af=new Pt,Ma=new N,oi=new nr,bo=new nr,Sn=new N;class Et extends Cr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:dA++}),this.uuid=di(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(wv(e)?Id:Ld)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new xt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return wi.makeRotationFromQuaternion(e),this.applyMatrix4(wi),this}rotateX(e){return wi.makeRotationX(e),this.applyMatrix4(wi),this}rotateY(e){return wi.makeRotationY(e),this.applyMatrix4(wi),this}rotateZ(e){return wi.makeRotationZ(e),this.applyMatrix4(wi),this}translate(e,t,n){return wi.makeTranslation(e,t,n),this.applyMatrix4(wi),this}scale(e,t,n){return wi.makeScale(e,t,n),this.applyMatrix4(wi),this}lookAt(e){return af.lookAt(e),af.updateMatrix(),this.applyMatrix4(af.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ma).negate(),this.translate(Ma.x,Ma.y,Ma.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Ve(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new nr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new N(-1/0,-1/0,-1/0),new N(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];oi.setFromBufferAttribute(r),this.morphTargetsRelative?(Sn.addVectors(this.boundingBox.min,oi.min),this.boundingBox.expandByPoint(Sn),Sn.addVectors(this.boundingBox.max,oi.max),this.boundingBox.expandByPoint(Sn)):(this.boundingBox.expandByPoint(oi.min),this.boundingBox.expandByPoint(oi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Gi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new N,1/0);return}if(e){const n=this.boundingSphere.center;if(oi.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const l=t[r];bo.setFromBufferAttribute(l),this.morphTargetsRelative?(Sn.addVectors(oi.min,bo.min),oi.expandByPoint(Sn),Sn.addVectors(oi.max,bo.max),oi.expandByPoint(Sn)):(oi.expandByPoint(bo.min),oi.expandByPoint(bo.max))}oi.getCenter(n);let i=0;for(let r=0,o=e.count;r<o;r++)Sn.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(Sn));if(t)for(let r=0,o=t.length;r<o;r++){const l=t[r],u=this.morphTargetsRelative;for(let h=0,f=l.count;h<f;h++)Sn.fromBufferAttribute(l,h),u&&(Ma.fromBufferAttribute(e,h),Sn.add(Ma)),i=Math.max(i,n.distanceToSquared(Sn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,r=t.normal.array,o=t.uv.array,l=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Wt(new Float32Array(4*l),4));const u=this.getAttribute("tangent").array,h=[],f=[];for(let D=0;D<l;D++)h[D]=new N,f[D]=new N;const p=new N,m=new N,g=new N,v=new fe,M=new fe,y=new fe,_=new N,b=new N;function S(D,X,ce){p.fromArray(i,D*3),m.fromArray(i,X*3),g.fromArray(i,ce*3),v.fromArray(o,D*2),M.fromArray(o,X*2),y.fromArray(o,ce*2),m.sub(p),g.sub(p),M.sub(v),y.sub(v);const q=1/(M.x*y.y-y.x*M.y);isFinite(q)&&(_.copy(m).multiplyScalar(y.y).addScaledVector(g,-M.y).multiplyScalar(q),b.copy(g).multiplyScalar(M.x).addScaledVector(m,-y.x).multiplyScalar(q),h[D].add(_),h[X].add(_),h[ce].add(_),f[D].add(b),f[X].add(b),f[ce].add(b))}let w=this.groups;w.length===0&&(w=[{start:0,count:n.length}]);for(let D=0,X=w.length;D<X;++D){const ce=w[D],q=ce.start,Y=ce.count;for(let W=q,he=q+Y;W<he;W+=3)S(n[W+0],n[W+1],n[W+2])}const L=new N,T=new N,C=new N,R=new N;function A(D){C.fromArray(r,D*3),R.copy(C);const X=h[D];L.copy(X),L.sub(C.multiplyScalar(C.dot(X))).normalize(),T.crossVectors(R,X);const q=T.dot(f[D])<0?-1:1;u[D*4]=L.x,u[D*4+1]=L.y,u[D*4+2]=L.z,u[D*4+3]=q}for(let D=0,X=w.length;D<X;++D){const ce=w[D],q=ce.start,Y=ce.count;for(let W=q,he=q+Y;W<he;W+=3)A(n[W+0]),A(n[W+1]),A(n[W+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Wt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,g=n.count;m<g;m++)n.setXYZ(m,0,0,0);const i=new N,r=new N,o=new N,l=new N,u=new N,h=new N,f=new N,p=new N;if(e)for(let m=0,g=e.count;m<g;m+=3){const v=e.getX(m+0),M=e.getX(m+1),y=e.getX(m+2);i.fromBufferAttribute(t,v),r.fromBufferAttribute(t,M),o.fromBufferAttribute(t,y),f.subVectors(o,r),p.subVectors(i,r),f.cross(p),l.fromBufferAttribute(n,v),u.fromBufferAttribute(n,M),h.fromBufferAttribute(n,y),l.add(f),u.add(f),h.add(f),n.setXYZ(v,l.x,l.y,l.z),n.setXYZ(M,u.x,u.y,u.z),n.setXYZ(y,h.x,h.y,h.z)}else for(let m=0,g=t.count;m<g;m+=3)i.fromBufferAttribute(t,m+0),r.fromBufferAttribute(t,m+1),o.fromBufferAttribute(t,m+2),f.subVectors(o,r),p.subVectors(i,r),f.cross(p),n.setXYZ(m+0,f.x,f.y,f.z),n.setXYZ(m+1,f.x,f.y,f.z),n.setXYZ(m+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Sn.fromBufferAttribute(e,t),Sn.normalize(),e.setXYZ(t,Sn.x,Sn.y,Sn.z)}toNonIndexed(){function e(l,u){const h=l.array,f=l.itemSize,p=l.normalized,m=new h.constructor(u.length*f);let g=0,v=0;for(let M=0,y=u.length;M<y;M++){l.isInterleavedBufferAttribute?g=u[M]*l.data.stride+l.offset:g=u[M]*f;for(let _=0;_<f;_++)m[v++]=h[g++]}return new Wt(m,f,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Et,n=this.index.array,i=this.attributes;for(const l in i){const u=i[l],h=e(u,n);t.setAttribute(l,h)}const r=this.morphAttributes;for(const l in r){const u=[],h=r[l];for(let f=0,p=h.length;f<p;f++){const m=h[f],g=e(m,n);u.push(g)}t.morphAttributes[l]=u}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let l=0,u=o.length;l<u;l++){const h=o[l];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let r=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],f=[];for(let p=0,m=h.length;p<m;p++){const g=h[p];f.push(g.toJSON(e.data))}f.length>0&&(i[u]=f,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const l=this.boundingSphere;return l!==null&&(e.data.boundingSphere={center:l.center.toArray(),radius:l.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const f=i[h];this.setAttribute(h,f.clone(t))}const r=e.morphAttributes;for(const h in r){const f=[],p=r[h];for(let m=0,g=p.length;m<g;m++)f.push(p[m].clone(t));this.morphAttributes[h]=f}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let h=0,f=o.length;h<f;h++){const p=o[h];this.addGroup(p.start,p.count,p.materialIndex)}const l=e.boundingBox;l!==null&&(this.boundingBox=l.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Hg=new ot,xs=new $a,vc=new Gi,Gg=new N,Sa=new N,ba=new N,Ea=new N,of=new N,yc=new N,xc=new fe,Mc=new fe,Sc=new fe,Vg=new N,Wg=new N,Xg=new N,bc=new N,Ec=new N;class wn extends Pt{constructor(e=new Et,t=new Pr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const l=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const l=this.morphTargetInfluences;if(r&&l){yc.set(0,0,0);for(let u=0,h=r.length;u<h;u++){const f=l[u],p=r[u];f!==0&&(of.fromBufferAttribute(p,e),o?yc.addScaledVector(of,f):yc.addScaledVector(of.sub(t),f))}t.add(yc)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),vc.copy(n.boundingSphere),vc.applyMatrix4(r),xs.copy(e.ray).recast(e.near),!(vc.containsPoint(xs.origin)===!1&&(xs.intersectSphere(vc,Gg)===null||xs.origin.distanceToSquared(Gg)>(e.far-e.near)**2))&&(Hg.copy(r).invert(),xs.copy(e.ray).applyMatrix4(Hg),!(n.boundingBox!==null&&xs.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,xs)))}_computeIntersections(e,t,n){let i;const r=this.geometry,o=this.material,l=r.index,u=r.attributes.position,h=r.attributes.uv,f=r.attributes.uv1,p=r.attributes.normal,m=r.groups,g=r.drawRange;if(l!==null)if(Array.isArray(o))for(let v=0,M=m.length;v<M;v++){const y=m[v],_=o[y.materialIndex],b=Math.max(y.start,g.start),S=Math.min(l.count,Math.min(y.start+y.count,g.start+g.count));for(let w=b,L=S;w<L;w+=3){const T=l.getX(w),C=l.getX(w+1),R=l.getX(w+2);i=wc(this,_,e,n,h,f,p,T,C,R),i&&(i.faceIndex=Math.floor(w/3),i.face.materialIndex=y.materialIndex,t.push(i))}}else{const v=Math.max(0,g.start),M=Math.min(l.count,g.start+g.count);for(let y=v,_=M;y<_;y+=3){const b=l.getX(y),S=l.getX(y+1),w=l.getX(y+2);i=wc(this,o,e,n,h,f,p,b,S,w),i&&(i.faceIndex=Math.floor(y/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(o))for(let v=0,M=m.length;v<M;v++){const y=m[v],_=o[y.materialIndex],b=Math.max(y.start,g.start),S=Math.min(u.count,Math.min(y.start+y.count,g.start+g.count));for(let w=b,L=S;w<L;w+=3){const T=w,C=w+1,R=w+2;i=wc(this,_,e,n,h,f,p,T,C,R),i&&(i.faceIndex=Math.floor(w/3),i.face.materialIndex=y.materialIndex,t.push(i))}}else{const v=Math.max(0,g.start),M=Math.min(u.count,g.start+g.count);for(let y=v,_=M;y<_;y+=3){const b=y,S=y+1,w=y+2;i=wc(this,o,e,n,h,f,p,b,S,w),i&&(i.faceIndex=Math.floor(y/3),t.push(i))}}}}function pA(s,e,t,n,i,r,o,l){let u;if(e.side===Vn?u=n.intersectTriangle(o,r,i,!0,l):u=n.intersectTriangle(i,r,o,e.side===Ar,l),u===null)return null;Ec.copy(l),Ec.applyMatrix4(s.matrixWorld);const h=t.ray.origin.distanceTo(Ec);return h<t.near||h>t.far?null:{distance:h,point:Ec.clone(),object:s}}function wc(s,e,t,n,i,r,o,l,u,h){s.getVertexPosition(l,Sa),s.getVertexPosition(u,ba),s.getVertexPosition(h,Ea);const f=pA(s,e,t,n,Sa,ba,Ea,bc);if(f){i&&(xc.fromBufferAttribute(i,l),Mc.fromBufferAttribute(i,u),Sc.fromBufferAttribute(i,h),f.uv=Kn.getInterpolation(bc,Sa,ba,Ea,xc,Mc,Sc,new fe)),r&&(xc.fromBufferAttribute(r,l),Mc.fromBufferAttribute(r,u),Sc.fromBufferAttribute(r,h),f.uv1=Kn.getInterpolation(bc,Sa,ba,Ea,xc,Mc,Sc,new fe),f.uv2=f.uv1),o&&(Vg.fromBufferAttribute(o,l),Wg.fromBufferAttribute(o,u),Xg.fromBufferAttribute(o,h),f.normal=Kn.getInterpolation(bc,Sa,ba,Ea,Vg,Wg,Xg,new N),f.normal.dot(n.direction)>0&&f.normal.multiplyScalar(-1));const p={a:l,b:u,c:h,normal:new N,materialIndex:0};Kn.getNormal(Sa,ba,Ea,p.normal),f.face=p}return f}class as extends Et{constructor(e=1,t=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const l=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const u=[],h=[],f=[],p=[];let m=0,g=0;v("z","y","x",-1,-1,n,t,e,o,r,0),v("z","y","x",1,-1,n,t,-e,o,r,1),v("x","z","y",1,1,e,n,t,i,o,2),v("x","z","y",1,-1,e,n,-t,i,o,3),v("x","y","z",1,-1,e,t,n,i,r,4),v("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(u),this.setAttribute("position",new Ve(h,3)),this.setAttribute("normal",new Ve(f,3)),this.setAttribute("uv",new Ve(p,2));function v(M,y,_,b,S,w,L,T,C,R,A){const D=w/C,X=L/R,ce=w/2,q=L/2,Y=T/2,W=C+1,he=R+1;let j=0,oe=0;const de=new N;for(let te=0;te<he;te++){const Ee=te*X-q;for(let Q=0;Q<W;Q++){const ge=Q*D-ce;de[M]=ge*b,de[y]=Ee*S,de[_]=Y,h.push(de.x,de.y,de.z),de[M]=0,de[y]=0,de[_]=T>0?1:-1,f.push(de.x,de.y,de.z),p.push(Q/C),p.push(1-te/R),j+=1}}for(let te=0;te<R;te++)for(let Ee=0;Ee<C;Ee++){const Q=m+Ee+W*te,ge=m+Ee+W*(te+1),_e=m+(Ee+1)+W*(te+1),Pe=m+(Ee+1)+W*te;u.push(Q,ge,Pe),u.push(ge,_e,Pe),oe+=6}l.addGroup(g,oe,A),g+=oe,m+=j}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new as(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ga(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Gn(s){const e={};for(let t=0;t<s.length;t++){const n=Ga(s[t]);for(const i in n)e[i]=n[i]}return e}function mA(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function Av(s){return s.getRenderTarget()===null?s.outputColorSpace:ki}const Rv={clone:Ga,merge:Gn};var gA=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,_A=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class tr extends Fn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=gA,this.fragmentShader=_A,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ga(e.uniforms),this.uniformsGroups=mA(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}let vu=class extends Pt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ot,this.projectionMatrix=new ot,this.projectionMatrixInverse=new ot,this.coordinateSystem=Qi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};class En extends vu{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Ha*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Fs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Ha*2*Math.atan(Math.tan(Fs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Fs*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const u=o.fullWidth,h=o.fullHeight;r+=o.offsetX*i/u,t-=o.offsetY*n/h,i*=o.width/u,n*=o.height/h}const l=this.filmOffset;l!==0&&(r+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const wa=-90,Ta=1;class Cv extends Pt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null;const i=new En(wa,Ta,e,t);i.layers=this.layers,this.add(i);const r=new En(wa,Ta,e,t);r.layers=this.layers,this.add(r);const o=new En(wa,Ta,e,t);o.layers=this.layers,this.add(o);const l=new En(wa,Ta,e,t);l.layers=this.layers,this.add(l);const u=new En(wa,Ta,e,t);u.layers=this.layers,this.add(u);const h=new En(wa,Ta,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,o,l,u]=t;for(const h of t)this.remove(h);if(e===Qi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),l.up.set(0,1,0),l.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===Yo)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),l.up.set(0,-1,0),l.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[i,r,o,l,u,h]=this.children,f=e.getRenderTarget(),p=e.toneMapping,m=e.xr.enabled;e.toneMapping=ji,e.xr.enabled=!1;const g=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,l),e.setRenderTarget(n,4),e.render(t,u),n.texture.generateMipmaps=g,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(f),e.toneMapping=p,e.xr.enabled=m,n.texture.needsPMREMUpdate=!0}}class ol extends fn{constructor(e,t,n,i,r,o,l,u,h,f){e=e!==void 0?e:[],t=t!==void 0?t:Kr,super(e,t,n,i,r,o,l,u,h,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Pv extends Hi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(No("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===Tr?mt:Jr),this.texture=new ol(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:hn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new as(5,5,5),r=new tr({name:"CubemapFromEquirect",uniforms:Ga(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Vn,blending:Er});r.uniforms.tEquirect.value=t;const o=new wn(i,r),l=t.minFilter;return t.minFilter===jr&&(t.minFilter=hn),new Cv(1,10,this).update(e,o),t.minFilter=l,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(r)}}const lf=new N,vA=new N,yA=new xt;class qr{constructor(e=new N(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=lf.subVectors(n,t).cross(vA.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(lf),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||yA.getNormalMatrix(e),i=this.coplanarPoint(lf).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ms=new Gi,Tc=new N;class yu{constructor(e=new qr,t=new qr,n=new qr,i=new qr,r=new qr,o=new qr){this.planes=[e,t,n,i,r,o]}set(e,t,n,i,r,o){const l=this.planes;return l[0].copy(e),l[1].copy(t),l[2].copy(n),l[3].copy(i),l[4].copy(r),l[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Qi){const n=this.planes,i=e.elements,r=i[0],o=i[1],l=i[2],u=i[3],h=i[4],f=i[5],p=i[6],m=i[7],g=i[8],v=i[9],M=i[10],y=i[11],_=i[12],b=i[13],S=i[14],w=i[15];if(n[0].setComponents(u-r,m-h,y-g,w-_).normalize(),n[1].setComponents(u+r,m+h,y+g,w+_).normalize(),n[2].setComponents(u+o,m+f,y+v,w+b).normalize(),n[3].setComponents(u-o,m-f,y-v,w-b).normalize(),n[4].setComponents(u-l,m-p,y-M,w-S).normalize(),t===Qi)n[5].setComponents(u+l,m+p,y+M,w+S).normalize();else if(t===Yo)n[5].setComponents(l,p,M,S).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Ms.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Ms.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Ms)}intersectsSprite(e){return Ms.center.set(0,0,0),Ms.radius=.7071067811865476,Ms.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ms)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Tc.x=i.normal.x>0?e.max.x:e.min.x,Tc.y=i.normal.y>0?e.max.y:e.min.y,Tc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Tc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Lv(){let s=null,e=!1,t=null,n=null;function i(r,o){t(r,o),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function xA(s,e){const t=e.isWebGL2,n=new WeakMap;function i(h,f){const p=h.array,m=h.usage,g=s.createBuffer();s.bindBuffer(f,g),s.bufferData(f,p,m),h.onUploadCallback();let v;if(p instanceof Float32Array)v=s.FLOAT;else if(p instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)v=s.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else v=s.UNSIGNED_SHORT;else if(p instanceof Int16Array)v=s.SHORT;else if(p instanceof Uint32Array)v=s.UNSIGNED_INT;else if(p instanceof Int32Array)v=s.INT;else if(p instanceof Int8Array)v=s.BYTE;else if(p instanceof Uint8Array)v=s.UNSIGNED_BYTE;else if(p instanceof Uint8ClampedArray)v=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+p);return{buffer:g,type:v,bytesPerElement:p.BYTES_PER_ELEMENT,version:h.version}}function r(h,f,p){const m=f.array,g=f.updateRange;s.bindBuffer(p,h),g.count===-1?s.bufferSubData(p,0,m):(t?s.bufferSubData(p,g.offset*m.BYTES_PER_ELEMENT,m,g.offset,g.count):s.bufferSubData(p,g.offset*m.BYTES_PER_ELEMENT,m.subarray(g.offset,g.offset+g.count)),g.count=-1),f.onUploadCallback()}function o(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function l(h){h.isInterleavedBufferAttribute&&(h=h.data);const f=n.get(h);f&&(s.deleteBuffer(f.buffer),n.delete(h))}function u(h,f){if(h.isGLBufferAttribute){const m=n.get(h);(!m||m.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const p=n.get(h);p===void 0?n.set(h,i(h,f)):p.version<h.version&&(r(p.buffer,h,f),p.version=h.version)}return{get:o,remove:l,update:u}}class qa extends Et{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,o=t/2,l=Math.floor(n),u=Math.floor(i),h=l+1,f=u+1,p=e/l,m=t/u,g=[],v=[],M=[],y=[];for(let _=0;_<f;_++){const b=_*m-o;for(let S=0;S<h;S++){const w=S*p-r;v.push(w,-b,0),M.push(0,0,1),y.push(S/l),y.push(1-_/u)}}for(let _=0;_<u;_++)for(let b=0;b<l;b++){const S=b+h*_,w=b+h*(_+1),L=b+1+h*(_+1),T=b+1+h*_;g.push(S,w,T),g.push(w,L,T)}this.setIndex(g),this.setAttribute("position",new Ve(v,3)),this.setAttribute("normal",new Ve(M,3)),this.setAttribute("uv",new Ve(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new qa(e.width,e.height,e.widthSegments,e.heightSegments)}}var MA=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,SA=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,bA=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,EA=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,wA=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,TA=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,AA="vec3 transformed = vec3( position );",RA=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,CA=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,PA=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,LA=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,IA=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,UA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,DA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,OA=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,NA=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,FA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,BA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,zA=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,kA=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,HA=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,GA=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,VA=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,WA=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,XA=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,$A=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,qA="gl_FragColor = linearToOutputTexel( gl_FragColor );",YA=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,ZA=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,JA=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,KA=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,QA=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,jA=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,eR=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,tR=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,nR=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,iR=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,rR=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,sR=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,aR=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,oR=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,lR=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,cR=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,uR=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,hR=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,fR=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,dR=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,pR=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,mR=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,gR=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,_R=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,vR=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,yR=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,xR=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,MR=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,SR=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,bR=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,ER=`#ifdef USE_MAP
	diffuseColor *= texture2D( map, vMapUv );
#endif`,wR=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,TR=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,AR=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,RR=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,CR=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,PR=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,LR=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,IR=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,UR=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,DR=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,OR=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,NR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,FR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,BR=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,zR=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,kR=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,HR=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,GR=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,VR=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,WR=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,XR=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,$R=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,qR=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,YR=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,ZR=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,JR=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,KR=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,QR=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,jR=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,eC=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,tC=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,nC=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,iC=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,rC=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,sC=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,aC=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,oC=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,lC=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,cC=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,uC=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,hC=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,fC=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,dC=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,pC=`#ifdef USE_UV
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,mC=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const gC=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,_C=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,vC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,yC=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,xC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,MC=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,SC=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,bC=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,EC=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,wC=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,TC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,AC=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,RC=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,CC=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,PC=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,LC=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,IC=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,UC=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,DC=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,OC=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,NC=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,FC=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,BC=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,zC=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kC=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,HC=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,GC=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,VC=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,WC=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,XC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,$C=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,qC=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,YC=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,ZC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,yt={alphamap_fragment:MA,alphamap_pars_fragment:SA,alphatest_fragment:bA,alphatest_pars_fragment:EA,aomap_fragment:wA,aomap_pars_fragment:TA,begin_vertex:AA,beginnormal_vertex:RA,bsdfs:CA,iridescence_fragment:PA,bumpmap_pars_fragment:LA,clipping_planes_fragment:IA,clipping_planes_pars_fragment:UA,clipping_planes_pars_vertex:DA,clipping_planes_vertex:OA,color_fragment:NA,color_pars_fragment:FA,color_pars_vertex:BA,color_vertex:zA,common:kA,cube_uv_reflection_fragment:HA,defaultnormal_vertex:GA,displacementmap_pars_vertex:VA,displacementmap_vertex:WA,emissivemap_fragment:XA,emissivemap_pars_fragment:$A,encodings_fragment:qA,encodings_pars_fragment:YA,envmap_fragment:ZA,envmap_common_pars_fragment:JA,envmap_pars_fragment:KA,envmap_pars_vertex:QA,envmap_physical_pars_fragment:uR,envmap_vertex:jA,fog_vertex:eR,fog_pars_vertex:tR,fog_fragment:nR,fog_pars_fragment:iR,gradientmap_pars_fragment:rR,lightmap_fragment:sR,lightmap_pars_fragment:aR,lights_lambert_fragment:oR,lights_lambert_pars_fragment:lR,lights_pars_begin:cR,lights_toon_fragment:hR,lights_toon_pars_fragment:fR,lights_phong_fragment:dR,lights_phong_pars_fragment:pR,lights_physical_fragment:mR,lights_physical_pars_fragment:gR,lights_fragment_begin:_R,lights_fragment_maps:vR,lights_fragment_end:yR,logdepthbuf_fragment:xR,logdepthbuf_pars_fragment:MR,logdepthbuf_pars_vertex:SR,logdepthbuf_vertex:bR,map_fragment:ER,map_pars_fragment:wR,map_particle_fragment:TR,map_particle_pars_fragment:AR,metalnessmap_fragment:RR,metalnessmap_pars_fragment:CR,morphcolor_vertex:PR,morphnormal_vertex:LR,morphtarget_pars_vertex:IR,morphtarget_vertex:UR,normal_fragment_begin:DR,normal_fragment_maps:OR,normal_pars_fragment:NR,normal_pars_vertex:FR,normal_vertex:BR,normalmap_pars_fragment:zR,clearcoat_normal_fragment_begin:kR,clearcoat_normal_fragment_maps:HR,clearcoat_pars_fragment:GR,iridescence_pars_fragment:VR,output_fragment:WR,packing:XR,premultiplied_alpha_fragment:$R,project_vertex:qR,dithering_fragment:YR,dithering_pars_fragment:ZR,roughnessmap_fragment:JR,roughnessmap_pars_fragment:KR,shadowmap_pars_fragment:QR,shadowmap_pars_vertex:jR,shadowmap_vertex:eC,shadowmask_pars_fragment:tC,skinbase_vertex:nC,skinning_pars_vertex:iC,skinning_vertex:rC,skinnormal_vertex:sC,specularmap_fragment:aC,specularmap_pars_fragment:oC,tonemapping_fragment:lC,tonemapping_pars_fragment:cC,transmission_fragment:uC,transmission_pars_fragment:hC,uv_pars_fragment:fC,uv_pars_vertex:dC,uv_vertex:pC,worldpos_vertex:mC,background_vert:gC,background_frag:_C,backgroundCube_vert:vC,backgroundCube_frag:yC,cube_vert:xC,cube_frag:MC,depth_vert:SC,depth_frag:bC,distanceRGBA_vert:EC,distanceRGBA_frag:wC,equirect_vert:TC,equirect_frag:AC,linedashed_vert:RC,linedashed_frag:CC,meshbasic_vert:PC,meshbasic_frag:LC,meshlambert_vert:IC,meshlambert_frag:UC,meshmatcap_vert:DC,meshmatcap_frag:OC,meshnormal_vert:NC,meshnormal_frag:FC,meshphong_vert:BC,meshphong_frag:zC,meshphysical_vert:kC,meshphysical_frag:HC,meshtoon_vert:GC,meshtoon_frag:VC,points_vert:WC,points_frag:XC,shadow_vert:$C,shadow_frag:qC,sprite_vert:YC,sprite_frag:ZC},Te={common:{diffuse:{value:new Le(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new xt},alphaMap:{value:null},alphaMapTransform:{value:new xt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new xt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new xt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new xt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new xt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new xt},normalScale:{value:new fe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new xt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new xt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new xt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new xt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Le(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Le(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new xt},alphaTest:{value:0},uvTransform:{value:new xt}},sprite:{diffuse:{value:new Le(16777215)},opacity:{value:1},center:{value:new fe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new xt},alphaMap:{value:null},alphaMapTransform:{value:new xt},alphaTest:{value:0}}},Bi={basic:{uniforms:Gn([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.fog]),vertexShader:yt.meshbasic_vert,fragmentShader:yt.meshbasic_frag},lambert:{uniforms:Gn([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,Te.lights,{emissive:{value:new Le(0)}}]),vertexShader:yt.meshlambert_vert,fragmentShader:yt.meshlambert_frag},phong:{uniforms:Gn([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,Te.lights,{emissive:{value:new Le(0)},specular:{value:new Le(1118481)},shininess:{value:30}}]),vertexShader:yt.meshphong_vert,fragmentShader:yt.meshphong_frag},standard:{uniforms:Gn([Te.common,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.roughnessmap,Te.metalnessmap,Te.fog,Te.lights,{emissive:{value:new Le(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:yt.meshphysical_vert,fragmentShader:yt.meshphysical_frag},toon:{uniforms:Gn([Te.common,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.gradientmap,Te.fog,Te.lights,{emissive:{value:new Le(0)}}]),vertexShader:yt.meshtoon_vert,fragmentShader:yt.meshtoon_frag},matcap:{uniforms:Gn([Te.common,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,{matcap:{value:null}}]),vertexShader:yt.meshmatcap_vert,fragmentShader:yt.meshmatcap_frag},points:{uniforms:Gn([Te.points,Te.fog]),vertexShader:yt.points_vert,fragmentShader:yt.points_frag},dashed:{uniforms:Gn([Te.common,Te.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:yt.linedashed_vert,fragmentShader:yt.linedashed_frag},depth:{uniforms:Gn([Te.common,Te.displacementmap]),vertexShader:yt.depth_vert,fragmentShader:yt.depth_frag},normal:{uniforms:Gn([Te.common,Te.bumpmap,Te.normalmap,Te.displacementmap,{opacity:{value:1}}]),vertexShader:yt.meshnormal_vert,fragmentShader:yt.meshnormal_frag},sprite:{uniforms:Gn([Te.sprite,Te.fog]),vertexShader:yt.sprite_vert,fragmentShader:yt.sprite_frag},background:{uniforms:{uvTransform:{value:new xt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:yt.background_vert,fragmentShader:yt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:yt.backgroundCube_vert,fragmentShader:yt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:yt.cube_vert,fragmentShader:yt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:yt.equirect_vert,fragmentShader:yt.equirect_frag},distanceRGBA:{uniforms:Gn([Te.common,Te.displacementmap,{referencePosition:{value:new N},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:yt.distanceRGBA_vert,fragmentShader:yt.distanceRGBA_frag},shadow:{uniforms:Gn([Te.lights,Te.fog,{color:{value:new Le(0)},opacity:{value:1}}]),vertexShader:yt.shadow_vert,fragmentShader:yt.shadow_frag}};Bi.physical={uniforms:Gn([Bi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new xt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new xt},clearcoatNormalScale:{value:new fe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new xt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new xt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new xt},sheen:{value:0},sheenColor:{value:new Le(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new xt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new xt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new xt},transmissionSamplerSize:{value:new fe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new xt},attenuationDistance:{value:0},attenuationColor:{value:new Le(0)},specularColor:{value:new Le(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new xt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new xt},anisotropyVector:{value:new fe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new xt}}]),vertexShader:yt.meshphysical_vert,fragmentShader:yt.meshphysical_frag};const Ac={r:0,b:0,g:0};function JC(s,e,t,n,i,r,o){const l=new Le(0);let u=r===!0?0:1,h,f,p=null,m=0,g=null;function v(y,_){let b=!1,S=_.isScene===!0?_.background:null;switch(S&&S.isTexture&&(S=(_.backgroundBlurriness>0?t:e).get(S)),S===null?M(l,u):S&&S.isColor&&(M(S,1),b=!0),s.xr.getEnvironmentBlendMode()){case"opaque":b=!0;break;case"additive":n.buffers.color.setClear(0,0,0,1,o),b=!0;break;case"alpha-blend":n.buffers.color.setClear(0,0,0,0,o),b=!0;break}(s.autoClear||b)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),S&&(S.isCubeTexture||S.mapping===Xa)?(f===void 0&&(f=new wn(new as(1,1,1),new tr({name:"BackgroundCubeMaterial",uniforms:Ga(Bi.backgroundCube.uniforms),vertexShader:Bi.backgroundCube.vertexShader,fragmentShader:Bi.backgroundCube.fragmentShader,side:Vn,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(T,C,R){this.matrixWorld.copyPosition(R.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(f)),f.material.uniforms.envMap.value=S,f.material.uniforms.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,f.material.toneMapped=S.colorSpace!==mt,(p!==S||m!==S.version||g!==s.toneMapping)&&(f.material.needsUpdate=!0,p=S,m=S.version,g=s.toneMapping),f.layers.enableAll(),y.unshift(f,f.geometry,f.material,0,0,null)):S&&S.isTexture&&(h===void 0&&(h=new wn(new qa(2,2),new tr({name:"BackgroundMaterial",uniforms:Ga(Bi.background.uniforms),vertexShader:Bi.background.vertexShader,fragmentShader:Bi.background.fragmentShader,side:Ar,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=S,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.toneMapped=S.colorSpace!==mt,S.matrixAutoUpdate===!0&&S.updateMatrix(),h.material.uniforms.uvTransform.value.copy(S.matrix),(p!==S||m!==S.version||g!==s.toneMapping)&&(h.material.needsUpdate=!0,p=S,m=S.version,g=s.toneMapping),h.layers.enableAll(),y.unshift(h,h.geometry,h.material,0,0,null))}function M(y,_){y.getRGB(Ac,Av(s)),n.buffers.color.setClear(Ac.r,Ac.g,Ac.b,_,o)}return{getClearColor:function(){return l},setClearColor:function(y,_=1){l.set(y),u=_,M(l,u)},getClearAlpha:function(){return u},setClearAlpha:function(y){u=y,M(l,u)},render:v}}function KC(s,e,t,n){const i=s.getParameter(s.MAX_VERTEX_ATTRIBS),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,l={},u=y(null);let h=u,f=!1;function p(Y,W,he,j,oe){let de=!1;if(o){const te=M(j,he,W);h!==te&&(h=te,g(h.object)),de=_(Y,j,he,oe),de&&b(Y,j,he,oe)}else{const te=W.wireframe===!0;(h.geometry!==j.id||h.program!==he.id||h.wireframe!==te)&&(h.geometry=j.id,h.program=he.id,h.wireframe=te,de=!0)}oe!==null&&t.update(oe,s.ELEMENT_ARRAY_BUFFER),(de||f)&&(f=!1,R(Y,W,he,j),oe!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.get(oe).buffer))}function m(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function g(Y){return n.isWebGL2?s.bindVertexArray(Y):r.bindVertexArrayOES(Y)}function v(Y){return n.isWebGL2?s.deleteVertexArray(Y):r.deleteVertexArrayOES(Y)}function M(Y,W,he){const j=he.wireframe===!0;let oe=l[Y.id];oe===void 0&&(oe={},l[Y.id]=oe);let de=oe[W.id];de===void 0&&(de={},oe[W.id]=de);let te=de[j];return te===void 0&&(te=y(m()),de[j]=te),te}function y(Y){const W=[],he=[],j=[];for(let oe=0;oe<i;oe++)W[oe]=0,he[oe]=0,j[oe]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:W,enabledAttributes:he,attributeDivisors:j,object:Y,attributes:{},index:null}}function _(Y,W,he,j){const oe=h.attributes,de=W.attributes;let te=0;const Ee=he.getAttributes();for(const Q in Ee)if(Ee[Q].location>=0){const _e=oe[Q];let Pe=de[Q];if(Pe===void 0&&(Q==="instanceMatrix"&&Y.instanceMatrix&&(Pe=Y.instanceMatrix),Q==="instanceColor"&&Y.instanceColor&&(Pe=Y.instanceColor)),_e===void 0||_e.attribute!==Pe||Pe&&_e.data!==Pe.data)return!0;te++}return h.attributesNum!==te||h.index!==j}function b(Y,W,he,j){const oe={},de=W.attributes;let te=0;const Ee=he.getAttributes();for(const Q in Ee)if(Ee[Q].location>=0){let _e=de[Q];_e===void 0&&(Q==="instanceMatrix"&&Y.instanceMatrix&&(_e=Y.instanceMatrix),Q==="instanceColor"&&Y.instanceColor&&(_e=Y.instanceColor));const Pe={};Pe.attribute=_e,_e&&_e.data&&(Pe.data=_e.data),oe[Q]=Pe,te++}h.attributes=oe,h.attributesNum=te,h.index=j}function S(){const Y=h.newAttributes;for(let W=0,he=Y.length;W<he;W++)Y[W]=0}function w(Y){L(Y,0)}function L(Y,W){const he=h.newAttributes,j=h.enabledAttributes,oe=h.attributeDivisors;he[Y]=1,j[Y]===0&&(s.enableVertexAttribArray(Y),j[Y]=1),oe[Y]!==W&&((n.isWebGL2?s:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](Y,W),oe[Y]=W)}function T(){const Y=h.newAttributes,W=h.enabledAttributes;for(let he=0,j=W.length;he<j;he++)W[he]!==Y[he]&&(s.disableVertexAttribArray(he),W[he]=0)}function C(Y,W,he,j,oe,de,te){te===!0?s.vertexAttribIPointer(Y,W,he,oe,de):s.vertexAttribPointer(Y,W,he,j,oe,de)}function R(Y,W,he,j){if(n.isWebGL2===!1&&(Y.isInstancedMesh||j.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;S();const oe=j.attributes,de=he.getAttributes(),te=W.defaultAttributeValues;for(const Ee in de){const Q=de[Ee];if(Q.location>=0){let ge=oe[Ee];if(ge===void 0&&(Ee==="instanceMatrix"&&Y.instanceMatrix&&(ge=Y.instanceMatrix),Ee==="instanceColor"&&Y.instanceColor&&(ge=Y.instanceColor)),ge!==void 0){const _e=ge.normalized,Pe=ge.itemSize,Ie=t.get(ge);if(Ie===void 0)continue;const Ge=Ie.buffer,it=Ie.type,Ze=Ie.bytesPerElement,Nt=n.isWebGL2===!0&&(it===s.INT||it===s.UNSIGNED_INT||ge.gpuType===xd);if(ge.isInterleavedBufferAttribute){const et=ge.data,z=et.stride,Me=ge.offset;if(et.isInstancedInterleavedBuffer){for(let re=0;re<Q.locationSize;re++)L(Q.location+re,et.meshPerAttribute);Y.isInstancedMesh!==!0&&j._maxInstanceCount===void 0&&(j._maxInstanceCount=et.meshPerAttribute*et.count)}else for(let re=0;re<Q.locationSize;re++)w(Q.location+re);s.bindBuffer(s.ARRAY_BUFFER,Ge);for(let re=0;re<Q.locationSize;re++)C(Q.location+re,Pe/Q.locationSize,it,_e,z*Ze,(Me+Pe/Q.locationSize*re)*Ze,Nt)}else{if(ge.isInstancedBufferAttribute){for(let et=0;et<Q.locationSize;et++)L(Q.location+et,ge.meshPerAttribute);Y.isInstancedMesh!==!0&&j._maxInstanceCount===void 0&&(j._maxInstanceCount=ge.meshPerAttribute*ge.count)}else for(let et=0;et<Q.locationSize;et++)w(Q.location+et);s.bindBuffer(s.ARRAY_BUFFER,Ge);for(let et=0;et<Q.locationSize;et++)C(Q.location+et,Pe/Q.locationSize,it,_e,Pe*Ze,Pe/Q.locationSize*et*Ze,Nt)}}else if(te!==void 0){const _e=te[Ee];if(_e!==void 0)switch(_e.length){case 2:s.vertexAttrib2fv(Q.location,_e);break;case 3:s.vertexAttrib3fv(Q.location,_e);break;case 4:s.vertexAttrib4fv(Q.location,_e);break;default:s.vertexAttrib1fv(Q.location,_e)}}}}T()}function A(){ce();for(const Y in l){const W=l[Y];for(const he in W){const j=W[he];for(const oe in j)v(j[oe].object),delete j[oe];delete W[he]}delete l[Y]}}function D(Y){if(l[Y.id]===void 0)return;const W=l[Y.id];for(const he in W){const j=W[he];for(const oe in j)v(j[oe].object),delete j[oe];delete W[he]}delete l[Y.id]}function X(Y){for(const W in l){const he=l[W];if(he[Y.id]===void 0)continue;const j=he[Y.id];for(const oe in j)v(j[oe].object),delete j[oe];delete he[Y.id]}}function ce(){q(),f=!0,h!==u&&(h=u,g(h.object))}function q(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:p,reset:ce,resetDefaultState:q,dispose:A,releaseStatesOfGeometry:D,releaseStatesOfProgram:X,initAttributes:S,enableAttribute:w,disableUnusedAttributes:T}}function QC(s,e,t,n){const i=n.isWebGL2;let r;function o(h){r=h}function l(h,f){s.drawArrays(r,h,f),t.update(f,r,1)}function u(h,f,p){if(p===0)return;let m,g;if(i)m=s,g="drawArraysInstanced";else if(m=e.get("ANGLE_instanced_arrays"),g="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[g](r,h,f,p),t.update(f,r,p)}this.setMode=o,this.render=l,this.renderInstances=u}function jC(s,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const C=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(C.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(C){if(C==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";C="mediump"}return C==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&s.constructor.name==="WebGL2RenderingContext";let l=t.precision!==void 0?t.precision:"highp";const u=r(l);u!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",u,"instead."),l=u);const h=o||e.has("WEBGL_draw_buffers"),f=t.logarithmicDepthBuffer===!0,p=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),m=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),g=s.getParameter(s.MAX_TEXTURE_SIZE),v=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),M=s.getParameter(s.MAX_VERTEX_ATTRIBS),y=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),_=s.getParameter(s.MAX_VARYING_VECTORS),b=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),S=m>0,w=o||e.has("OES_texture_float"),L=S&&w,T=o?s.getParameter(s.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:r,precision:l,logarithmicDepthBuffer:f,maxTextures:p,maxVertexTextures:m,maxTextureSize:g,maxCubemapSize:v,maxAttributes:M,maxVertexUniforms:y,maxVaryings:_,maxFragmentUniforms:b,vertexTextures:S,floatFragmentTextures:w,floatVertexTextures:L,maxSamples:T}}function e2(s){const e=this;let t=null,n=0,i=!1,r=!1;const o=new qr,l=new xt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const g=p.length!==0||m||n!==0||i;return i=m,n=p.length,g},this.beginShadows=function(){r=!0,f(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(p,m){t=f(p,m,0)},this.setState=function(p,m,g){const v=p.clippingPlanes,M=p.clipIntersection,y=p.clipShadows,_=s.get(p);if(!i||v===null||v.length===0||r&&!y)r?f(null):h();else{const b=r?0:n,S=b*4;let w=_.clippingState||null;u.value=w,w=f(v,m,S,g);for(let L=0;L!==S;++L)w[L]=t[L];_.clippingState=w,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=b}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function f(p,m,g,v){const M=p!==null?p.length:0;let y=null;if(M!==0){if(y=u.value,v!==!0||y===null){const _=g+M*4,b=m.matrixWorldInverse;l.getNormalMatrix(b),(y===null||y.length<_)&&(y=new Float32Array(_));for(let S=0,w=g;S!==M;++S,w+=4)o.copy(p[S]).applyMatrix4(b,l),o.normal.toArray(y,w),y[w+3]=o.constant}u.value=y,u.needsUpdate=!0}return e.numPlanes=M,e.numIntersection=0,y}}function t2(s){let e=new WeakMap;function t(o,l){return l===zo?o.mapping=Kr:l===ko&&(o.mapping=Qr),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const l=o.mapping;if(l===zo||l===ko)if(e.has(o)){const u=e.get(o).texture;return t(u,o.mapping)}else{const u=o.image;if(u&&u.height>0){const h=new Pv(u.height/2);return h.fromEquirectangularTexture(s,o),e.set(o,h),o.addEventListener("dispose",i),t(h.texture,o.mapping)}else return null}}return o}function i(o){const l=o.target;l.removeEventListener("dispose",i);const u=e.get(l);u!==void 0&&(e.delete(l),u.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}class xu extends vu{constructor(e=-1,t=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,o=n+e,l=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=h*this.view.offsetX,o=r+h*this.view.width,l-=f*this.view.offsetY,u=l-f*this.view.height}this.projectionMatrix.makeOrthographic(r,o,l,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Oa=4,$g=[.125,.215,.35,.446,.526,.582],Cs=20,cf=new xu,qg=new Le;let uf=null;const As=(1+Math.sqrt(5))/2,Aa=1/As,Yg=[new N(1,1,1),new N(-1,1,1),new N(1,1,-1),new N(-1,1,-1),new N(0,As,Aa),new N(0,As,-Aa),new N(Aa,0,As),new N(-Aa,0,As),new N(As,Aa,0),new N(-As,Aa,0)];class sd{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){uf=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Kg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Jg(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(uf),e.scissorTest=!1,Rc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Kr||e.mapping===Qr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),uf=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:hn,minFilter:hn,generateMipmaps:!1,type:ka,format:hi,colorSpace:ki,depthBuffer:!1},i=Zg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Zg(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=n2(r)),this._blurMaterial=i2(r,e,t)}return i}_compileMaterial(e){const t=new wn(this._lodPlanes[0],e);this._renderer.compile(t,cf)}_sceneToCubeUV(e,t,n,i){const l=new En(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],f=this._renderer,p=f.autoClear,m=f.toneMapping;f.getClearColor(qg),f.toneMapping=ji,f.autoClear=!1;const g=new Pr({name:"PMREM.Background",side:Vn,depthWrite:!1,depthTest:!1}),v=new wn(new as,g);let M=!1;const y=e.background;y?y.isColor&&(g.color.copy(y),e.background=null,M=!0):(g.color.copy(qg),M=!0);for(let _=0;_<6;_++){const b=_%3;b===0?(l.up.set(0,u[_],0),l.lookAt(h[_],0,0)):b===1?(l.up.set(0,0,u[_]),l.lookAt(0,h[_],0)):(l.up.set(0,u[_],0),l.lookAt(0,0,h[_]));const S=this._cubeSize;Rc(i,b*S,_>2?S:0,S,S),f.setRenderTarget(i),M&&f.render(v,l),f.render(e,l)}v.geometry.dispose(),v.material.dispose(),f.toneMapping=m,f.autoClear=p,e.background=y}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Kr||e.mapping===Qr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Kg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Jg());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new wn(this._lodPlanes[0],r),l=r.uniforms;l.envMap.value=e;const u=this._cubeSize;Rc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(o,cf)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=Yg[(i-1)%Yg.length];this._blur(e,i-1,i,r,o)}t.autoClear=n}_blur(e,t,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",r),this._halfBlur(o,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,o,l){const u=this._renderer,h=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,p=new wn(this._lodPlanes[i],h),m=h.uniforms,g=this._sizeLods[n]-1,v=isFinite(r)?Math.PI/(2*g):2*Math.PI/(2*Cs-1),M=r/v,y=isFinite(r)?1+Math.floor(f*M):Cs;y>Cs&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${y} samples when the maximum is set to ${Cs}`);const _=[];let b=0;for(let C=0;C<Cs;++C){const R=C/M,A=Math.exp(-R*R/2);_.push(A),C===0?b+=A:C<y&&(b+=2*A)}for(let C=0;C<_.length;C++)_[C]=_[C]/b;m.envMap.value=e.texture,m.samples.value=y,m.weights.value=_,m.latitudinal.value=o==="latitudinal",l&&(m.poleAxis.value=l);const{_lodMax:S}=this;m.dTheta.value=v,m.mipInt.value=S-n;const w=this._sizeLods[i],L=3*w*(i>S-Oa?i-S+Oa:0),T=4*(this._cubeSize-w);Rc(t,L,T,3*w,2*w),u.setRenderTarget(t),u.render(p,cf)}}function n2(s){const e=[],t=[],n=[];let i=s;const r=s-Oa+1+$g.length;for(let o=0;o<r;o++){const l=Math.pow(2,i);t.push(l);let u=1/l;o>s-Oa?u=$g[o-s+Oa-1]:o===0&&(u=0),n.push(u);const h=1/(l-2),f=-h,p=1+h,m=[f,f,p,f,p,p,f,f,p,p,f,p],g=6,v=6,M=3,y=2,_=1,b=new Float32Array(M*v*g),S=new Float32Array(y*v*g),w=new Float32Array(_*v*g);for(let T=0;T<g;T++){const C=T%3*2/3-1,R=T>2?0:-1,A=[C,R,0,C+2/3,R,0,C+2/3,R+1,0,C,R,0,C+2/3,R+1,0,C,R+1,0];b.set(A,M*v*T),S.set(m,y*v*T);const D=[T,T,T,T,T,T];w.set(D,_*v*T)}const L=new Et;L.setAttribute("position",new Wt(b,M)),L.setAttribute("uv",new Wt(S,y)),L.setAttribute("faceIndex",new Wt(w,_)),e.push(L),i>Oa&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Zg(s,e,t){const n=new Hi(s,e,t);return n.texture.mapping=Xa,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Rc(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function i2(s,e,t){const n=new Float32Array(Cs),i=new N(0,1,0);return new tr({name:"SphericalGaussianBlur",defines:{n:Cs,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Ud(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Er,depthTest:!1,depthWrite:!1})}function Jg(){return new tr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Ud(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Er,depthTest:!1,depthWrite:!1})}function Kg(){return new tr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Ud(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Er,depthTest:!1,depthWrite:!1})}function Ud(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function r2(s){let e=new WeakMap,t=null;function n(l){if(l&&l.isTexture){const u=l.mapping,h=u===zo||u===ko,f=u===Kr||u===Qr;if(h||f)if(l.isRenderTargetTexture&&l.needsPMREMUpdate===!0){l.needsPMREMUpdate=!1;let p=e.get(l);return t===null&&(t=new sd(s)),p=h?t.fromEquirectangular(l,p):t.fromCubemap(l,p),e.set(l,p),p.texture}else{if(e.has(l))return e.get(l).texture;{const p=l.image;if(h&&p&&p.height>0||f&&p&&i(p)){t===null&&(t=new sd(s));const m=h?t.fromEquirectangular(l):t.fromCubemap(l);return e.set(l,m),l.addEventListener("dispose",r),m.texture}else return null}}}return l}function i(l){let u=0;const h=6;for(let f=0;f<h;f++)l[f]!==void 0&&u++;return u===h}function r(l){const u=l.target;u.removeEventListener("dispose",r);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function s2(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function a2(s,e,t,n){const i={},r=new WeakMap;function o(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const v in m.attributes)e.remove(m.attributes[v]);for(const v in m.morphAttributes){const M=m.morphAttributes[v];for(let y=0,_=M.length;y<_;y++)e.remove(M[y])}m.removeEventListener("dispose",o),delete i[m.id];const g=r.get(m);g&&(e.remove(g),r.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function l(p,m){return i[m.id]===!0||(m.addEventListener("dispose",o),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const v in m)e.update(m[v],s.ARRAY_BUFFER);const g=p.morphAttributes;for(const v in g){const M=g[v];for(let y=0,_=M.length;y<_;y++)e.update(M[y],s.ARRAY_BUFFER)}}function h(p){const m=[],g=p.index,v=p.attributes.position;let M=0;if(g!==null){const b=g.array;M=g.version;for(let S=0,w=b.length;S<w;S+=3){const L=b[S+0],T=b[S+1],C=b[S+2];m.push(L,T,T,C,C,L)}}else{const b=v.array;M=v.version;for(let S=0,w=b.length/3-1;S<w;S+=3){const L=S+0,T=S+1,C=S+2;m.push(L,T,T,C,C,L)}}const y=new(wv(m)?Id:Ld)(m,1);y.version=M;const _=r.get(p);_&&e.remove(_),r.set(p,y)}function f(p){const m=r.get(p);if(m){const g=p.index;g!==null&&m.version<g.version&&h(p)}else h(p);return r.get(p)}return{get:l,update:u,getWireframeAttribute:f}}function o2(s,e,t,n){const i=n.isWebGL2;let r;function o(m){r=m}let l,u;function h(m){l=m.type,u=m.bytesPerElement}function f(m,g){s.drawElements(r,g,l,m*u),t.update(g,r,1)}function p(m,g,v){if(v===0)return;let M,y;if(i)M=s,y="drawElementsInstanced";else if(M=e.get("ANGLE_instanced_arrays"),y="drawElementsInstancedANGLE",M===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}M[y](r,g,l,m*u,v),t.update(g,r,v)}this.setMode=o,this.setIndex=h,this.render=f,this.renderInstances=p}function l2(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,l){switch(t.calls++,o){case s.TRIANGLES:t.triangles+=l*(r/3);break;case s.LINES:t.lines+=l*(r/2);break;case s.LINE_STRIP:t.lines+=l*(r-1);break;case s.LINE_LOOP:t.lines+=l*r;break;case s.POINTS:t.points+=l*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function c2(s,e){return s[0]-e[0]}function u2(s,e){return Math.abs(e[1])-Math.abs(s[1])}function h2(s,e,t){const n={},i=new Float32Array(8),r=new WeakMap,o=new zt,l=[];for(let h=0;h<8;h++)l[h]=[h,0];function u(h,f,p){const m=h.morphTargetInfluences;if(e.isWebGL2===!0){const g=f.morphAttributes.position||f.morphAttributes.normal||f.morphAttributes.color,v=g!==void 0?g.length:0;let M=r.get(f);if(M===void 0||M.count!==v){let Y=function(){ce.dispose(),r.delete(f),f.removeEventListener("dispose",Y)};M!==void 0&&M.texture.dispose();const b=f.morphAttributes.position!==void 0,S=f.morphAttributes.normal!==void 0,w=f.morphAttributes.color!==void 0,L=f.morphAttributes.position||[],T=f.morphAttributes.normal||[],C=f.morphAttributes.color||[];let R=0;b===!0&&(R=1),S===!0&&(R=2),w===!0&&(R=3);let A=f.attributes.position.count*R,D=1;A>e.maxTextureSize&&(D=Math.ceil(A/e.maxTextureSize),A=e.maxTextureSize);const X=new Float32Array(A*D*4*v),ce=new gu(X,A,D,v);ce.type=Ki,ce.needsUpdate=!0;const q=R*4;for(let W=0;W<v;W++){const he=L[W],j=T[W],oe=C[W],de=A*D*4*W;for(let te=0;te<he.count;te++){const Ee=te*q;b===!0&&(o.fromBufferAttribute(he,te),X[de+Ee+0]=o.x,X[de+Ee+1]=o.y,X[de+Ee+2]=o.z,X[de+Ee+3]=0),S===!0&&(o.fromBufferAttribute(j,te),X[de+Ee+4]=o.x,X[de+Ee+5]=o.y,X[de+Ee+6]=o.z,X[de+Ee+7]=0),w===!0&&(o.fromBufferAttribute(oe,te),X[de+Ee+8]=o.x,X[de+Ee+9]=o.y,X[de+Ee+10]=o.z,X[de+Ee+11]=oe.itemSize===4?o.w:1)}}M={count:v,texture:ce,size:new fe(A,D)},r.set(f,M),f.addEventListener("dispose",Y)}let y=0;for(let b=0;b<m.length;b++)y+=m[b];const _=f.morphTargetsRelative?1:1-y;p.getUniforms().setValue(s,"morphTargetBaseInfluence",_),p.getUniforms().setValue(s,"morphTargetInfluences",m),p.getUniforms().setValue(s,"morphTargetsTexture",M.texture,t),p.getUniforms().setValue(s,"morphTargetsTextureSize",M.size)}else{const g=m===void 0?0:m.length;let v=n[f.id];if(v===void 0||v.length!==g){v=[];for(let S=0;S<g;S++)v[S]=[S,0];n[f.id]=v}for(let S=0;S<g;S++){const w=v[S];w[0]=S,w[1]=m[S]}v.sort(u2);for(let S=0;S<8;S++)S<g&&v[S][1]?(l[S][0]=v[S][0],l[S][1]=v[S][1]):(l[S][0]=Number.MAX_SAFE_INTEGER,l[S][1]=0);l.sort(c2);const M=f.morphAttributes.position,y=f.morphAttributes.normal;let _=0;for(let S=0;S<8;S++){const w=l[S],L=w[0],T=w[1];L!==Number.MAX_SAFE_INTEGER&&T?(M&&f.getAttribute("morphTarget"+S)!==M[L]&&f.setAttribute("morphTarget"+S,M[L]),y&&f.getAttribute("morphNormal"+S)!==y[L]&&f.setAttribute("morphNormal"+S,y[L]),i[S]=T,_+=T):(M&&f.hasAttribute("morphTarget"+S)===!0&&f.deleteAttribute("morphTarget"+S),y&&f.hasAttribute("morphNormal"+S)===!0&&f.deleteAttribute("morphNormal"+S),i[S]=0)}const b=f.morphTargetsRelative?1:1-_;p.getUniforms().setValue(s,"morphTargetBaseInfluence",b),p.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:u}}function f2(s,e,t,n){let i=new WeakMap;function r(u){const h=n.render.frame,f=u.geometry,p=e.get(u,f);return i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",l)===!1&&u.addEventListener("dispose",l),t.update(u.instanceMatrix,s.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,s.ARRAY_BUFFER)),p}function o(){i=new WeakMap}function l(u){const h=u.target;h.removeEventListener("dispose",l),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:r,dispose:o}}const Iv=new fn,Uv=new gu,Dv=new Pd,Ov=new ol,Qg=[],jg=[],e_=new Float32Array(16),t_=new Float32Array(9),n_=new Float32Array(4);function Ya(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=Qg[i];if(r===void 0&&(r=new Float32Array(i),Qg[i]=r),e!==0){n.toArray(r,0);for(let o=1,l=0;o!==e;++o)l+=t,s[o].toArray(r,l)}return r}function vn(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function yn(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function Mu(s,e){let t=jg[e];t===void 0&&(t=new Int32Array(e),jg[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function d2(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function p2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(vn(t,e))return;s.uniform2fv(this.addr,e),yn(t,e)}}function m2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(vn(t,e))return;s.uniform3fv(this.addr,e),yn(t,e)}}function g2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(vn(t,e))return;s.uniform4fv(this.addr,e),yn(t,e)}}function _2(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(vn(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),yn(t,e)}else{if(vn(t,n))return;n_.set(n),s.uniformMatrix2fv(this.addr,!1,n_),yn(t,n)}}function v2(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(vn(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),yn(t,e)}else{if(vn(t,n))return;t_.set(n),s.uniformMatrix3fv(this.addr,!1,t_),yn(t,n)}}function y2(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(vn(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),yn(t,e)}else{if(vn(t,n))return;e_.set(n),s.uniformMatrix4fv(this.addr,!1,e_),yn(t,n)}}function x2(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function M2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(vn(t,e))return;s.uniform2iv(this.addr,e),yn(t,e)}}function S2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(vn(t,e))return;s.uniform3iv(this.addr,e),yn(t,e)}}function b2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(vn(t,e))return;s.uniform4iv(this.addr,e),yn(t,e)}}function E2(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function w2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(vn(t,e))return;s.uniform2uiv(this.addr,e),yn(t,e)}}function T2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(vn(t,e))return;s.uniform3uiv(this.addr,e),yn(t,e)}}function A2(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(vn(t,e))return;s.uniform4uiv(this.addr,e),yn(t,e)}}function R2(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||Iv,i)}function C2(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Dv,i)}function P2(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Ov,i)}function L2(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Uv,i)}function I2(s){switch(s){case 5126:return d2;case 35664:return p2;case 35665:return m2;case 35666:return g2;case 35674:return _2;case 35675:return v2;case 35676:return y2;case 5124:case 35670:return x2;case 35667:case 35671:return M2;case 35668:case 35672:return S2;case 35669:case 35673:return b2;case 5125:return E2;case 36294:return w2;case 36295:return T2;case 36296:return A2;case 35678:case 36198:case 36298:case 36306:case 35682:return R2;case 35679:case 36299:case 36307:return C2;case 35680:case 36300:case 36308:case 36293:return P2;case 36289:case 36303:case 36311:case 36292:return L2}}function U2(s,e){s.uniform1fv(this.addr,e)}function D2(s,e){const t=Ya(e,this.size,2);s.uniform2fv(this.addr,t)}function O2(s,e){const t=Ya(e,this.size,3);s.uniform3fv(this.addr,t)}function N2(s,e){const t=Ya(e,this.size,4);s.uniform4fv(this.addr,t)}function F2(s,e){const t=Ya(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function B2(s,e){const t=Ya(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function z2(s,e){const t=Ya(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function k2(s,e){s.uniform1iv(this.addr,e)}function H2(s,e){s.uniform2iv(this.addr,e)}function G2(s,e){s.uniform3iv(this.addr,e)}function V2(s,e){s.uniform4iv(this.addr,e)}function W2(s,e){s.uniform1uiv(this.addr,e)}function X2(s,e){s.uniform2uiv(this.addr,e)}function $2(s,e){s.uniform3uiv(this.addr,e)}function q2(s,e){s.uniform4uiv(this.addr,e)}function Y2(s,e,t){const n=this.cache,i=e.length,r=Mu(t,i);vn(n,r)||(s.uniform1iv(this.addr,r),yn(n,r));for(let o=0;o!==i;++o)t.setTexture2D(e[o]||Iv,r[o])}function Z2(s,e,t){const n=this.cache,i=e.length,r=Mu(t,i);vn(n,r)||(s.uniform1iv(this.addr,r),yn(n,r));for(let o=0;o!==i;++o)t.setTexture3D(e[o]||Dv,r[o])}function J2(s,e,t){const n=this.cache,i=e.length,r=Mu(t,i);vn(n,r)||(s.uniform1iv(this.addr,r),yn(n,r));for(let o=0;o!==i;++o)t.setTextureCube(e[o]||Ov,r[o])}function K2(s,e,t){const n=this.cache,i=e.length,r=Mu(t,i);vn(n,r)||(s.uniform1iv(this.addr,r),yn(n,r));for(let o=0;o!==i;++o)t.setTexture2DArray(e[o]||Uv,r[o])}function Q2(s){switch(s){case 5126:return U2;case 35664:return D2;case 35665:return O2;case 35666:return N2;case 35674:return F2;case 35675:return B2;case 35676:return z2;case 5124:case 35670:return k2;case 35667:case 35671:return H2;case 35668:case 35672:return G2;case 35669:case 35673:return V2;case 5125:return W2;case 36294:return X2;case 36295:return $2;case 36296:return q2;case 35678:case 36198:case 36298:case 36306:case 35682:return Y2;case 35679:case 36299:case 36307:return Z2;case 35680:case 36300:case 36308:case 36293:return J2;case 36289:case 36303:case 36311:case 36292:return K2}}class j2{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=I2(t.type)}}class eP{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=Q2(t.type)}}class tP{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const l=i[r];l.setValue(e,t[l.id],n)}}}const hf=/(\w+)(\])?(\[|\.)?/g;function i_(s,e){s.seq.push(e),s.map[e.id]=e}function nP(s,e,t){const n=s.name,i=n.length;for(hf.lastIndex=0;;){const r=hf.exec(n),o=hf.lastIndex;let l=r[1];const u=r[2]==="]",h=r[3];if(u&&(l=l|0),h===void 0||h==="["&&o+2===i){i_(t,h===void 0?new j2(l,s,e):new eP(l,s,e));break}else{let p=t.map[l];p===void 0&&(p=new tP(l),i_(t,p)),t=p}}}class ru{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),o=e.getUniformLocation(t,r.name);nP(r,o,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,o=t.length;r!==o;++r){const l=t[r],u=n[l.id];u.needsUpdate!==!1&&l.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const o=e[i];o.id in t&&n.push(o)}return n}}function r_(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}let iP=0;function rP(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=i;o<r;o++){const l=o+1;n.push(`${l===e?">":" "} ${l}: ${t[o]}`)}return n.join(`
`)}function sP(s){switch(s){case ki:return["Linear","( value )"];case mt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",s),["Linear","( value )"]}}function s_(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),i=s.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const o=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+rP(s.getShaderSource(e),o)}else return i}function aP(s,e){const t=sP(e);return"vec4 "+s+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function oP(s,e){let t;switch(e){case J0:t="Linear";break;case K0:t="Reinhard";break;case Q0:t="OptimizedCineon";break;case vd:t="ACESFilmic";break;case j0:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function lP(s){return[s.extensionDerivatives||s.envMapCubeUVHeight||s.bumpMap||s.normalMapTangentSpace||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Uo).join(`
`)}function cP(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function uP(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),o=r.name;let l=1;r.type===s.FLOAT_MAT2&&(l=2),r.type===s.FLOAT_MAT3&&(l=3),r.type===s.FLOAT_MAT4&&(l=4),t[o]={type:r.type,location:s.getAttribLocation(e,o),locationSize:l}}return t}function Uo(s){return s!==""}function a_(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function o_(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const hP=/^[ \t]*#include +<([\w\d./]+)>/gm;function ad(s){return s.replace(hP,fP)}function fP(s,e){const t=yt[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return ad(t)}const dP=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function l_(s){return s.replace(dP,pP)}function pP(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function c_(s){let e="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function mP(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===md?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===fu?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Zi&&(e="SHADOWMAP_TYPE_VSM"),e}function gP(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Kr:case Qr:e="ENVMAP_TYPE_CUBE";break;case Xa:e="ENVMAP_TYPE_CUBE_UV";break}return e}function _P(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Qr:e="ENVMAP_MODE_REFRACTION";break}return e}function vP(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case sl:e="ENVMAP_BLENDING_MULTIPLY";break;case Y0:e="ENVMAP_BLENDING_MIX";break;case Z0:e="ENVMAP_BLENDING_ADD";break}return e}function yP(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function xP(s,e,t,n){const i=s.getContext(),r=t.defines;let o=t.vertexShader,l=t.fragmentShader;const u=mP(t),h=gP(t),f=_P(t),p=vP(t),m=yP(t),g=t.isWebGL2?"":lP(t),v=cP(r),M=i.createProgram();let y,_,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(y=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v].filter(Uo).join(`
`),y.length>0&&(y+=`
`),_=[g,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v].filter(Uo).join(`
`),_.length>0&&(_+=`
`)):(y=[c_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Uo).join(`
`),_=[g,c_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==ji?"#define TONE_MAPPING":"",t.toneMapping!==ji?yt.tonemapping_pars_fragment:"",t.toneMapping!==ji?oP("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",yt.encodings_pars_fragment,aP("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Uo).join(`
`)),o=ad(o),o=a_(o,t),o=o_(o,t),l=ad(l),l=a_(l,t),l=o_(l,t),o=l_(o),l=l_(l),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,y=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+y,_=["#define varying in",t.glslVersion===id?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===id?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const S=b+y+o,w=b+_+l,L=r_(i,i.VERTEX_SHADER,S),T=r_(i,i.FRAGMENT_SHADER,w);if(i.attachShader(M,L),i.attachShader(M,T),t.index0AttributeName!==void 0?i.bindAttribLocation(M,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(M,0,"position"),i.linkProgram(M),s.debug.checkShaderErrors){const A=i.getProgramInfoLog(M).trim(),D=i.getShaderInfoLog(L).trim(),X=i.getShaderInfoLog(T).trim();let ce=!0,q=!0;if(i.getProgramParameter(M,i.LINK_STATUS)===!1)if(ce=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,M,L,T);else{const Y=s_(i,L,"vertex"),W=s_(i,T,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(M,i.VALIDATE_STATUS)+`

Program Info Log: `+A+`
`+Y+`
`+W)}else A!==""?console.warn("THREE.WebGLProgram: Program Info Log:",A):(D===""||X==="")&&(q=!1);q&&(this.diagnostics={runnable:ce,programLog:A,vertexShader:{log:D,prefix:y},fragmentShader:{log:X,prefix:_}})}i.deleteShader(L),i.deleteShader(T);let C;this.getUniforms=function(){return C===void 0&&(C=new ru(i,M)),C};let R;return this.getAttributes=function(){return R===void 0&&(R=uP(i,M)),R},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(M),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=iP++,this.cacheKey=e,this.usedTimes=1,this.program=M,this.vertexShader=L,this.fragmentShader=T,this}let MP=0;class SP{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new bP(e),t.set(e,n)),n}}class bP{constructor(e){this.id=MP++,this.code=e,this.usedTimes=0}}function EP(s,e,t,n,i,r,o){const l=new _u,u=new SP,h=[],f=i.isWebGL2,p=i.logarithmicDepthBuffer,m=i.vertexTextures;let g=i.precision;const v={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(A){return A===0?"uv":`uv${A}`}function y(A,D,X,ce,q){const Y=ce.fog,W=q.geometry,he=A.isMeshStandardMaterial?ce.environment:null,j=(A.isMeshStandardMaterial?t:e).get(A.envMap||he),oe=j&&j.mapping===Xa?j.image.height:null,de=v[A.type];A.precision!==null&&(g=i.getMaxPrecision(A.precision),g!==A.precision&&console.warn("THREE.WebGLProgram.getParameters:",A.precision,"not supported, using",g,"instead."));const te=W.morphAttributes.position||W.morphAttributes.normal||W.morphAttributes.color,Ee=te!==void 0?te.length:0;let Q=0;W.morphAttributes.position!==void 0&&(Q=1),W.morphAttributes.normal!==void 0&&(Q=2),W.morphAttributes.color!==void 0&&(Q=3);let ge,_e,Pe,Ie;if(de){const nn=Bi[de];ge=nn.vertexShader,_e=nn.fragmentShader}else ge=A.vertexShader,_e=A.fragmentShader,u.update(A),Pe=u.getVertexShaderID(A),Ie=u.getFragmentShaderID(A);const Ge=s.getRenderTarget(),it=q.isInstancedMesh===!0,Ze=!!A.map,Nt=!!A.matcap,et=!!j,z=!!A.aoMap,Me=!!A.lightMap,re=!!A.bumpMap,xe=!!A.normalMap,pe=!!A.displacementMap,Ne=!!A.emissiveMap,Ue=!!A.metalnessMap,Fe=!!A.roughnessMap,tt=A.anisotropy>0,rt=A.clearcoat>0,kt=A.iridescence>0,F=A.sheen>0,U=A.transmission>0,ee=tt&&!!A.anisotropyMap,ye=rt&&!!A.clearcoatMap,ve=rt&&!!A.clearcoatNormalMap,Se=rt&&!!A.clearcoatRoughnessMap,We=kt&&!!A.iridescenceMap,we=kt&&!!A.iridescenceThicknessMap,se=F&&!!A.sheenColorMap,$e=F&&!!A.sheenRoughnessMap,qe=!!A.specularMap,Ye=!!A.specularColorMap,ke=!!A.specularIntensityMap,He=U&&!!A.transmissionMap,gt=U&&!!A.thicknessMap,Ht=!!A.gradientMap,H=!!A.alphaMap,Ae=A.alphaTest>0,K=!!A.extensions,be=!!W.attributes.uv1,Ce=!!W.attributes.uv2,Ct=!!W.attributes.uv3;return{isWebGL2:f,shaderID:de,shaderType:A.type,shaderName:A.name,vertexShader:ge,fragmentShader:_e,defines:A.defines,customVertexShaderID:Pe,customFragmentShaderID:Ie,isRawShaderMaterial:A.isRawShaderMaterial===!0,glslVersion:A.glslVersion,precision:g,instancing:it,instancingColor:it&&q.instanceColor!==null,supportsVertexTextures:m,outputColorSpace:Ge===null?s.outputColorSpace:Ge.isXRRenderTarget===!0?Ge.texture.colorSpace:ki,map:Ze,matcap:Nt,envMap:et,envMapMode:et&&j.mapping,envMapCubeUVHeight:oe,aoMap:z,lightMap:Me,bumpMap:re,normalMap:xe,displacementMap:m&&pe,emissiveMap:Ne,normalMapObjectSpace:xe&&A.normalMapType===pv,normalMapTangentSpace:xe&&A.normalMapType===ss,metalnessMap:Ue,roughnessMap:Fe,anisotropy:tt,anisotropyMap:ee,clearcoat:rt,clearcoatMap:ye,clearcoatNormalMap:ve,clearcoatRoughnessMap:Se,iridescence:kt,iridescenceMap:We,iridescenceThicknessMap:we,sheen:F,sheenColorMap:se,sheenRoughnessMap:$e,specularMap:qe,specularColorMap:Ye,specularIntensityMap:ke,transmission:U,transmissionMap:He,thicknessMap:gt,gradientMap:Ht,opaque:A.transparent===!1&&A.blending===Ns,alphaMap:H,alphaTest:Ae,combine:A.combine,mapUv:Ze&&M(A.map.channel),aoMapUv:z&&M(A.aoMap.channel),lightMapUv:Me&&M(A.lightMap.channel),bumpMapUv:re&&M(A.bumpMap.channel),normalMapUv:xe&&M(A.normalMap.channel),displacementMapUv:pe&&M(A.displacementMap.channel),emissiveMapUv:Ne&&M(A.emissiveMap.channel),metalnessMapUv:Ue&&M(A.metalnessMap.channel),roughnessMapUv:Fe&&M(A.roughnessMap.channel),anisotropyMapUv:ee&&M(A.anisotropyMap.channel),clearcoatMapUv:ye&&M(A.clearcoatMap.channel),clearcoatNormalMapUv:ve&&M(A.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Se&&M(A.clearcoatRoughnessMap.channel),iridescenceMapUv:We&&M(A.iridescenceMap.channel),iridescenceThicknessMapUv:we&&M(A.iridescenceThicknessMap.channel),sheenColorMapUv:se&&M(A.sheenColorMap.channel),sheenRoughnessMapUv:$e&&M(A.sheenRoughnessMap.channel),specularMapUv:qe&&M(A.specularMap.channel),specularColorMapUv:Ye&&M(A.specularColorMap.channel),specularIntensityMapUv:ke&&M(A.specularIntensityMap.channel),transmissionMapUv:He&&M(A.transmissionMap.channel),thicknessMapUv:gt&&M(A.thicknessMap.channel),alphaMapUv:H&&M(A.alphaMap.channel),vertexTangents:!!W.attributes.tangent&&(xe||tt),vertexColors:A.vertexColors,vertexAlphas:A.vertexColors===!0&&!!W.attributes.color&&W.attributes.color.itemSize===4,vertexUv1s:be,vertexUv2s:Ce,vertexUv3s:Ct,pointsUvs:q.isPoints===!0&&!!W.attributes.uv&&(Ze||H),fog:!!Y,useFog:A.fog===!0,fogExp2:Y&&Y.isFogExp2,flatShading:A.flatShading===!0,sizeAttenuation:A.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:q.isSkinnedMesh===!0,morphTargets:W.morphAttributes.position!==void 0,morphNormals:W.morphAttributes.normal!==void 0,morphColors:W.morphAttributes.color!==void 0,morphTargetsCount:Ee,morphTextureStride:Q,numDirLights:D.directional.length,numPointLights:D.point.length,numSpotLights:D.spot.length,numSpotLightMaps:D.spotLightMap.length,numRectAreaLights:D.rectArea.length,numHemiLights:D.hemi.length,numDirLightShadows:D.directionalShadowMap.length,numPointLightShadows:D.pointShadowMap.length,numSpotLightShadows:D.spotShadowMap.length,numSpotLightShadowsWithMaps:D.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:A.dithering,shadowMapEnabled:s.shadowMap.enabled&&X.length>0,shadowMapType:s.shadowMap.type,toneMapping:A.toneMapped?s.toneMapping:ji,useLegacyLights:s.useLegacyLights,premultipliedAlpha:A.premultipliedAlpha,doubleSided:A.side===Ji,flipSided:A.side===Vn,useDepthPacking:A.depthPacking>=0,depthPacking:A.depthPacking||0,index0AttributeName:A.index0AttributeName,extensionDerivatives:K&&A.extensions.derivatives===!0,extensionFragDepth:K&&A.extensions.fragDepth===!0,extensionDrawBuffers:K&&A.extensions.drawBuffers===!0,extensionShaderTextureLOD:K&&A.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:f||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:f||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:f||n.has("EXT_shader_texture_lod"),customProgramCacheKey:A.customProgramCacheKey()}}function _(A){const D=[];if(A.shaderID?D.push(A.shaderID):(D.push(A.customVertexShaderID),D.push(A.customFragmentShaderID)),A.defines!==void 0)for(const X in A.defines)D.push(X),D.push(A.defines[X]);return A.isRawShaderMaterial===!1&&(b(D,A),S(D,A),D.push(s.outputColorSpace)),D.push(A.customProgramCacheKey),D.join()}function b(A,D){A.push(D.precision),A.push(D.outputColorSpace),A.push(D.envMapMode),A.push(D.envMapCubeUVHeight),A.push(D.mapUv),A.push(D.alphaMapUv),A.push(D.lightMapUv),A.push(D.aoMapUv),A.push(D.bumpMapUv),A.push(D.normalMapUv),A.push(D.displacementMapUv),A.push(D.emissiveMapUv),A.push(D.metalnessMapUv),A.push(D.roughnessMapUv),A.push(D.anisotropyMapUv),A.push(D.clearcoatMapUv),A.push(D.clearcoatNormalMapUv),A.push(D.clearcoatRoughnessMapUv),A.push(D.iridescenceMapUv),A.push(D.iridescenceThicknessMapUv),A.push(D.sheenColorMapUv),A.push(D.sheenRoughnessMapUv),A.push(D.specularMapUv),A.push(D.specularColorMapUv),A.push(D.specularIntensityMapUv),A.push(D.transmissionMapUv),A.push(D.thicknessMapUv),A.push(D.combine),A.push(D.fogExp2),A.push(D.sizeAttenuation),A.push(D.morphTargetsCount),A.push(D.morphAttributeCount),A.push(D.numDirLights),A.push(D.numPointLights),A.push(D.numSpotLights),A.push(D.numSpotLightMaps),A.push(D.numHemiLights),A.push(D.numRectAreaLights),A.push(D.numDirLightShadows),A.push(D.numPointLightShadows),A.push(D.numSpotLightShadows),A.push(D.numSpotLightShadowsWithMaps),A.push(D.shadowMapType),A.push(D.toneMapping),A.push(D.numClippingPlanes),A.push(D.numClipIntersection),A.push(D.depthPacking)}function S(A,D){l.disableAll(),D.isWebGL2&&l.enable(0),D.supportsVertexTextures&&l.enable(1),D.instancing&&l.enable(2),D.instancingColor&&l.enable(3),D.matcap&&l.enable(4),D.envMap&&l.enable(5),D.normalMapObjectSpace&&l.enable(6),D.normalMapTangentSpace&&l.enable(7),D.clearcoat&&l.enable(8),D.iridescence&&l.enable(9),D.alphaTest&&l.enable(10),D.vertexColors&&l.enable(11),D.vertexAlphas&&l.enable(12),D.vertexUv1s&&l.enable(13),D.vertexUv2s&&l.enable(14),D.vertexUv3s&&l.enable(15),D.vertexTangents&&l.enable(16),D.anisotropy&&l.enable(17),A.push(l.mask),l.disableAll(),D.fog&&l.enable(0),D.useFog&&l.enable(1),D.flatShading&&l.enable(2),D.logarithmicDepthBuffer&&l.enable(3),D.skinning&&l.enable(4),D.morphTargets&&l.enable(5),D.morphNormals&&l.enable(6),D.morphColors&&l.enable(7),D.premultipliedAlpha&&l.enable(8),D.shadowMapEnabled&&l.enable(9),D.useLegacyLights&&l.enable(10),D.doubleSided&&l.enable(11),D.flipSided&&l.enable(12),D.useDepthPacking&&l.enable(13),D.dithering&&l.enable(14),D.transmission&&l.enable(15),D.sheen&&l.enable(16),D.opaque&&l.enable(17),D.pointsUvs&&l.enable(18),A.push(l.mask)}function w(A){const D=v[A.type];let X;if(D){const ce=Bi[D];X=Rv.clone(ce.uniforms)}else X=A.uniforms;return X}function L(A,D){let X;for(let ce=0,q=h.length;ce<q;ce++){const Y=h[ce];if(Y.cacheKey===D){X=Y,++X.usedTimes;break}}return X===void 0&&(X=new xP(s,D,A,r),h.push(X)),X}function T(A){if(--A.usedTimes===0){const D=h.indexOf(A);h[D]=h[h.length-1],h.pop(),A.destroy()}}function C(A){u.remove(A)}function R(){u.dispose()}return{getParameters:y,getProgramCacheKey:_,getUniforms:w,acquireProgram:L,releaseProgram:T,releaseShaderCache:C,programs:h,dispose:R}}function wP(){let s=new WeakMap;function e(r){let o=s.get(r);return o===void 0&&(o={},s.set(r,o)),o}function t(r){s.delete(r)}function n(r,o,l){s.get(r)[o]=l}function i(){s=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function TP(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function u_(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function h_(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function o(p,m,g,v,M,y){let _=s[e];return _===void 0?(_={id:p.id,object:p,geometry:m,material:g,groupOrder:v,renderOrder:p.renderOrder,z:M,group:y},s[e]=_):(_.id=p.id,_.object=p,_.geometry=m,_.material=g,_.groupOrder=v,_.renderOrder=p.renderOrder,_.z=M,_.group=y),e++,_}function l(p,m,g,v,M,y){const _=o(p,m,g,v,M,y);g.transmission>0?n.push(_):g.transparent===!0?i.push(_):t.push(_)}function u(p,m,g,v,M,y){const _=o(p,m,g,v,M,y);g.transmission>0?n.unshift(_):g.transparent===!0?i.unshift(_):t.unshift(_)}function h(p,m){t.length>1&&t.sort(p||TP),n.length>1&&n.sort(m||u_),i.length>1&&i.sort(m||u_)}function f(){for(let p=e,m=s.length;p<m;p++){const g=s[p];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:l,unshift:u,finish:f,sort:h}}function AP(){let s=new WeakMap;function e(n,i){const r=s.get(n);let o;return r===void 0?(o=new h_,s.set(n,[o])):i>=r.length?(o=new h_,r.push(o)):o=r[i],o}function t(){s=new WeakMap}return{get:e,dispose:t}}function RP(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new N,color:new Le};break;case"SpotLight":t={position:new N,direction:new N,color:new Le,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new N,color:new Le,distance:0,decay:0};break;case"HemisphereLight":t={direction:new N,skyColor:new Le,groundColor:new Le};break;case"RectAreaLight":t={color:new Le,position:new N,halfWidth:new N,halfHeight:new N};break}return s[e.id]=t,t}}}function CP(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let PP=0;function LP(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function IP(s,e){const t=new RP,n=CP(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let f=0;f<9;f++)i.probe.push(new N);const r=new N,o=new ot,l=new ot;function u(f,p){let m=0,g=0,v=0;for(let X=0;X<9;X++)i.probe[X].set(0,0,0);let M=0,y=0,_=0,b=0,S=0,w=0,L=0,T=0,C=0,R=0;f.sort(LP);const A=p===!0?Math.PI:1;for(let X=0,ce=f.length;X<ce;X++){const q=f[X],Y=q.color,W=q.intensity,he=q.distance,j=q.shadow&&q.shadow.map?q.shadow.map.texture:null;if(q.isAmbientLight)m+=Y.r*W*A,g+=Y.g*W*A,v+=Y.b*W*A;else if(q.isLightProbe)for(let oe=0;oe<9;oe++)i.probe[oe].addScaledVector(q.sh.coefficients[oe],W);else if(q.isDirectionalLight){const oe=t.get(q);if(oe.color.copy(q.color).multiplyScalar(q.intensity*A),q.castShadow){const de=q.shadow,te=n.get(q);te.shadowBias=de.bias,te.shadowNormalBias=de.normalBias,te.shadowRadius=de.radius,te.shadowMapSize=de.mapSize,i.directionalShadow[M]=te,i.directionalShadowMap[M]=j,i.directionalShadowMatrix[M]=q.shadow.matrix,w++}i.directional[M]=oe,M++}else if(q.isSpotLight){const oe=t.get(q);oe.position.setFromMatrixPosition(q.matrixWorld),oe.color.copy(Y).multiplyScalar(W*A),oe.distance=he,oe.coneCos=Math.cos(q.angle),oe.penumbraCos=Math.cos(q.angle*(1-q.penumbra)),oe.decay=q.decay,i.spot[_]=oe;const de=q.shadow;if(q.map&&(i.spotLightMap[C]=q.map,C++,de.updateMatrices(q),q.castShadow&&R++),i.spotLightMatrix[_]=de.matrix,q.castShadow){const te=n.get(q);te.shadowBias=de.bias,te.shadowNormalBias=de.normalBias,te.shadowRadius=de.radius,te.shadowMapSize=de.mapSize,i.spotShadow[_]=te,i.spotShadowMap[_]=j,T++}_++}else if(q.isRectAreaLight){const oe=t.get(q);oe.color.copy(Y).multiplyScalar(W),oe.halfWidth.set(q.width*.5,0,0),oe.halfHeight.set(0,q.height*.5,0),i.rectArea[b]=oe,b++}else if(q.isPointLight){const oe=t.get(q);if(oe.color.copy(q.color).multiplyScalar(q.intensity*A),oe.distance=q.distance,oe.decay=q.decay,q.castShadow){const de=q.shadow,te=n.get(q);te.shadowBias=de.bias,te.shadowNormalBias=de.normalBias,te.shadowRadius=de.radius,te.shadowMapSize=de.mapSize,te.shadowCameraNear=de.camera.near,te.shadowCameraFar=de.camera.far,i.pointShadow[y]=te,i.pointShadowMap[y]=j,i.pointShadowMatrix[y]=q.shadow.matrix,L++}i.point[y]=oe,y++}else if(q.isHemisphereLight){const oe=t.get(q);oe.skyColor.copy(q.color).multiplyScalar(W*A),oe.groundColor.copy(q.groundColor).multiplyScalar(W*A),i.hemi[S]=oe,S++}}b>0&&(e.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Te.LTC_FLOAT_1,i.rectAreaLTC2=Te.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Te.LTC_HALF_1,i.rectAreaLTC2=Te.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=m,i.ambient[1]=g,i.ambient[2]=v;const D=i.hash;(D.directionalLength!==M||D.pointLength!==y||D.spotLength!==_||D.rectAreaLength!==b||D.hemiLength!==S||D.numDirectionalShadows!==w||D.numPointShadows!==L||D.numSpotShadows!==T||D.numSpotMaps!==C)&&(i.directional.length=M,i.spot.length=_,i.rectArea.length=b,i.point.length=y,i.hemi.length=S,i.directionalShadow.length=w,i.directionalShadowMap.length=w,i.pointShadow.length=L,i.pointShadowMap.length=L,i.spotShadow.length=T,i.spotShadowMap.length=T,i.directionalShadowMatrix.length=w,i.pointShadowMatrix.length=L,i.spotLightMatrix.length=T+C-R,i.spotLightMap.length=C,i.numSpotLightShadowsWithMaps=R,D.directionalLength=M,D.pointLength=y,D.spotLength=_,D.rectAreaLength=b,D.hemiLength=S,D.numDirectionalShadows=w,D.numPointShadows=L,D.numSpotShadows=T,D.numSpotMaps=C,i.version=PP++)}function h(f,p){let m=0,g=0,v=0,M=0,y=0;const _=p.matrixWorldInverse;for(let b=0,S=f.length;b<S;b++){const w=f[b];if(w.isDirectionalLight){const L=i.directional[m];L.direction.setFromMatrixPosition(w.matrixWorld),r.setFromMatrixPosition(w.target.matrixWorld),L.direction.sub(r),L.direction.transformDirection(_),m++}else if(w.isSpotLight){const L=i.spot[v];L.position.setFromMatrixPosition(w.matrixWorld),L.position.applyMatrix4(_),L.direction.setFromMatrixPosition(w.matrixWorld),r.setFromMatrixPosition(w.target.matrixWorld),L.direction.sub(r),L.direction.transformDirection(_),v++}else if(w.isRectAreaLight){const L=i.rectArea[M];L.position.setFromMatrixPosition(w.matrixWorld),L.position.applyMatrix4(_),l.identity(),o.copy(w.matrixWorld),o.premultiply(_),l.extractRotation(o),L.halfWidth.set(w.width*.5,0,0),L.halfHeight.set(0,w.height*.5,0),L.halfWidth.applyMatrix4(l),L.halfHeight.applyMatrix4(l),M++}else if(w.isPointLight){const L=i.point[g];L.position.setFromMatrixPosition(w.matrixWorld),L.position.applyMatrix4(_),g++}else if(w.isHemisphereLight){const L=i.hemi[y];L.direction.setFromMatrixPosition(w.matrixWorld),L.direction.transformDirection(_),y++}}}return{setup:u,setupView:h,state:i}}function f_(s,e){const t=new IP(s,e),n=[],i=[];function r(){n.length=0,i.length=0}function o(p){n.push(p)}function l(p){i.push(p)}function u(p){t.setup(n,p)}function h(p){t.setupView(n,p)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:o,pushShadow:l}}function UP(s,e){let t=new WeakMap;function n(r,o=0){const l=t.get(r);let u;return l===void 0?(u=new f_(s,e),t.set(r,[u])):o>=l.length?(u=new f_(s,e),l.push(u)):u=l[o],u}function i(){t=new WeakMap}return{get:n,dispose:i}}class Dd extends Fn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=fv,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Od extends Fn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const DP=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,OP=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function NP(s,e,t){let n=new yu;const i=new fe,r=new fe,o=new zt,l=new Dd({depthPacking:dv}),u=new Od,h={},f=t.maxTextureSize,p={[Ar]:Vn,[Vn]:Ar,[Ji]:Ji},m=new tr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new fe},radius:{value:4}},vertexShader:DP,fragmentShader:OP}),g=m.clone();g.defines.HORIZONTAL_PASS=1;const v=new Et;v.setAttribute("position",new Wt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new wn(v,m),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=md;let _=this.type;this.render=function(L,T,C){if(y.enabled===!1||y.autoUpdate===!1&&y.needsUpdate===!1||L.length===0)return;const R=s.getRenderTarget(),A=s.getActiveCubeFace(),D=s.getActiveMipmapLevel(),X=s.state;X.setBlending(Er),X.buffers.color.setClear(1,1,1,1),X.buffers.depth.setTest(!0),X.setScissorTest(!1);const ce=_!==Zi&&this.type===Zi,q=_===Zi&&this.type!==Zi;for(let Y=0,W=L.length;Y<W;Y++){const he=L[Y],j=he.shadow;if(j===void 0){console.warn("THREE.WebGLShadowMap:",he,"has no shadow.");continue}if(j.autoUpdate===!1&&j.needsUpdate===!1)continue;i.copy(j.mapSize);const oe=j.getFrameExtents();if(i.multiply(oe),r.copy(j.mapSize),(i.x>f||i.y>f)&&(i.x>f&&(r.x=Math.floor(f/oe.x),i.x=r.x*oe.x,j.mapSize.x=r.x),i.y>f&&(r.y=Math.floor(f/oe.y),i.y=r.y*oe.y,j.mapSize.y=r.y)),j.map===null||ce===!0||q===!0){const te=this.type!==Zi?{minFilter:un,magFilter:un}:{};j.map!==null&&j.map.dispose(),j.map=new Hi(i.x,i.y,te),j.map.texture.name=he.name+".shadowMap",j.camera.updateProjectionMatrix()}s.setRenderTarget(j.map),s.clear();const de=j.getViewportCount();for(let te=0;te<de;te++){const Ee=j.getViewport(te);o.set(r.x*Ee.x,r.y*Ee.y,r.x*Ee.z,r.y*Ee.w),X.viewport(o),j.updateMatrices(he,te),n=j.getFrustum(),w(T,C,j.camera,he,this.type)}j.isPointLightShadow!==!0&&this.type===Zi&&b(j,C),j.needsUpdate=!1}_=this.type,y.needsUpdate=!1,s.setRenderTarget(R,A,D)};function b(L,T){const C=e.update(M);m.defines.VSM_SAMPLES!==L.blurSamples&&(m.defines.VSM_SAMPLES=L.blurSamples,g.defines.VSM_SAMPLES=L.blurSamples,m.needsUpdate=!0,g.needsUpdate=!0),L.mapPass===null&&(L.mapPass=new Hi(i.x,i.y)),m.uniforms.shadow_pass.value=L.map.texture,m.uniforms.resolution.value=L.mapSize,m.uniforms.radius.value=L.radius,s.setRenderTarget(L.mapPass),s.clear(),s.renderBufferDirect(T,null,C,m,M,null),g.uniforms.shadow_pass.value=L.mapPass.texture,g.uniforms.resolution.value=L.mapSize,g.uniforms.radius.value=L.radius,s.setRenderTarget(L.map),s.clear(),s.renderBufferDirect(T,null,C,g,M,null)}function S(L,T,C,R){let A=null;const D=C.isPointLight===!0?L.customDistanceMaterial:L.customDepthMaterial;if(D!==void 0)A=D;else if(A=C.isPointLight===!0?u:l,s.localClippingEnabled&&T.clipShadows===!0&&Array.isArray(T.clippingPlanes)&&T.clippingPlanes.length!==0||T.displacementMap&&T.displacementScale!==0||T.alphaMap&&T.alphaTest>0||T.map&&T.alphaTest>0){const X=A.uuid,ce=T.uuid;let q=h[X];q===void 0&&(q={},h[X]=q);let Y=q[ce];Y===void 0&&(Y=A.clone(),q[ce]=Y),A=Y}if(A.visible=T.visible,A.wireframe=T.wireframe,R===Zi?A.side=T.shadowSide!==null?T.shadowSide:T.side:A.side=T.shadowSide!==null?T.shadowSide:p[T.side],A.alphaMap=T.alphaMap,A.alphaTest=T.alphaTest,A.map=T.map,A.clipShadows=T.clipShadows,A.clippingPlanes=T.clippingPlanes,A.clipIntersection=T.clipIntersection,A.displacementMap=T.displacementMap,A.displacementScale=T.displacementScale,A.displacementBias=T.displacementBias,A.wireframeLinewidth=T.wireframeLinewidth,A.linewidth=T.linewidth,C.isPointLight===!0&&A.isMeshDistanceMaterial===!0){const X=s.properties.get(A);X.light=C}return A}function w(L,T,C,R,A){if(L.visible===!1)return;if(L.layers.test(T.layers)&&(L.isMesh||L.isLine||L.isPoints)&&(L.castShadow||L.receiveShadow&&A===Zi)&&(!L.frustumCulled||n.intersectsObject(L))){L.modelViewMatrix.multiplyMatrices(C.matrixWorldInverse,L.matrixWorld);const ce=e.update(L),q=L.material;if(Array.isArray(q)){const Y=ce.groups;for(let W=0,he=Y.length;W<he;W++){const j=Y[W],oe=q[j.materialIndex];if(oe&&oe.visible){const de=S(L,oe,R,A);s.renderBufferDirect(C,null,ce,de,L,j)}}}else if(q.visible){const Y=S(L,q,R,A);s.renderBufferDirect(C,null,ce,Y,L,null)}}const X=L.children;for(let ce=0,q=X.length;ce<q;ce++)w(X[ce],T,C,R,A)}}function FP(s,e,t){const n=t.isWebGL2;function i(){let H=!1;const Ae=new zt;let K=null;const be=new zt(0,0,0,0);return{setMask:function(Ce){K!==Ce&&!H&&(s.colorMask(Ce,Ce,Ce,Ce),K=Ce)},setLocked:function(Ce){H=Ce},setClear:function(Ce,Ct,qt,nn,Xi){Xi===!0&&(Ce*=nn,Ct*=nn,qt*=nn),Ae.set(Ce,Ct,qt,nn),be.equals(Ae)===!1&&(s.clearColor(Ce,Ct,qt,nn),be.copy(Ae))},reset:function(){H=!1,K=null,be.set(-1,0,0,0)}}}function r(){let H=!1,Ae=null,K=null,be=null;return{setTest:function(Ce){Ce?Ge(s.DEPTH_TEST):it(s.DEPTH_TEST)},setMask:function(Ce){Ae!==Ce&&!H&&(s.depthMask(Ce),Ae=Ce)},setFunc:function(Ce){if(K!==Ce){switch(Ce){case H0:s.depthFunc(s.NEVER);break;case G0:s.depthFunc(s.ALWAYS);break;case V0:s.depthFunc(s.LESS);break;case au:s.depthFunc(s.LEQUAL);break;case W0:s.depthFunc(s.EQUAL);break;case X0:s.depthFunc(s.GEQUAL);break;case $0:s.depthFunc(s.GREATER);break;case q0:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}K=Ce}},setLocked:function(Ce){H=Ce},setClear:function(Ce){be!==Ce&&(s.clearDepth(Ce),be=Ce)},reset:function(){H=!1,Ae=null,K=null,be=null}}}function o(){let H=!1,Ae=null,K=null,be=null,Ce=null,Ct=null,qt=null,nn=null,Xi=null;return{setTest:function(Yt){H||(Yt?Ge(s.STENCIL_TEST):it(s.STENCIL_TEST))},setMask:function(Yt){Ae!==Yt&&!H&&(s.stencilMask(Yt),Ae=Yt)},setFunc:function(Yt,mi,Tn){(K!==Yt||be!==mi||Ce!==Tn)&&(s.stencilFunc(Yt,mi,Tn),K=Yt,be=mi,Ce=Tn)},setOp:function(Yt,mi,Tn){(Ct!==Yt||qt!==mi||nn!==Tn)&&(s.stencilOp(Yt,mi,Tn),Ct=Yt,qt=mi,nn=Tn)},setLocked:function(Yt){H=Yt},setClear:function(Yt){Xi!==Yt&&(s.clearStencil(Yt),Xi=Yt)},reset:function(){H=!1,Ae=null,K=null,be=null,Ce=null,Ct=null,qt=null,nn=null,Xi=null}}}const l=new i,u=new r,h=new o,f=new WeakMap,p=new WeakMap;let m={},g={},v=new WeakMap,M=[],y=null,_=!1,b=null,S=null,w=null,L=null,T=null,C=null,R=null,A=!1,D=null,X=null,ce=null,q=null,Y=null;const W=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let he=!1,j=0;const oe=s.getParameter(s.VERSION);oe.indexOf("WebGL")!==-1?(j=parseFloat(/^WebGL (\d)/.exec(oe)[1]),he=j>=1):oe.indexOf("OpenGL ES")!==-1&&(j=parseFloat(/^OpenGL ES (\d)/.exec(oe)[1]),he=j>=2);let de=null,te={};const Ee=s.getParameter(s.SCISSOR_BOX),Q=s.getParameter(s.VIEWPORT),ge=new zt().fromArray(Ee),_e=new zt().fromArray(Q);function Pe(H,Ae,K,be){const Ce=new Uint8Array(4),Ct=s.createTexture();s.bindTexture(H,Ct),s.texParameteri(H,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(H,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let qt=0;qt<K;qt++)n&&(H===s.TEXTURE_3D||H===s.TEXTURE_2D_ARRAY)?s.texImage3D(Ae,0,s.RGBA,1,1,be,0,s.RGBA,s.UNSIGNED_BYTE,Ce):s.texImage2D(Ae+qt,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Ce);return Ct}const Ie={};Ie[s.TEXTURE_2D]=Pe(s.TEXTURE_2D,s.TEXTURE_2D,1),Ie[s.TEXTURE_CUBE_MAP]=Pe(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(Ie[s.TEXTURE_2D_ARRAY]=Pe(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),Ie[s.TEXTURE_3D]=Pe(s.TEXTURE_3D,s.TEXTURE_3D,1,1)),l.setClear(0,0,0,1),u.setClear(1),h.setClear(0),Ge(s.DEPTH_TEST),u.setFunc(au),pe(!1),Ne(Rf),Ge(s.CULL_FACE),re(Er);function Ge(H){m[H]!==!0&&(s.enable(H),m[H]=!0)}function it(H){m[H]!==!1&&(s.disable(H),m[H]=!1)}function Ze(H,Ae){return g[H]!==Ae?(s.bindFramebuffer(H,Ae),g[H]=Ae,n&&(H===s.DRAW_FRAMEBUFFER&&(g[s.FRAMEBUFFER]=Ae),H===s.FRAMEBUFFER&&(g[s.DRAW_FRAMEBUFFER]=Ae)),!0):!1}function Nt(H,Ae){let K=M,be=!1;if(H)if(K=v.get(Ae),K===void 0&&(K=[],v.set(Ae,K)),H.isWebGLMultipleRenderTargets){const Ce=H.texture;if(K.length!==Ce.length||K[0]!==s.COLOR_ATTACHMENT0){for(let Ct=0,qt=Ce.length;Ct<qt;Ct++)K[Ct]=s.COLOR_ATTACHMENT0+Ct;K.length=Ce.length,be=!0}}else K[0]!==s.COLOR_ATTACHMENT0&&(K[0]=s.COLOR_ATTACHMENT0,be=!0);else K[0]!==s.BACK&&(K[0]=s.BACK,be=!0);be&&(t.isWebGL2?s.drawBuffers(K):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(K))}function et(H){return y!==H?(s.useProgram(H),y=H,!0):!1}const z={[Rs]:s.FUNC_ADD,[P0]:s.FUNC_SUBTRACT,[L0]:s.FUNC_REVERSE_SUBTRACT};if(n)z[If]=s.MIN,z[Uf]=s.MAX;else{const H=e.get("EXT_blend_minmax");H!==null&&(z[If]=H.MIN_EXT,z[Uf]=H.MAX_EXT)}const Me={[I0]:s.ZERO,[U0]:s.ONE,[D0]:s.SRC_COLOR,[gd]:s.SRC_ALPHA,[k0]:s.SRC_ALPHA_SATURATE,[B0]:s.DST_COLOR,[N0]:s.DST_ALPHA,[O0]:s.ONE_MINUS_SRC_COLOR,[_d]:s.ONE_MINUS_SRC_ALPHA,[z0]:s.ONE_MINUS_DST_COLOR,[F0]:s.ONE_MINUS_DST_ALPHA};function re(H,Ae,K,be,Ce,Ct,qt,nn){if(H===Er){_===!0&&(it(s.BLEND),_=!1);return}if(_===!1&&(Ge(s.BLEND),_=!0),H!==C0){if(H!==b||nn!==A){if((S!==Rs||T!==Rs)&&(s.blendEquation(s.FUNC_ADD),S=Rs,T=Rs),nn)switch(H){case Ns:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Cf:s.blendFunc(s.ONE,s.ONE);break;case Pf:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case Lf:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}else switch(H){case Ns:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Cf:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case Pf:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case Lf:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}w=null,L=null,C=null,R=null,b=H,A=nn}return}Ce=Ce||Ae,Ct=Ct||K,qt=qt||be,(Ae!==S||Ce!==T)&&(s.blendEquationSeparate(z[Ae],z[Ce]),S=Ae,T=Ce),(K!==w||be!==L||Ct!==C||qt!==R)&&(s.blendFuncSeparate(Me[K],Me[be],Me[Ct],Me[qt]),w=K,L=be,C=Ct,R=qt),b=H,A=!1}function xe(H,Ae){H.side===Ji?it(s.CULL_FACE):Ge(s.CULL_FACE);let K=H.side===Vn;Ae&&(K=!K),pe(K),H.blending===Ns&&H.transparent===!1?re(Er):re(H.blending,H.blendEquation,H.blendSrc,H.blendDst,H.blendEquationAlpha,H.blendSrcAlpha,H.blendDstAlpha,H.premultipliedAlpha),u.setFunc(H.depthFunc),u.setTest(H.depthTest),u.setMask(H.depthWrite),l.setMask(H.colorWrite);const be=H.stencilWrite;h.setTest(be),be&&(h.setMask(H.stencilWriteMask),h.setFunc(H.stencilFunc,H.stencilRef,H.stencilFuncMask),h.setOp(H.stencilFail,H.stencilZFail,H.stencilZPass)),Fe(H.polygonOffset,H.polygonOffsetFactor,H.polygonOffsetUnits),H.alphaToCoverage===!0?Ge(s.SAMPLE_ALPHA_TO_COVERAGE):it(s.SAMPLE_ALPHA_TO_COVERAGE)}function pe(H){D!==H&&(H?s.frontFace(s.CW):s.frontFace(s.CCW),D=H)}function Ne(H){H!==A0?(Ge(s.CULL_FACE),H!==X&&(H===Rf?s.cullFace(s.BACK):H===R0?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):it(s.CULL_FACE),X=H}function Ue(H){H!==ce&&(he&&s.lineWidth(H),ce=H)}function Fe(H,Ae,K){H?(Ge(s.POLYGON_OFFSET_FILL),(q!==Ae||Y!==K)&&(s.polygonOffset(Ae,K),q=Ae,Y=K)):it(s.POLYGON_OFFSET_FILL)}function tt(H){H?Ge(s.SCISSOR_TEST):it(s.SCISSOR_TEST)}function rt(H){H===void 0&&(H=s.TEXTURE0+W-1),de!==H&&(s.activeTexture(H),de=H)}function kt(H,Ae,K){K===void 0&&(de===null?K=s.TEXTURE0+W-1:K=de);let be=te[K];be===void 0&&(be={type:void 0,texture:void 0},te[K]=be),(be.type!==H||be.texture!==Ae)&&(de!==K&&(s.activeTexture(K),de=K),s.bindTexture(H,Ae||Ie[H]),be.type=H,be.texture=Ae)}function F(){const H=te[de];H!==void 0&&H.type!==void 0&&(s.bindTexture(H.type,null),H.type=void 0,H.texture=void 0)}function U(){try{s.compressedTexImage2D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function ee(){try{s.compressedTexImage3D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function ye(){try{s.texSubImage2D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function ve(){try{s.texSubImage3D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Se(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function We(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function we(){try{s.texStorage2D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function se(){try{s.texStorage3D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function $e(){try{s.texImage2D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function qe(){try{s.texImage3D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Ye(H){ge.equals(H)===!1&&(s.scissor(H.x,H.y,H.z,H.w),ge.copy(H))}function ke(H){_e.equals(H)===!1&&(s.viewport(H.x,H.y,H.z,H.w),_e.copy(H))}function He(H,Ae){let K=p.get(Ae);K===void 0&&(K=new WeakMap,p.set(Ae,K));let be=K.get(H);be===void 0&&(be=s.getUniformBlockIndex(Ae,H.name),K.set(H,be))}function gt(H,Ae){const be=p.get(Ae).get(H);f.get(Ae)!==be&&(s.uniformBlockBinding(Ae,be,H.__bindingPointIndex),f.set(Ae,be))}function Ht(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),n===!0&&(s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),m={},de=null,te={},g={},v=new WeakMap,M=[],y=null,_=!1,b=null,S=null,w=null,L=null,T=null,C=null,R=null,A=!1,D=null,X=null,ce=null,q=null,Y=null,ge.set(0,0,s.canvas.width,s.canvas.height),_e.set(0,0,s.canvas.width,s.canvas.height),l.reset(),u.reset(),h.reset()}return{buffers:{color:l,depth:u,stencil:h},enable:Ge,disable:it,bindFramebuffer:Ze,drawBuffers:Nt,useProgram:et,setBlending:re,setMaterial:xe,setFlipSided:pe,setCullFace:Ne,setLineWidth:Ue,setPolygonOffset:Fe,setScissorTest:tt,activeTexture:rt,bindTexture:kt,unbindTexture:F,compressedTexImage2D:U,compressedTexImage3D:ee,texImage2D:$e,texImage3D:qe,updateUBOMapping:He,uniformBlockBinding:gt,texStorage2D:we,texStorage3D:se,texSubImage2D:ye,texSubImage3D:ve,compressedTexSubImage2D:Se,compressedTexSubImage3D:We,scissor:Ye,viewport:ke,reset:Ht}}function BP(s,e,t,n,i,r,o){const l=i.isWebGL2,u=i.maxTextures,h=i.maxCubemapSize,f=i.maxTextureSize,p=i.maxSamples,m=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,g=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),v=new WeakMap;let M;const y=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function b(F,U){return _?new OffscreenCanvas(F,U):Zo("canvas")}function S(F,U,ee,ye){let ve=1;if((F.width>ye||F.height>ye)&&(ve=ye/Math.max(F.width,F.height)),ve<1||U===!0)if(typeof HTMLImageElement<"u"&&F instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&F instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&F instanceof ImageBitmap){const Se=U?cu:Math.floor,We=Se(ve*F.width),we=Se(ve*F.height);M===void 0&&(M=b(We,we));const se=ee?b(We,we):M;return se.width=We,se.height=we,se.getContext("2d").drawImage(F,0,0,We,we),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+F.width+"x"+F.height+") to ("+We+"x"+we+")."),se}else return"data"in F&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+F.width+"x"+F.height+")."),F;return F}function w(F){return rd(F.width)&&rd(F.height)}function L(F){return l?!1:F.wrapS!==Dn||F.wrapT!==Dn||F.minFilter!==un&&F.minFilter!==hn}function T(F,U){return F.generateMipmaps&&U&&F.minFilter!==un&&F.minFilter!==hn}function C(F){s.generateMipmap(F)}function R(F,U,ee,ye,ve=!1){if(l===!1)return U;if(F!==null){if(s[F]!==void 0)return s[F];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+F+"'")}let Se=U;return U===s.RED&&(ee===s.FLOAT&&(Se=s.R32F),ee===s.HALF_FLOAT&&(Se=s.R16F),ee===s.UNSIGNED_BYTE&&(Se=s.R8)),U===s.RG&&(ee===s.FLOAT&&(Se=s.RG32F),ee===s.HALF_FLOAT&&(Se=s.RG16F),ee===s.UNSIGNED_BYTE&&(Se=s.RG8)),U===s.RGBA&&(ee===s.FLOAT&&(Se=s.RGBA32F),ee===s.HALF_FLOAT&&(Se=s.RGBA16F),ee===s.UNSIGNED_BYTE&&(Se=ye===mt&&ve===!1?s.SRGB8_ALPHA8:s.RGBA8),ee===s.UNSIGNED_SHORT_4_4_4_4&&(Se=s.RGBA4),ee===s.UNSIGNED_SHORT_5_5_5_1&&(Se=s.RGB5_A1)),(Se===s.R16F||Se===s.R32F||Se===s.RG16F||Se===s.RG32F||Se===s.RGBA16F||Se===s.RGBA32F)&&e.get("EXT_color_buffer_float"),Se}function A(F,U,ee){return T(F,ee)===!0||F.isFramebufferTexture&&F.minFilter!==un&&F.minFilter!==hn?Math.log2(Math.max(U.width,U.height))+1:F.mipmaps!==void 0&&F.mipmaps.length>0?F.mipmaps.length:F.isCompressedTexture&&Array.isArray(F.image)?U.mipmaps.length:1}function D(F){return F===un||F===ou||F===Do?s.NEAREST:s.LINEAR}function X(F){const U=F.target;U.removeEventListener("dispose",X),q(U),U.isVideoTexture&&v.delete(U)}function ce(F){const U=F.target;U.removeEventListener("dispose",ce),W(U)}function q(F){const U=n.get(F);if(U.__webglInit===void 0)return;const ee=F.source,ye=y.get(ee);if(ye){const ve=ye[U.__cacheKey];ve.usedTimes--,ve.usedTimes===0&&Y(F),Object.keys(ye).length===0&&y.delete(ee)}n.remove(F)}function Y(F){const U=n.get(F);s.deleteTexture(U.__webglTexture);const ee=F.source,ye=y.get(ee);delete ye[U.__cacheKey],o.memory.textures--}function W(F){const U=F.texture,ee=n.get(F),ye=n.get(U);if(ye.__webglTexture!==void 0&&(s.deleteTexture(ye.__webglTexture),o.memory.textures--),F.depthTexture&&F.depthTexture.dispose(),F.isWebGLCubeRenderTarget)for(let ve=0;ve<6;ve++)s.deleteFramebuffer(ee.__webglFramebuffer[ve]),ee.__webglDepthbuffer&&s.deleteRenderbuffer(ee.__webglDepthbuffer[ve]);else{if(s.deleteFramebuffer(ee.__webglFramebuffer),ee.__webglDepthbuffer&&s.deleteRenderbuffer(ee.__webglDepthbuffer),ee.__webglMultisampledFramebuffer&&s.deleteFramebuffer(ee.__webglMultisampledFramebuffer),ee.__webglColorRenderbuffer)for(let ve=0;ve<ee.__webglColorRenderbuffer.length;ve++)ee.__webglColorRenderbuffer[ve]&&s.deleteRenderbuffer(ee.__webglColorRenderbuffer[ve]);ee.__webglDepthRenderbuffer&&s.deleteRenderbuffer(ee.__webglDepthRenderbuffer)}if(F.isWebGLMultipleRenderTargets)for(let ve=0,Se=U.length;ve<Se;ve++){const We=n.get(U[ve]);We.__webglTexture&&(s.deleteTexture(We.__webglTexture),o.memory.textures--),n.remove(U[ve])}n.remove(U),n.remove(F)}let he=0;function j(){he=0}function oe(){const F=he;return F>=u&&console.warn("THREE.WebGLTextures: Trying to use "+F+" texture units while this GPU supports only "+u),he+=1,F}function de(F){const U=[];return U.push(F.wrapS),U.push(F.wrapT),U.push(F.wrapR||0),U.push(F.magFilter),U.push(F.minFilter),U.push(F.anisotropy),U.push(F.internalFormat),U.push(F.format),U.push(F.type),U.push(F.generateMipmaps),U.push(F.premultiplyAlpha),U.push(F.flipY),U.push(F.unpackAlignment),U.push(F.colorSpace),U.join()}function te(F,U){const ee=n.get(F);if(F.isVideoTexture&&rt(F),F.isRenderTargetTexture===!1&&F.version>0&&ee.__version!==F.version){const ye=F.image;if(ye===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ye.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ze(ee,F,U);return}}t.bindTexture(s.TEXTURE_2D,ee.__webglTexture,s.TEXTURE0+U)}function Ee(F,U){const ee=n.get(F);if(F.version>0&&ee.__version!==F.version){Ze(ee,F,U);return}t.bindTexture(s.TEXTURE_2D_ARRAY,ee.__webglTexture,s.TEXTURE0+U)}function Q(F,U){const ee=n.get(F);if(F.version>0&&ee.__version!==F.version){Ze(ee,F,U);return}t.bindTexture(s.TEXTURE_3D,ee.__webglTexture,s.TEXTURE0+U)}function ge(F,U){const ee=n.get(F);if(F.version>0&&ee.__version!==F.version){Nt(ee,F,U);return}t.bindTexture(s.TEXTURE_CUBE_MAP,ee.__webglTexture,s.TEXTURE0+U)}const _e={[Ho]:s.REPEAT,[Dn]:s.CLAMP_TO_EDGE,[Go]:s.MIRRORED_REPEAT},Pe={[un]:s.NEAREST,[ou]:s.NEAREST_MIPMAP_NEAREST,[Do]:s.NEAREST_MIPMAP_LINEAR,[hn]:s.LINEAR,[yd]:s.LINEAR_MIPMAP_NEAREST,[jr]:s.LINEAR_MIPMAP_LINEAR},Ie={[gv]:s.NEVER,[bv]:s.ALWAYS,[_v]:s.LESS,[yv]:s.LEQUAL,[vv]:s.EQUAL,[Sv]:s.GEQUAL,[xv]:s.GREATER,[Mv]:s.NOTEQUAL};function Ge(F,U,ee){if(ee?(s.texParameteri(F,s.TEXTURE_WRAP_S,_e[U.wrapS]),s.texParameteri(F,s.TEXTURE_WRAP_T,_e[U.wrapT]),(F===s.TEXTURE_3D||F===s.TEXTURE_2D_ARRAY)&&s.texParameteri(F,s.TEXTURE_WRAP_R,_e[U.wrapR]),s.texParameteri(F,s.TEXTURE_MAG_FILTER,Pe[U.magFilter]),s.texParameteri(F,s.TEXTURE_MIN_FILTER,Pe[U.minFilter])):(s.texParameteri(F,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(F,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),(F===s.TEXTURE_3D||F===s.TEXTURE_2D_ARRAY)&&s.texParameteri(F,s.TEXTURE_WRAP_R,s.CLAMP_TO_EDGE),(U.wrapS!==Dn||U.wrapT!==Dn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(F,s.TEXTURE_MAG_FILTER,D(U.magFilter)),s.texParameteri(F,s.TEXTURE_MIN_FILTER,D(U.minFilter)),U.minFilter!==un&&U.minFilter!==hn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),U.compareFunction&&(s.texParameteri(F,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(F,s.TEXTURE_COMPARE_FUNC,Ie[U.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const ye=e.get("EXT_texture_filter_anisotropic");if(U.magFilter===un||U.minFilter!==Do&&U.minFilter!==jr||U.type===Ki&&e.has("OES_texture_float_linear")===!1||l===!1&&U.type===ka&&e.has("OES_texture_half_float_linear")===!1)return;(U.anisotropy>1||n.get(U).__currentAnisotropy)&&(s.texParameterf(F,ye.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(U.anisotropy,i.getMaxAnisotropy())),n.get(U).__currentAnisotropy=U.anisotropy)}}function it(F,U){let ee=!1;F.__webglInit===void 0&&(F.__webglInit=!0,U.addEventListener("dispose",X));const ye=U.source;let ve=y.get(ye);ve===void 0&&(ve={},y.set(ye,ve));const Se=de(U);if(Se!==F.__cacheKey){ve[Se]===void 0&&(ve[Se]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,ee=!0),ve[Se].usedTimes++;const We=ve[F.__cacheKey];We!==void 0&&(ve[F.__cacheKey].usedTimes--,We.usedTimes===0&&Y(U)),F.__cacheKey=Se,F.__webglTexture=ve[Se].texture}return ee}function Ze(F,U,ee){let ye=s.TEXTURE_2D;(U.isDataArrayTexture||U.isCompressedArrayTexture)&&(ye=s.TEXTURE_2D_ARRAY),U.isData3DTexture&&(ye=s.TEXTURE_3D);const ve=it(F,U),Se=U.source;t.bindTexture(ye,F.__webglTexture,s.TEXTURE0+ee);const We=n.get(Se);if(Se.version!==We.__version||ve===!0){t.activeTexture(s.TEXTURE0+ee),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,U.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,U.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,U.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE);const we=L(U)&&w(U.image)===!1;let se=S(U.image,we,!1,f);se=kt(U,se);const $e=w(se)||l,qe=r.convert(U.format,U.colorSpace);let Ye=r.convert(U.type),ke=R(U.internalFormat,qe,Ye,U.colorSpace);Ge(ye,U,$e);let He;const gt=U.mipmaps,Ht=l&&U.isVideoTexture!==!0,H=We.__version===void 0||ve===!0,Ae=A(U,se,$e);if(U.isDepthTexture)ke=s.DEPTH_COMPONENT,l?U.type===Ki?ke=s.DEPTH_COMPONENT32F:U.type===br?ke=s.DEPTH_COMPONENT24:U.type===Yr?ke=s.DEPTH24_STENCIL8:ke=s.DEPTH_COMPONENT16:U.type===Ki&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),U.format===Zr&&ke===s.DEPTH_COMPONENT&&U.type!==pu&&U.type!==br&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),U.type=br,Ye=r.convert(U.type)),U.format===zs&&ke===s.DEPTH_COMPONENT&&(ke=s.DEPTH_STENCIL,U.type!==Yr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),U.type=Yr,Ye=r.convert(U.type))),H&&(Ht?t.texStorage2D(s.TEXTURE_2D,1,ke,se.width,se.height):t.texImage2D(s.TEXTURE_2D,0,ke,se.width,se.height,0,qe,Ye,null));else if(U.isDataTexture)if(gt.length>0&&$e){Ht&&H&&t.texStorage2D(s.TEXTURE_2D,Ae,ke,gt[0].width,gt[0].height);for(let K=0,be=gt.length;K<be;K++)He=gt[K],Ht?t.texSubImage2D(s.TEXTURE_2D,K,0,0,He.width,He.height,qe,Ye,He.data):t.texImage2D(s.TEXTURE_2D,K,ke,He.width,He.height,0,qe,Ye,He.data);U.generateMipmaps=!1}else Ht?(H&&t.texStorage2D(s.TEXTURE_2D,Ae,ke,se.width,se.height),t.texSubImage2D(s.TEXTURE_2D,0,0,0,se.width,se.height,qe,Ye,se.data)):t.texImage2D(s.TEXTURE_2D,0,ke,se.width,se.height,0,qe,Ye,se.data);else if(U.isCompressedTexture)if(U.isCompressedArrayTexture){Ht&&H&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Ae,ke,gt[0].width,gt[0].height,se.depth);for(let K=0,be=gt.length;K<be;K++)He=gt[K],U.format!==hi?qe!==null?Ht?t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,K,0,0,0,He.width,He.height,se.depth,qe,He.data,0,0):t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,K,ke,He.width,He.height,se.depth,0,He.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ht?t.texSubImage3D(s.TEXTURE_2D_ARRAY,K,0,0,0,He.width,He.height,se.depth,qe,Ye,He.data):t.texImage3D(s.TEXTURE_2D_ARRAY,K,ke,He.width,He.height,se.depth,0,qe,Ye,He.data)}else{Ht&&H&&t.texStorage2D(s.TEXTURE_2D,Ae,ke,gt[0].width,gt[0].height);for(let K=0,be=gt.length;K<be;K++)He=gt[K],U.format!==hi?qe!==null?Ht?t.compressedTexSubImage2D(s.TEXTURE_2D,K,0,0,He.width,He.height,qe,He.data):t.compressedTexImage2D(s.TEXTURE_2D,K,ke,He.width,He.height,0,He.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ht?t.texSubImage2D(s.TEXTURE_2D,K,0,0,He.width,He.height,qe,Ye,He.data):t.texImage2D(s.TEXTURE_2D,K,ke,He.width,He.height,0,qe,Ye,He.data)}else if(U.isDataArrayTexture)Ht?(H&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Ae,ke,se.width,se.height,se.depth),t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,se.width,se.height,se.depth,qe,Ye,se.data)):t.texImage3D(s.TEXTURE_2D_ARRAY,0,ke,se.width,se.height,se.depth,0,qe,Ye,se.data);else if(U.isData3DTexture)Ht?(H&&t.texStorage3D(s.TEXTURE_3D,Ae,ke,se.width,se.height,se.depth),t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,se.width,se.height,se.depth,qe,Ye,se.data)):t.texImage3D(s.TEXTURE_3D,0,ke,se.width,se.height,se.depth,0,qe,Ye,se.data);else if(U.isFramebufferTexture){if(H)if(Ht)t.texStorage2D(s.TEXTURE_2D,Ae,ke,se.width,se.height);else{let K=se.width,be=se.height;for(let Ce=0;Ce<Ae;Ce++)t.texImage2D(s.TEXTURE_2D,Ce,ke,K,be,0,qe,Ye,null),K>>=1,be>>=1}}else if(gt.length>0&&$e){Ht&&H&&t.texStorage2D(s.TEXTURE_2D,Ae,ke,gt[0].width,gt[0].height);for(let K=0,be=gt.length;K<be;K++)He=gt[K],Ht?t.texSubImage2D(s.TEXTURE_2D,K,0,0,qe,Ye,He):t.texImage2D(s.TEXTURE_2D,K,ke,qe,Ye,He);U.generateMipmaps=!1}else Ht?(H&&t.texStorage2D(s.TEXTURE_2D,Ae,ke,se.width,se.height),t.texSubImage2D(s.TEXTURE_2D,0,0,0,qe,Ye,se)):t.texImage2D(s.TEXTURE_2D,0,ke,qe,Ye,se);T(U,$e)&&C(ye),We.__version=Se.version,U.onUpdate&&U.onUpdate(U)}F.__version=U.version}function Nt(F,U,ee){if(U.image.length!==6)return;const ye=it(F,U),ve=U.source;t.bindTexture(s.TEXTURE_CUBE_MAP,F.__webglTexture,s.TEXTURE0+ee);const Se=n.get(ve);if(ve.version!==Se.__version||ye===!0){t.activeTexture(s.TEXTURE0+ee),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,U.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,U.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,U.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE);const We=U.isCompressedTexture||U.image[0].isCompressedTexture,we=U.image[0]&&U.image[0].isDataTexture,se=[];for(let K=0;K<6;K++)!We&&!we?se[K]=S(U.image[K],!1,!0,h):se[K]=we?U.image[K].image:U.image[K],se[K]=kt(U,se[K]);const $e=se[0],qe=w($e)||l,Ye=r.convert(U.format,U.colorSpace),ke=r.convert(U.type),He=R(U.internalFormat,Ye,ke,U.colorSpace),gt=l&&U.isVideoTexture!==!0,Ht=Se.__version===void 0||ye===!0;let H=A(U,$e,qe);Ge(s.TEXTURE_CUBE_MAP,U,qe);let Ae;if(We){gt&&Ht&&t.texStorage2D(s.TEXTURE_CUBE_MAP,H,He,$e.width,$e.height);for(let K=0;K<6;K++){Ae=se[K].mipmaps;for(let be=0;be<Ae.length;be++){const Ce=Ae[be];U.format!==hi?Ye!==null?gt?t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+K,be,0,0,Ce.width,Ce.height,Ye,Ce.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+K,be,He,Ce.width,Ce.height,0,Ce.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):gt?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+K,be,0,0,Ce.width,Ce.height,Ye,ke,Ce.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+K,be,He,Ce.width,Ce.height,0,Ye,ke,Ce.data)}}}else{Ae=U.mipmaps,gt&&Ht&&(Ae.length>0&&H++,t.texStorage2D(s.TEXTURE_CUBE_MAP,H,He,se[0].width,se[0].height));for(let K=0;K<6;K++)if(we){gt?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,0,0,se[K].width,se[K].height,Ye,ke,se[K].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,He,se[K].width,se[K].height,0,Ye,ke,se[K].data);for(let be=0;be<Ae.length;be++){const Ct=Ae[be].image[K].image;gt?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+K,be+1,0,0,Ct.width,Ct.height,Ye,ke,Ct.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+K,be+1,He,Ct.width,Ct.height,0,Ye,ke,Ct.data)}}else{gt?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,0,0,Ye,ke,se[K]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,He,Ye,ke,se[K]);for(let be=0;be<Ae.length;be++){const Ce=Ae[be];gt?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+K,be+1,0,0,Ye,ke,Ce.image[K]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+K,be+1,He,Ye,ke,Ce.image[K])}}}T(U,qe)&&C(s.TEXTURE_CUBE_MAP),Se.__version=ve.version,U.onUpdate&&U.onUpdate(U)}F.__version=U.version}function et(F,U,ee,ye,ve){const Se=r.convert(ee.format,ee.colorSpace),We=r.convert(ee.type),we=R(ee.internalFormat,Se,We,ee.colorSpace);n.get(U).__hasExternalTextures||(ve===s.TEXTURE_3D||ve===s.TEXTURE_2D_ARRAY?t.texImage3D(ve,0,we,U.width,U.height,U.depth,0,Se,We,null):t.texImage2D(ve,0,we,U.width,U.height,0,Se,We,null)),t.bindFramebuffer(s.FRAMEBUFFER,F),tt(U)?m.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,ye,ve,n.get(ee).__webglTexture,0,Fe(U)):(ve===s.TEXTURE_2D||ve>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&ve<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,ye,ve,n.get(ee).__webglTexture,0),t.bindFramebuffer(s.FRAMEBUFFER,null)}function z(F,U,ee){if(s.bindRenderbuffer(s.RENDERBUFFER,F),U.depthBuffer&&!U.stencilBuffer){let ye=s.DEPTH_COMPONENT16;if(ee||tt(U)){const ve=U.depthTexture;ve&&ve.isDepthTexture&&(ve.type===Ki?ye=s.DEPTH_COMPONENT32F:ve.type===br&&(ye=s.DEPTH_COMPONENT24));const Se=Fe(U);tt(U)?m.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Se,ye,U.width,U.height):s.renderbufferStorageMultisample(s.RENDERBUFFER,Se,ye,U.width,U.height)}else s.renderbufferStorage(s.RENDERBUFFER,ye,U.width,U.height);s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,F)}else if(U.depthBuffer&&U.stencilBuffer){const ye=Fe(U);ee&&tt(U)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,ye,s.DEPTH24_STENCIL8,U.width,U.height):tt(U)?m.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,ye,s.DEPTH24_STENCIL8,U.width,U.height):s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_STENCIL,U.width,U.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,F)}else{const ye=U.isWebGLMultipleRenderTargets===!0?U.texture:[U.texture];for(let ve=0;ve<ye.length;ve++){const Se=ye[ve],We=r.convert(Se.format,Se.colorSpace),we=r.convert(Se.type),se=R(Se.internalFormat,We,we,Se.colorSpace),$e=Fe(U);ee&&tt(U)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,$e,se,U.width,U.height):tt(U)?m.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,$e,se,U.width,U.height):s.renderbufferStorage(s.RENDERBUFFER,se,U.width,U.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function Me(F,U){if(U&&U.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,F),!(U.depthTexture&&U.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(U.depthTexture).__webglTexture||U.depthTexture.image.width!==U.width||U.depthTexture.image.height!==U.height)&&(U.depthTexture.image.width=U.width,U.depthTexture.image.height=U.height,U.depthTexture.needsUpdate=!0),te(U.depthTexture,0);const ye=n.get(U.depthTexture).__webglTexture,ve=Fe(U);if(U.depthTexture.format===Zr)tt(U)?m.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,ye,0,ve):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,ye,0);else if(U.depthTexture.format===zs)tt(U)?m.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,ye,0,ve):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,ye,0);else throw new Error("Unknown depthTexture format")}function re(F){const U=n.get(F),ee=F.isWebGLCubeRenderTarget===!0;if(F.depthTexture&&!U.__autoAllocateDepthBuffer){if(ee)throw new Error("target.depthTexture not supported in Cube render targets");Me(U.__webglFramebuffer,F)}else if(ee){U.__webglDepthbuffer=[];for(let ye=0;ye<6;ye++)t.bindFramebuffer(s.FRAMEBUFFER,U.__webglFramebuffer[ye]),U.__webglDepthbuffer[ye]=s.createRenderbuffer(),z(U.__webglDepthbuffer[ye],F,!1)}else t.bindFramebuffer(s.FRAMEBUFFER,U.__webglFramebuffer),U.__webglDepthbuffer=s.createRenderbuffer(),z(U.__webglDepthbuffer,F,!1);t.bindFramebuffer(s.FRAMEBUFFER,null)}function xe(F,U,ee){const ye=n.get(F);U!==void 0&&et(ye.__webglFramebuffer,F,F.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D),ee!==void 0&&re(F)}function pe(F){const U=F.texture,ee=n.get(F),ye=n.get(U);F.addEventListener("dispose",ce),F.isWebGLMultipleRenderTargets!==!0&&(ye.__webglTexture===void 0&&(ye.__webglTexture=s.createTexture()),ye.__version=U.version,o.memory.textures++);const ve=F.isWebGLCubeRenderTarget===!0,Se=F.isWebGLMultipleRenderTargets===!0,We=w(F)||l;if(ve){ee.__webglFramebuffer=[];for(let we=0;we<6;we++)ee.__webglFramebuffer[we]=s.createFramebuffer()}else{if(ee.__webglFramebuffer=s.createFramebuffer(),Se)if(i.drawBuffers){const we=F.texture;for(let se=0,$e=we.length;se<$e;se++){const qe=n.get(we[se]);qe.__webglTexture===void 0&&(qe.__webglTexture=s.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(l&&F.samples>0&&tt(F)===!1){const we=Se?U:[U];ee.__webglMultisampledFramebuffer=s.createFramebuffer(),ee.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,ee.__webglMultisampledFramebuffer);for(let se=0;se<we.length;se++){const $e=we[se];ee.__webglColorRenderbuffer[se]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,ee.__webglColorRenderbuffer[se]);const qe=r.convert($e.format,$e.colorSpace),Ye=r.convert($e.type),ke=R($e.internalFormat,qe,Ye,$e.colorSpace,F.isXRRenderTarget===!0),He=Fe(F);s.renderbufferStorageMultisample(s.RENDERBUFFER,He,ke,F.width,F.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+se,s.RENDERBUFFER,ee.__webglColorRenderbuffer[se])}s.bindRenderbuffer(s.RENDERBUFFER,null),F.depthBuffer&&(ee.__webglDepthRenderbuffer=s.createRenderbuffer(),z(ee.__webglDepthRenderbuffer,F,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(ve){t.bindTexture(s.TEXTURE_CUBE_MAP,ye.__webglTexture),Ge(s.TEXTURE_CUBE_MAP,U,We);for(let we=0;we<6;we++)et(ee.__webglFramebuffer[we],F,U,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+we);T(U,We)&&C(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Se){const we=F.texture;for(let se=0,$e=we.length;se<$e;se++){const qe=we[se],Ye=n.get(qe);t.bindTexture(s.TEXTURE_2D,Ye.__webglTexture),Ge(s.TEXTURE_2D,qe,We),et(ee.__webglFramebuffer,F,qe,s.COLOR_ATTACHMENT0+se,s.TEXTURE_2D),T(qe,We)&&C(s.TEXTURE_2D)}t.unbindTexture()}else{let we=s.TEXTURE_2D;(F.isWebGL3DRenderTarget||F.isWebGLArrayRenderTarget)&&(l?we=F.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(we,ye.__webglTexture),Ge(we,U,We),et(ee.__webglFramebuffer,F,U,s.COLOR_ATTACHMENT0,we),T(U,We)&&C(we),t.unbindTexture()}F.depthBuffer&&re(F)}function Ne(F){const U=w(F)||l,ee=F.isWebGLMultipleRenderTargets===!0?F.texture:[F.texture];for(let ye=0,ve=ee.length;ye<ve;ye++){const Se=ee[ye];if(T(Se,U)){const We=F.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:s.TEXTURE_2D,we=n.get(Se).__webglTexture;t.bindTexture(We,we),C(We),t.unbindTexture()}}}function Ue(F){if(l&&F.samples>0&&tt(F)===!1){const U=F.isWebGLMultipleRenderTargets?F.texture:[F.texture],ee=F.width,ye=F.height;let ve=s.COLOR_BUFFER_BIT;const Se=[],We=F.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,we=n.get(F),se=F.isWebGLMultipleRenderTargets===!0;if(se)for(let $e=0;$e<U.length;$e++)t.bindFramebuffer(s.FRAMEBUFFER,we.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+$e,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,we.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+$e,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,we.__webglMultisampledFramebuffer),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,we.__webglFramebuffer);for(let $e=0;$e<U.length;$e++){Se.push(s.COLOR_ATTACHMENT0+$e),F.depthBuffer&&Se.push(We);const qe=we.__ignoreDepthValues!==void 0?we.__ignoreDepthValues:!1;if(qe===!1&&(F.depthBuffer&&(ve|=s.DEPTH_BUFFER_BIT),F.stencilBuffer&&(ve|=s.STENCIL_BUFFER_BIT)),se&&s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,we.__webglColorRenderbuffer[$e]),qe===!0&&(s.invalidateFramebuffer(s.READ_FRAMEBUFFER,[We]),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[We])),se){const Ye=n.get(U[$e]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,Ye,0)}s.blitFramebuffer(0,0,ee,ye,0,0,ee,ye,ve,s.NEAREST),g&&s.invalidateFramebuffer(s.READ_FRAMEBUFFER,Se)}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),se)for(let $e=0;$e<U.length;$e++){t.bindFramebuffer(s.FRAMEBUFFER,we.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+$e,s.RENDERBUFFER,we.__webglColorRenderbuffer[$e]);const qe=n.get(U[$e]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,we.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+$e,s.TEXTURE_2D,qe,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,we.__webglMultisampledFramebuffer)}}function Fe(F){return Math.min(p,F.samples)}function tt(F){const U=n.get(F);return l&&F.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&U.__useRenderToTexture!==!1}function rt(F){const U=o.render.frame;v.get(F)!==U&&(v.set(F,U),F.update())}function kt(F,U){const ee=F.colorSpace,ye=F.format,ve=F.type;return F.isCompressedTexture===!0||F.format===lu||ee!==ki&&ee!==Jr&&(ee===mt?l===!1?e.has("EXT_sRGB")===!0&&ye===hi?(F.format=lu,F.minFilter=hn,F.generateMipmaps=!1):U=Cd.sRGBToLinear(U):(ye!==hi||ve!==wr)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",ee)),U}this.allocateTextureUnit=oe,this.resetTextureUnits=j,this.setTexture2D=te,this.setTexture2DArray=Ee,this.setTexture3D=Q,this.setTextureCube=ge,this.rebindTextures=xe,this.setupRenderTarget=pe,this.updateRenderTargetMipmap=Ne,this.updateMultisampleRenderTarget=Ue,this.setupDepthRenderbuffer=re,this.setupFrameBufferTexture=et,this.useMultisampledRTT=tt}function Nv(s,e,t){const n=t.isWebGL2;function i(r,o=Jr){let l;if(r===wr)return s.UNSIGNED_BYTE;if(r===Md)return s.UNSIGNED_SHORT_4_4_4_4;if(r===Sd)return s.UNSIGNED_SHORT_5_5_5_1;if(r===ev)return s.BYTE;if(r===tv)return s.SHORT;if(r===pu)return s.UNSIGNED_SHORT;if(r===xd)return s.INT;if(r===br)return s.UNSIGNED_INT;if(r===Ki)return s.FLOAT;if(r===ka)return n?s.HALF_FLOAT:(l=e.get("OES_texture_half_float"),l!==null?l.HALF_FLOAT_OES:null);if(r===nv)return s.ALPHA;if(r===hi)return s.RGBA;if(r===iv)return s.LUMINANCE;if(r===rv)return s.LUMINANCE_ALPHA;if(r===Zr)return s.DEPTH_COMPONENT;if(r===zs)return s.DEPTH_STENCIL;if(r===lu)return l=e.get("EXT_sRGB"),l!==null?l.SRGB_ALPHA_EXT:null;if(r===sv)return s.RED;if(r===bd)return s.RED_INTEGER;if(r===av)return s.RG;if(r===Ed)return s.RG_INTEGER;if(r===wd)return s.RGBA_INTEGER;if(r===Kc||r===Qc||r===jc||r===eu)if(o===mt)if(l=e.get("WEBGL_compressed_texture_s3tc_srgb"),l!==null){if(r===Kc)return l.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Qc)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===jc)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===eu)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(l=e.get("WEBGL_compressed_texture_s3tc"),l!==null){if(r===Kc)return l.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Qc)return l.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===jc)return l.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===eu)return l.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===Df||r===Of||r===Nf||r===Ff)if(l=e.get("WEBGL_compressed_texture_pvrtc"),l!==null){if(r===Df)return l.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Of)return l.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Nf)return l.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Ff)return l.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===ov)return l=e.get("WEBGL_compressed_texture_etc1"),l!==null?l.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===Bf||r===zf)if(l=e.get("WEBGL_compressed_texture_etc"),l!==null){if(r===Bf)return o===mt?l.COMPRESSED_SRGB8_ETC2:l.COMPRESSED_RGB8_ETC2;if(r===zf)return o===mt?l.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:l.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===kf||r===Hf||r===Gf||r===Vf||r===Wf||r===Xf||r===$f||r===qf||r===Yf||r===Zf||r===Jf||r===Kf||r===Qf||r===jf)if(l=e.get("WEBGL_compressed_texture_astc"),l!==null){if(r===kf)return o===mt?l.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:l.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===Hf)return o===mt?l.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:l.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===Gf)return o===mt?l.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:l.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===Vf)return o===mt?l.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:l.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===Wf)return o===mt?l.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:l.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Xf)return o===mt?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:l.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===$f)return o===mt?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:l.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===qf)return o===mt?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:l.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===Yf)return o===mt?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:l.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===Zf)return o===mt?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:l.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===Jf)return o===mt?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:l.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===Kf)return o===mt?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:l.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===Qf)return o===mt?l.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:l.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===jf)return o===mt?l.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:l.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===tu)if(l=e.get("EXT_texture_compression_bptc"),l!==null){if(r===tu)return o===mt?l.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:l.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(r===lv||r===ed||r===td||r===nd)if(l=e.get("EXT_texture_compression_rgtc"),l!==null){if(r===tu)return l.COMPRESSED_RED_RGTC1_EXT;if(r===ed)return l.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===td)return l.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===nd)return l.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===Yr?n?s.UNSIGNED_INT_24_8:(l=e.get("WEBGL_depth_texture"),l!==null?l.UNSIGNED_INT_24_8_WEBGL:null):s[r]!==void 0?s[r]:null}return{convert:i}}class Fv extends En{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Na extends Pt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const zP={type:"move"};class ff{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Na,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Na,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new N,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new N),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Na,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new N,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new N),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,o=null;const l=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){o=!0;for(const M of e.hand.values()){const y=t.getJointPose(M,n),_=this._getHandJoint(h,M);y!==null&&(_.matrix.fromArray(y.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=y.radius),_.visible=y!==null}const f=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=f.position.distanceTo(p.position),g=.02,v=.005;h.inputState.pinching&&m>g+v?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=g-v&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(u.matrix.fromArray(r.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,r.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(r.linearVelocity)):u.hasLinearVelocity=!1,r.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(r.angularVelocity)):u.hasAngularVelocity=!1));l!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(l.matrix.fromArray(i.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,i.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(i.linearVelocity)):l.hasLinearVelocity=!1,i.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(i.angularVelocity)):l.hasAngularVelocity=!1,this.dispatchEvent(zP)))}return l!==null&&(l.visible=i!==null),u!==null&&(u.visible=r!==null),h!==null&&(h.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Na;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Bv extends fn{constructor(e,t,n,i,r,o,l,u,h,f){if(f=f!==void 0?f:Zr,f!==Zr&&f!==zs)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&f===Zr&&(n=br),n===void 0&&f===zs&&(n=Yr),super(null,i,r,o,l,u,f,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=l!==void 0?l:un,this.minFilter=u!==void 0?u:un,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class kP extends Cr{constructor(e,t){super();const n=this;let i=null,r=1,o=null,l="local-floor",u=1,h=null,f=null,p=null,m=null,g=null,v=null;const M=t.getContextAttributes();let y=null,_=null;const b=[],S=[];let w=null;const L=new En;L.layers.enable(1),L.viewport=new zt;const T=new En;T.layers.enable(2),T.viewport=new zt;const C=[L,T],R=new Fv;R.layers.enable(1),R.layers.enable(2);let A=null,D=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getCamera=function(){},this.setUserCamera=function(Q){w=Q},this.getController=function(Q){let ge=b[Q];return ge===void 0&&(ge=new ff,b[Q]=ge),ge.getTargetRaySpace()},this.getControllerGrip=function(Q){let ge=b[Q];return ge===void 0&&(ge=new ff,b[Q]=ge),ge.getGripSpace()},this.getHand=function(Q){let ge=b[Q];return ge===void 0&&(ge=new ff,b[Q]=ge),ge.getHandSpace()};function X(Q){const ge=S.indexOf(Q.inputSource);if(ge===-1)return;const _e=b[ge];_e!==void 0&&(_e.update(Q.inputSource,Q.frame,h||o),_e.dispatchEvent({type:Q.type,data:Q.inputSource}))}function ce(){i.removeEventListener("select",X),i.removeEventListener("selectstart",X),i.removeEventListener("selectend",X),i.removeEventListener("squeeze",X),i.removeEventListener("squeezestart",X),i.removeEventListener("squeezeend",X),i.removeEventListener("end",ce),i.removeEventListener("inputsourceschange",q);for(let Q=0;Q<b.length;Q++){const ge=S[Q];ge!==null&&(S[Q]=null,b[Q].disconnect(ge))}A=null,D=null,e.setRenderTarget(y),g=null,m=null,p=null,i=null,_=null,Ee.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(Q){r=Q,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(Q){l=Q,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||o},this.setReferenceSpace=function(Q){h=Q},this.getBaseLayer=function(){return m!==null?m:g},this.getBinding=function(){return p},this.getFrame=function(){return v},this.getSession=function(){return i},this.setSession=async function(Q){if(i=Q,i!==null){if(y=e.getRenderTarget(),i.addEventListener("select",X),i.addEventListener("selectstart",X),i.addEventListener("selectend",X),i.addEventListener("squeeze",X),i.addEventListener("squeezestart",X),i.addEventListener("squeezeend",X),i.addEventListener("end",ce),i.addEventListener("inputsourceschange",q),M.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const ge={antialias:i.renderState.layers===void 0?M.antialias:!0,alpha:!0,depth:M.depth,stencil:M.stencil,framebufferScaleFactor:r};g=new XRWebGLLayer(i,t,ge),i.updateRenderState({baseLayer:g}),_=new Hi(g.framebufferWidth,g.framebufferHeight,{format:hi,type:wr,colorSpace:e.outputColorSpace,stencilBuffer:M.stencil})}else{let ge=null,_e=null,Pe=null;M.depth&&(Pe=M.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ge=M.stencil?zs:Zr,_e=M.stencil?Yr:br);const Ie={colorFormat:t.RGBA8,depthFormat:Pe,scaleFactor:r};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(Ie),i.updateRenderState({layers:[m]}),_=new Hi(m.textureWidth,m.textureHeight,{format:hi,type:wr,depthTexture:new Bv(m.textureWidth,m.textureHeight,_e,void 0,void 0,void 0,void 0,void 0,void 0,ge),stencilBuffer:M.stencil,colorSpace:e.outputColorSpace,samples:M.antialias?4:0});const Ge=e.properties.get(_);Ge.__ignoreDepthValues=m.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(u),h=null,o=await i.requestReferenceSpace(l),Ee.setContext(i),Ee.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function q(Q){for(let ge=0;ge<Q.removed.length;ge++){const _e=Q.removed[ge],Pe=S.indexOf(_e);Pe>=0&&(S[Pe]=null,b[Pe].disconnect(_e))}for(let ge=0;ge<Q.added.length;ge++){const _e=Q.added[ge];let Pe=S.indexOf(_e);if(Pe===-1){for(let Ge=0;Ge<b.length;Ge++)if(Ge>=S.length){S.push(_e),Pe=Ge;break}else if(S[Ge]===null){S[Ge]=_e,Pe=Ge;break}if(Pe===-1)break}const Ie=b[Pe];Ie&&Ie.connect(_e)}}const Y=new N,W=new N;function he(Q,ge,_e){Y.setFromMatrixPosition(ge.matrixWorld),W.setFromMatrixPosition(_e.matrixWorld);const Pe=Y.distanceTo(W),Ie=ge.projectionMatrix.elements,Ge=_e.projectionMatrix.elements,it=Ie[14]/(Ie[10]-1),Ze=Ie[14]/(Ie[10]+1),Nt=(Ie[9]+1)/Ie[5],et=(Ie[9]-1)/Ie[5],z=(Ie[8]-1)/Ie[0],Me=(Ge[8]+1)/Ge[0],re=it*z,xe=it*Me,pe=Pe/(-z+Me),Ne=pe*-z;ge.matrixWorld.decompose(Q.position,Q.quaternion,Q.scale),Q.translateX(Ne),Q.translateZ(pe),Q.matrixWorld.compose(Q.position,Q.quaternion,Q.scale),Q.matrixWorldInverse.copy(Q.matrixWorld).invert();const Ue=it+pe,Fe=Ze+pe,tt=re-Ne,rt=xe+(Pe-Ne),kt=Nt*Ze/Fe*Ue,F=et*Ze/Fe*Ue;Q.projectionMatrix.makePerspective(tt,rt,kt,F,Ue,Fe),Q.projectionMatrixInverse.copy(Q.projectionMatrix).invert()}function j(Q,ge){ge===null?Q.matrixWorld.copy(Q.matrix):Q.matrixWorld.multiplyMatrices(ge.matrixWorld,Q.matrix),Q.matrixWorldInverse.copy(Q.matrixWorld).invert()}this.updateCameraXR=function(Q){if(i===null)return Q;w&&(Q=w),R.near=T.near=L.near=Q.near,R.far=T.far=L.far=Q.far,(A!==R.near||D!==R.far)&&(i.updateRenderState({depthNear:R.near,depthFar:R.far}),A=R.near,D=R.far);const ge=Q.parent,_e=R.cameras;j(R,ge);for(let Pe=0;Pe<_e.length;Pe++)j(_e[Pe],ge);return _e.length===2?he(R,L,T):R.projectionMatrix.copy(L.projectionMatrix),w&&oe(R,ge),R};function oe(Q,ge){const _e=w;ge===null?_e.matrix.copy(Q.matrixWorld):(_e.matrix.copy(ge.matrixWorld),_e.matrix.invert(),_e.matrix.multiply(Q.matrixWorld)),_e.matrix.decompose(_e.position,_e.quaternion,_e.scale),_e.updateMatrixWorld(!0);const Pe=_e.children;for(let Ie=0,Ge=Pe.length;Ie<Ge;Ie++)Pe[Ie].updateMatrixWorld(!0);_e.projectionMatrix.copy(Q.projectionMatrix),_e.projectionMatrixInverse.copy(Q.projectionMatrixInverse),_e.isPerspectiveCamera&&(_e.fov=Ha*2*Math.atan(1/_e.projectionMatrix.elements[5]),_e.zoom=1)}this.getFoveation=function(){if(!(m===null&&g===null))return u},this.setFoveation=function(Q){u=Q,m!==null&&(m.fixedFoveation=Q),g!==null&&g.fixedFoveation!==void 0&&(g.fixedFoveation=Q)};let de=null;function te(Q,ge){if(f=ge.getViewerPose(h||o),v=ge,f!==null){const _e=f.views;g!==null&&(e.setRenderTargetFramebuffer(_,g.framebuffer),e.setRenderTarget(_));let Pe=!1;_e.length!==R.cameras.length&&(R.cameras.length=0,Pe=!0);for(let Ie=0;Ie<_e.length;Ie++){const Ge=_e[Ie];let it=null;if(g!==null)it=g.getViewport(Ge);else{const Nt=p.getViewSubImage(m,Ge);it=Nt.viewport,Ie===0&&(e.setRenderTargetTextures(_,Nt.colorTexture,m.ignoreDepthValues?void 0:Nt.depthStencilTexture),e.setRenderTarget(_))}let Ze=C[Ie];Ze===void 0&&(Ze=new En,Ze.layers.enable(Ie),Ze.viewport=new zt,C[Ie]=Ze),Ze.matrix.fromArray(Ge.transform.matrix),Ze.matrix.decompose(Ze.position,Ze.quaternion,Ze.scale),Ze.projectionMatrix.fromArray(Ge.projectionMatrix),Ze.projectionMatrixInverse.copy(Ze.projectionMatrix).invert(),Ze.viewport.set(it.x,it.y,it.width,it.height),Ie===0&&(R.matrix.copy(Ze.matrix),R.matrix.decompose(R.position,R.quaternion,R.scale)),Pe===!0&&R.cameras.push(Ze)}}for(let _e=0;_e<b.length;_e++){const Pe=S[_e],Ie=b[_e];Pe!==null&&Ie!==void 0&&Ie.update(Pe,ge,h||o)}de&&de(Q,ge),ge.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:ge}),v=null}const Ee=new Lv;Ee.setAnimationLoop(te),this.setAnimationLoop=function(Q){de=Q},this.dispose=function(){}}}function HP(s,e){function t(y,_){y.matrixAutoUpdate===!0&&y.updateMatrix(),_.value.copy(y.matrix)}function n(y,_){_.color.getRGB(y.fogColor.value,Av(s)),_.isFog?(y.fogNear.value=_.near,y.fogFar.value=_.far):_.isFogExp2&&(y.fogDensity.value=_.density)}function i(y,_,b,S,w){_.isMeshBasicMaterial||_.isMeshLambertMaterial?r(y,_):_.isMeshToonMaterial?(r(y,_),p(y,_)):_.isMeshPhongMaterial?(r(y,_),f(y,_)):_.isMeshStandardMaterial?(r(y,_),m(y,_),_.isMeshPhysicalMaterial&&g(y,_,w)):_.isMeshMatcapMaterial?(r(y,_),v(y,_)):_.isMeshDepthMaterial?r(y,_):_.isMeshDistanceMaterial?(r(y,_),M(y,_)):_.isMeshNormalMaterial?r(y,_):_.isLineBasicMaterial?(o(y,_),_.isLineDashedMaterial&&l(y,_)):_.isPointsMaterial?u(y,_,b,S):_.isSpriteMaterial?h(y,_):_.isShadowMaterial?(y.color.value.copy(_.color),y.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function r(y,_){y.opacity.value=_.opacity,_.color&&y.diffuse.value.copy(_.color),_.emissive&&y.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(y.map.value=_.map,t(_.map,y.mapTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.bumpMap&&(y.bumpMap.value=_.bumpMap,t(_.bumpMap,y.bumpMapTransform),y.bumpScale.value=_.bumpScale,_.side===Vn&&(y.bumpScale.value*=-1)),_.normalMap&&(y.normalMap.value=_.normalMap,t(_.normalMap,y.normalMapTransform),y.normalScale.value.copy(_.normalScale),_.side===Vn&&y.normalScale.value.negate()),_.displacementMap&&(y.displacementMap.value=_.displacementMap,t(_.displacementMap,y.displacementMapTransform),y.displacementScale.value=_.displacementScale,y.displacementBias.value=_.displacementBias),_.emissiveMap&&(y.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,y.emissiveMapTransform)),_.specularMap&&(y.specularMap.value=_.specularMap,t(_.specularMap,y.specularMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest);const b=e.get(_).envMap;if(b&&(y.envMap.value=b,y.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,y.reflectivity.value=_.reflectivity,y.ior.value=_.ior,y.refractionRatio.value=_.refractionRatio),_.lightMap){y.lightMap.value=_.lightMap;const S=s.useLegacyLights===!0?Math.PI:1;y.lightMapIntensity.value=_.lightMapIntensity*S,t(_.lightMap,y.lightMapTransform)}_.aoMap&&(y.aoMap.value=_.aoMap,y.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,y.aoMapTransform))}function o(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,_.map&&(y.map.value=_.map,t(_.map,y.mapTransform))}function l(y,_){y.dashSize.value=_.dashSize,y.totalSize.value=_.dashSize+_.gapSize,y.scale.value=_.scale}function u(y,_,b,S){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.size.value=_.size*b,y.scale.value=S*.5,_.map&&(y.map.value=_.map,t(_.map,y.uvTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest)}function h(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.rotation.value=_.rotation,_.map&&(y.map.value=_.map,t(_.map,y.mapTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest)}function f(y,_){y.specular.value.copy(_.specular),y.shininess.value=Math.max(_.shininess,1e-4)}function p(y,_){_.gradientMap&&(y.gradientMap.value=_.gradientMap)}function m(y,_){y.metalness.value=_.metalness,_.metalnessMap&&(y.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,y.metalnessMapTransform)),y.roughness.value=_.roughness,_.roughnessMap&&(y.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,y.roughnessMapTransform)),e.get(_).envMap&&(y.envMapIntensity.value=_.envMapIntensity)}function g(y,_,b){y.ior.value=_.ior,_.sheen>0&&(y.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),y.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(y.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,y.sheenColorMapTransform)),_.sheenRoughnessMap&&(y.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,y.sheenRoughnessMapTransform))),_.clearcoat>0&&(y.clearcoat.value=_.clearcoat,y.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(y.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,y.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(y.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,y.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(y.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,y.clearcoatNormalMapTransform),y.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===Vn&&y.clearcoatNormalScale.value.negate())),_.iridescence>0&&(y.iridescence.value=_.iridescence,y.iridescenceIOR.value=_.iridescenceIOR,y.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],y.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(y.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,y.iridescenceMapTransform)),_.iridescenceThicknessMap&&(y.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,y.iridescenceThicknessMapTransform))),_.transmission>0&&(y.transmission.value=_.transmission,y.transmissionSamplerMap.value=b.texture,y.transmissionSamplerSize.value.set(b.width,b.height),_.transmissionMap&&(y.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,y.transmissionMapTransform)),y.thickness.value=_.thickness,_.thicknessMap&&(y.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,y.thicknessMapTransform)),y.attenuationDistance.value=_.attenuationDistance,y.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(y.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(y.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,y.anisotropyMapTransform))),y.specularIntensity.value=_.specularIntensity,y.specularColor.value.copy(_.specularColor),_.specularColorMap&&(y.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,y.specularColorMapTransform)),_.specularIntensityMap&&(y.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,y.specularIntensityMapTransform))}function v(y,_){_.matcap&&(y.matcap.value=_.matcap)}function M(y,_){const b=e.get(_).light;y.referencePosition.value.setFromMatrixPosition(b.matrixWorld),y.nearDistance.value=b.shadow.camera.near,y.farDistance.value=b.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function GP(s,e,t,n){let i={},r={},o=[];const l=t.isWebGL2?s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS):0;function u(b,S){const w=S.program;n.uniformBlockBinding(b,w)}function h(b,S){let w=i[b.id];w===void 0&&(v(b),w=f(b),i[b.id]=w,b.addEventListener("dispose",y));const L=S.program;n.updateUBOMapping(b,L);const T=e.render.frame;r[b.id]!==T&&(m(b),r[b.id]=T)}function f(b){const S=p();b.__bindingPointIndex=S;const w=s.createBuffer(),L=b.__size,T=b.usage;return s.bindBuffer(s.UNIFORM_BUFFER,w),s.bufferData(s.UNIFORM_BUFFER,L,T),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,S,w),w}function p(){for(let b=0;b<l;b++)if(o.indexOf(b)===-1)return o.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(b){const S=i[b.id],w=b.uniforms,L=b.__cache;s.bindBuffer(s.UNIFORM_BUFFER,S);for(let T=0,C=w.length;T<C;T++){const R=w[T];if(g(R,T,L)===!0){const A=R.__offset,D=Array.isArray(R.value)?R.value:[R.value];let X=0;for(let ce=0;ce<D.length;ce++){const q=D[ce],Y=M(q);typeof q=="number"?(R.__data[0]=q,s.bufferSubData(s.UNIFORM_BUFFER,A+X,R.__data)):q.isMatrix3?(R.__data[0]=q.elements[0],R.__data[1]=q.elements[1],R.__data[2]=q.elements[2],R.__data[3]=q.elements[0],R.__data[4]=q.elements[3],R.__data[5]=q.elements[4],R.__data[6]=q.elements[5],R.__data[7]=q.elements[0],R.__data[8]=q.elements[6],R.__data[9]=q.elements[7],R.__data[10]=q.elements[8],R.__data[11]=q.elements[0]):(q.toArray(R.__data,X),X+=Y.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,A,R.__data)}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function g(b,S,w){const L=b.value;if(w[S]===void 0){if(typeof L=="number")w[S]=L;else{const T=Array.isArray(L)?L:[L],C=[];for(let R=0;R<T.length;R++)C.push(T[R].clone());w[S]=C}return!0}else if(typeof L=="number"){if(w[S]!==L)return w[S]=L,!0}else{const T=Array.isArray(w[S])?w[S]:[w[S]],C=Array.isArray(L)?L:[L];for(let R=0;R<T.length;R++){const A=T[R];if(A.equals(C[R])===!1)return A.copy(C[R]),!0}}return!1}function v(b){const S=b.uniforms;let w=0;const L=16;let T=0;for(let C=0,R=S.length;C<R;C++){const A=S[C],D={boundary:0,storage:0},X=Array.isArray(A.value)?A.value:[A.value];for(let ce=0,q=X.length;ce<q;ce++){const Y=X[ce],W=M(Y);D.boundary+=W.boundary,D.storage+=W.storage}if(A.__data=new Float32Array(D.storage/Float32Array.BYTES_PER_ELEMENT),A.__offset=w,C>0){T=w%L;const ce=L-T;T!==0&&ce-D.boundary<0&&(w+=L-T,A.__offset=w)}w+=D.storage}return T=w%L,T>0&&(w+=L-T),b.__size=w,b.__cache={},this}function M(b){const S={boundary:0,storage:0};return typeof b=="number"?(S.boundary=4,S.storage=4):b.isVector2?(S.boundary=8,S.storage=8):b.isVector3||b.isColor?(S.boundary=16,S.storage=12):b.isVector4?(S.boundary=16,S.storage=16):b.isMatrix3?(S.boundary=48,S.storage=48):b.isMatrix4?(S.boundary=64,S.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),S}function y(b){const S=b.target;S.removeEventListener("dispose",y);const w=o.indexOf(S.__bindingPointIndex);o.splice(w,1),s.deleteBuffer(i[S.id]),delete i[S.id],delete r[S.id]}function _(){for(const b in i)s.deleteBuffer(i[b]);o=[],i={},r={}}return{bind:u,update:h,dispose:_}}function VP(){const s=Zo("canvas");return s.style.display="block",s}class Nd{constructor(e={}){const{canvas:t=VP(),context:n=null,depth:i=!0,stencil:r=!0,alpha:o=!1,antialias:l=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:f="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;n!==null?m=n.getContextAttributes().alpha:m=o;const g=new Uint32Array(4),v=new Int32Array(4);let M=null,y=null;const _=[],b=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=mt,this.useLegacyLights=!0,this.toneMapping=ji,this.toneMappingExposure=1;const S=this;let w=!1,L=0,T=0,C=null,R=-1,A=null;const D=new zt,X=new zt;let ce=null;const q=new Le(0);let Y=0,W=t.width,he=t.height,j=1,oe=null,de=null;const te=new zt(0,0,W,he),Ee=new zt(0,0,W,he);let Q=!1;const ge=new yu;let _e=!1,Pe=!1,Ie=null;const Ge=new ot,it=new fe,Ze=new N,Nt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function et(){return C===null?j:1}let z=n;function Me(O,Z){for(let ne=0;ne<O.length;ne++){const $=O[ne],ae=t.getContext($,Z);if(ae!==null)return ae}return null}try{const O={alpha:!0,depth:i,stencil:r,antialias:l,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:f,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${hu}`),t.addEventListener("webglcontextlost",Ae,!1),t.addEventListener("webglcontextrestored",K,!1),t.addEventListener("webglcontextcreationerror",be,!1),z===null){const Z=["webgl2","webgl","experimental-webgl"];if(S.isWebGL1Renderer===!0&&Z.shift(),z=Me(Z,O),z===null)throw Me(Z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}z instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),z.getShaderPrecisionFormat===void 0&&(z.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(O){throw console.error("THREE.WebGLRenderer: "+O.message),O}let re,xe,pe,Ne,Ue,Fe,tt,rt,kt,F,U,ee,ye,ve,Se,We,we,se,$e,qe,Ye,ke,He,gt;function Ht(){re=new s2(z),xe=new jC(z,re,e),re.init(xe),ke=new Nv(z,re,xe),pe=new FP(z,re,xe),Ne=new l2(z),Ue=new wP,Fe=new BP(z,re,pe,Ue,xe,ke,Ne),tt=new t2(S),rt=new r2(S),kt=new xA(z,xe),He=new KC(z,re,kt,xe),F=new a2(z,kt,Ne,He),U=new f2(z,F,kt,Ne),$e=new h2(z,xe,Fe),We=new e2(Ue),ee=new EP(S,tt,rt,re,xe,He,We),ye=new HP(S,Ue),ve=new AP,Se=new UP(re,xe),se=new JC(S,tt,rt,pe,U,m,u),we=new NP(S,U,xe),gt=new GP(z,Ne,xe,pe),qe=new QC(z,re,Ne,xe),Ye=new o2(z,re,Ne,xe),Ne.programs=ee.programs,S.capabilities=xe,S.extensions=re,S.properties=Ue,S.renderLists=ve,S.shadowMap=we,S.state=pe,S.info=Ne}Ht();const H=new kP(S,z);this.xr=H,this.getContext=function(){return z},this.getContextAttributes=function(){return z.getContextAttributes()},this.forceContextLoss=function(){const O=re.get("WEBGL_lose_context");O&&O.loseContext()},this.forceContextRestore=function(){const O=re.get("WEBGL_lose_context");O&&O.restoreContext()},this.getPixelRatio=function(){return j},this.setPixelRatio=function(O){O!==void 0&&(j=O,this.setSize(W,he,!1))},this.getSize=function(O){return O.set(W,he)},this.setSize=function(O,Z,ne=!0){if(H.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}W=O,he=Z,t.width=Math.floor(O*j),t.height=Math.floor(Z*j),ne===!0&&(t.style.width=O+"px",t.style.height=Z+"px"),this.setViewport(0,0,O,Z)},this.getDrawingBufferSize=function(O){return O.set(W*j,he*j).floor()},this.setDrawingBufferSize=function(O,Z,ne){W=O,he=Z,j=ne,t.width=Math.floor(O*ne),t.height=Math.floor(Z*ne),this.setViewport(0,0,O,Z)},this.getCurrentViewport=function(O){return O.copy(D)},this.getViewport=function(O){return O.copy(te)},this.setViewport=function(O,Z,ne,$){O.isVector4?te.set(O.x,O.y,O.z,O.w):te.set(O,Z,ne,$),pe.viewport(D.copy(te).multiplyScalar(j).floor())},this.getScissor=function(O){return O.copy(Ee)},this.setScissor=function(O,Z,ne,$){O.isVector4?Ee.set(O.x,O.y,O.z,O.w):Ee.set(O,Z,ne,$),pe.scissor(X.copy(Ee).multiplyScalar(j).floor())},this.getScissorTest=function(){return Q},this.setScissorTest=function(O){pe.setScissorTest(Q=O)},this.setOpaqueSort=function(O){oe=O},this.setTransparentSort=function(O){de=O},this.getClearColor=function(O){return O.copy(se.getClearColor())},this.setClearColor=function(){se.setClearColor.apply(se,arguments)},this.getClearAlpha=function(){return se.getClearAlpha()},this.setClearAlpha=function(){se.setClearAlpha.apply(se,arguments)},this.clear=function(O=!0,Z=!0,ne=!0){let $=0;if(O){let ae=!1;if(C!==null){const Be=C.texture.format;ae=Be===wd||Be===Ed||Be===bd}if(ae){const Be=C.texture.type,Je=Be===wr||Be===br||Be===pu||Be===Yr||Be===Md||Be===Sd,st=se.getClearColor(),nt=se.getClearAlpha(),St=st.r,at=st.g,pt=st.b,Gt=Ue.get(C).__webglFramebuffer;Je?(g[0]=St,g[1]=at,g[2]=pt,g[3]=nt,z.clearBufferuiv(z.COLOR,Gt,g)):(v[0]=St,v[1]=at,v[2]=pt,v[3]=nt,z.clearBufferiv(z.COLOR,Gt,v))}else $|=z.COLOR_BUFFER_BIT}Z&&($|=z.DEPTH_BUFFER_BIT),ne&&($|=z.STENCIL_BUFFER_BIT),z.clear($)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ae,!1),t.removeEventListener("webglcontextrestored",K,!1),t.removeEventListener("webglcontextcreationerror",be,!1),ve.dispose(),Se.dispose(),Ue.dispose(),tt.dispose(),rt.dispose(),U.dispose(),He.dispose(),gt.dispose(),ee.dispose(),H.dispose(),H.removeEventListener("sessionstart",Yt),H.removeEventListener("sessionend",mi),Ie&&(Ie.dispose(),Ie=null),Tn.stop()};function Ae(O){O.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),w=!0}function K(){console.log("THREE.WebGLRenderer: Context Restored."),w=!1;const O=Ne.autoReset,Z=we.enabled,ne=we.autoUpdate,$=we.needsUpdate,ae=we.type;Ht(),Ne.autoReset=O,we.enabled=Z,we.autoUpdate=ne,we.needsUpdate=$,we.type=ae}function be(O){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",O.statusMessage)}function Ce(O){const Z=O.target;Z.removeEventListener("dispose",Ce),Ct(Z)}function Ct(O){qt(O),Ue.remove(O)}function qt(O){const Z=Ue.get(O).programs;Z!==void 0&&(Z.forEach(function(ne){ee.releaseProgram(ne)}),O.isShaderMaterial&&ee.releaseShaderCache(O))}this.renderBufferDirect=function(O,Z,ne,$,ae,Be){Z===null&&(Z=Nt);const Je=ae.isMesh&&ae.matrixWorld.determinant()<0,st=Iu(O,Z,ne,$,ae);pe.setMaterial($,Je);let nt=ne.index,St=1;$.wireframe===!0&&(nt=F.getWireframeAttribute(ne),St=2);const at=ne.drawRange,pt=ne.attributes.position;let Gt=at.start*St,Jt=(at.start+at.count)*St;Be!==null&&(Gt=Math.max(Gt,Be.start*St),Jt=Math.min(Jt,(Be.start+Be.count)*St)),nt!==null?(Gt=Math.max(Gt,0),Jt=Math.min(Jt,nt.count)):pt!=null&&(Gt=Math.max(Gt,0),Jt=Math.min(Jt,pt.count));const Xn=Jt-Gt;if(Xn<0||Xn===1/0)return;He.setup(ae,$,st,ne,nt);let gi,Kt=qe;if(nt!==null&&(gi=kt.get(nt),Kt=Ye,Kt.setIndex(gi)),ae.isMesh)$.wireframe===!0?(pe.setLineWidth($.wireframeLinewidth*et()),Kt.setMode(z.LINES)):Kt.setMode(z.TRIANGLES);else if(ae.isLine){let Tt=$.linewidth;Tt===void 0&&(Tt=1),pe.setLineWidth(Tt*et()),ae.isLineSegments?Kt.setMode(z.LINES):ae.isLineLoop?Kt.setMode(z.LINE_LOOP):Kt.setMode(z.LINE_STRIP)}else ae.isPoints?Kt.setMode(z.POINTS):ae.isSprite&&Kt.setMode(z.TRIANGLES);if(ae.isInstancedMesh)Kt.renderInstances(Gt,Xn,ae.count);else if(ne.isInstancedBufferGeometry){const Tt=ne._maxInstanceCount!==void 0?ne._maxInstanceCount:1/0,to=Math.min(ne.instanceCount,Tt);Kt.renderInstances(Gt,Xn,to)}else Kt.render(Gt,Xn)},this.compile=function(O,Z){function ne($,ae,Be){$.transparent===!0&&$.side===Ji&&$.forceSinglePass===!1?($.side=Vn,$.needsUpdate=!0,Ys($,ae,Be),$.side=Ar,$.needsUpdate=!0,Ys($,ae,Be),$.side=Ji):Ys($,ae,Be)}y=Se.get(O),y.init(),b.push(y),O.traverseVisible(function($){$.isLight&&$.layers.test(Z.layers)&&(y.pushLight($),$.castShadow&&y.pushShadow($))}),y.setupLights(S.useLegacyLights),O.traverse(function($){const ae=$.material;if(ae)if(Array.isArray(ae))for(let Be=0;Be<ae.length;Be++){const Je=ae[Be];ne(Je,O,$)}else ne(ae,O,$)}),b.pop(),y=null};let nn=null;function Xi(O){nn&&nn(O)}function Yt(){Tn.stop()}function mi(){Tn.start()}const Tn=new Lv;Tn.setAnimationLoop(Xi),typeof self<"u"&&Tn.setContext(self),this.setAnimationLoop=function(O){nn=O,H.setAnimationLoop(O),O===null?Tn.stop():Tn.start()},H.addEventListener("sessionstart",Yt),H.addEventListener("sessionend",mi),this.render=function(O,Z){if(Z!==void 0&&Z.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(w===!0)return;O.matrixWorldAutoUpdate===!0&&O.updateMatrixWorld(),Z.parent===null&&Z.matrixWorldAutoUpdate===!0&&Z.updateMatrixWorld(),H.enabled===!0&&H.isPresenting===!0&&(Z=H.updateCameraXR(Z)),O.isScene===!0&&O.onBeforeRender(S,O,Z,C),y=Se.get(O,b.length),y.init(),b.push(y),Ge.multiplyMatrices(Z.projectionMatrix,Z.matrixWorldInverse),ge.setFromProjectionMatrix(Ge),Pe=this.localClippingEnabled,_e=We.init(this.clippingPlanes,Pe),M=ve.get(O,_.length),M.init(),_.push(M),$s(O,Z,0,S.sortObjects),M.finish(),S.sortObjects===!0&&M.sort(oe,de),_e===!0&&We.beginShadows();const ne=y.state.shadowsArray;if(we.render(ne,O,Z),_e===!0&&We.endShadows(),this.info.autoReset===!0&&this.info.reset(),this.info.render.frame++,se.render(M,O),y.setupLights(S.useLegacyLights),Z.isArrayCamera){const $=Z.cameras;for(let ae=0,Be=$.length;ae<Be;ae++){const Je=$[ae];Ml(M,O,Je,Je.viewport)}}else Ml(M,O,Z);C!==null&&(Fe.updateMultisampleRenderTarget(C),Fe.updateRenderTargetMipmap(C)),O.isScene===!0&&O.onAfterRender(S,O,Z),He.resetDefaultState(),R=-1,A=null,b.pop(),b.length>0?y=b[b.length-1]:y=null,_.pop(),_.length>0?M=_[_.length-1]:M=null};function $s(O,Z,ne,$){if(O.visible===!1)return;if(O.layers.test(Z.layers)){if(O.isGroup)ne=O.renderOrder;else if(O.isLOD)O.autoUpdate===!0&&O.update(Z);else if(O.isLight)y.pushLight(O),O.castShadow&&y.pushShadow(O);else if(O.isSprite){if(!O.frustumCulled||ge.intersectsSprite(O)){$&&Ze.setFromMatrixPosition(O.matrixWorld).applyMatrix4(Ge);const Je=U.update(O),st=O.material;st.visible&&M.push(O,Je,st,ne,Ze.z,null)}}else if((O.isMesh||O.isLine||O.isPoints)&&(!O.frustumCulled||ge.intersectsObject(O))){O.isSkinnedMesh&&O.skeleton.frame!==Ne.render.frame&&(O.skeleton.update(),O.skeleton.frame=Ne.render.frame);const Je=U.update(O),st=O.material;if($&&(O.boundingSphere!==void 0?(O.boundingSphere===null&&O.computeBoundingSphere(),Ze.copy(O.boundingSphere.center)):(Je.boundingSphere===null&&Je.computeBoundingSphere(),Ze.copy(Je.boundingSphere.center)),Ze.applyMatrix4(O.matrixWorld).applyMatrix4(Ge)),Array.isArray(st)){const nt=Je.groups;for(let St=0,at=nt.length;St<at;St++){const pt=nt[St],Gt=st[pt.materialIndex];Gt&&Gt.visible&&M.push(O,Je,Gt,ne,Ze.z,pt)}}else st.visible&&M.push(O,Je,st,ne,Ze.z,null)}}const Be=O.children;for(let Je=0,st=Be.length;Je<st;Je++)$s(Be[Je],Z,ne,$)}function Ml(O,Z,ne,$){const ae=O.opaque,Be=O.transmissive,Je=O.transparent;y.setupLightsView(ne),_e===!0&&We.setGlobalState(S.clippingPlanes,ne),Be.length>0&&eo(ae,Be,Z,ne),$&&pe.viewport(D.copy($)),ae.length>0&&qs(ae,Z,ne),Be.length>0&&qs(Be,Z,ne),Je.length>0&&qs(Je,Z,ne),pe.buffers.depth.setTest(!0),pe.buffers.depth.setMask(!0),pe.buffers.color.setMask(!0),pe.setPolygonOffset(!1)}function eo(O,Z,ne,$){const ae=xe.isWebGL2;Ie===null&&(Ie=new Hi(1,1,{generateMipmaps:!0,type:re.has("EXT_color_buffer_half_float")?ka:wr,minFilter:jr,samples:ae&&l===!0?4:0})),S.getDrawingBufferSize(it),ae?Ie.setSize(it.x,it.y):Ie.setSize(cu(it.x),cu(it.y));const Be=S.getRenderTarget();S.setRenderTarget(Ie),S.getClearColor(q),Y=S.getClearAlpha(),Y<1&&S.setClearColor(16777215,.5),S.clear();const Je=S.toneMapping;S.toneMapping=ji,qs(O,ne,$),Fe.updateMultisampleRenderTarget(Ie),Fe.updateRenderTargetMipmap(Ie);let st=!1;for(let nt=0,St=Z.length;nt<St;nt++){const at=Z[nt],pt=at.object,Gt=at.geometry,Jt=at.material,Xn=at.group;if(Jt.side===Ji&&pt.layers.test($.layers)){const gi=Jt.side;Jt.side=Vn,Jt.needsUpdate=!0,Sl(pt,ne,$,Gt,Jt,Xn),Jt.side=gi,Jt.needsUpdate=!0,st=!0}}st===!0&&(Fe.updateMultisampleRenderTarget(Ie),Fe.updateRenderTargetMipmap(Ie)),S.setRenderTarget(Be),S.setClearColor(q,Y),S.toneMapping=Je}function qs(O,Z,ne){const $=Z.isScene===!0?Z.overrideMaterial:null;for(let ae=0,Be=O.length;ae<Be;ae++){const Je=O[ae],st=Je.object,nt=Je.geometry,St=$===null?Je.material:$,at=Je.group;st.layers.test(ne.layers)&&Sl(st,Z,ne,nt,St,at)}}function Sl(O,Z,ne,$,ae,Be){O.onBeforeRender(S,Z,ne,$,ae,Be),O.modelViewMatrix.multiplyMatrices(ne.matrixWorldInverse,O.matrixWorld),O.normalMatrix.getNormalMatrix(O.modelViewMatrix),ae.onBeforeRender(S,Z,ne,$,O,Be),ae.transparent===!0&&ae.side===Ji&&ae.forceSinglePass===!1?(ae.side=Vn,ae.needsUpdate=!0,S.renderBufferDirect(ne,Z,$,ae,O,Be),ae.side=Ar,ae.needsUpdate=!0,S.renderBufferDirect(ne,Z,$,ae,O,Be),ae.side=Ji):S.renderBufferDirect(ne,Z,$,ae,O,Be),O.onAfterRender(S,Z,ne,$,ae,Be)}function Ys(O,Z,ne){Z.isScene!==!0&&(Z=Nt);const $=Ue.get(O),ae=y.state.lights,Be=y.state.shadowsArray,Je=ae.state.version,st=ee.getParameters(O,ae.state,Be,Z,ne),nt=ee.getProgramCacheKey(st);let St=$.programs;$.environment=O.isMeshStandardMaterial?Z.environment:null,$.fog=Z.fog,$.envMap=(O.isMeshStandardMaterial?rt:tt).get(O.envMap||$.environment),St===void 0&&(O.addEventListener("dispose",Ce),St=new Map,$.programs=St);let at=St.get(nt);if(at!==void 0){if($.currentProgram===at&&$.lightsStateVersion===Je)return bl(O,st),at}else st.uniforms=ee.getUniforms(O),O.onBuild(ne,st,S),O.onBeforeCompile(st,S),at=ee.acquireProgram(st,nt),St.set(nt,at),$.uniforms=st.uniforms;const pt=$.uniforms;(!O.isShaderMaterial&&!O.isRawShaderMaterial||O.clipping===!0)&&(pt.clippingPlanes=We.uniform),bl(O,st),$.needsLights=Du(O),$.lightsStateVersion=Je,$.needsLights&&(pt.ambientLightColor.value=ae.state.ambient,pt.lightProbe.value=ae.state.probe,pt.directionalLights.value=ae.state.directional,pt.directionalLightShadows.value=ae.state.directionalShadow,pt.spotLights.value=ae.state.spot,pt.spotLightShadows.value=ae.state.spotShadow,pt.rectAreaLights.value=ae.state.rectArea,pt.ltc_1.value=ae.state.rectAreaLTC1,pt.ltc_2.value=ae.state.rectAreaLTC2,pt.pointLights.value=ae.state.point,pt.pointLightShadows.value=ae.state.pointShadow,pt.hemisphereLights.value=ae.state.hemi,pt.directionalShadowMap.value=ae.state.directionalShadowMap,pt.directionalShadowMatrix.value=ae.state.directionalShadowMatrix,pt.spotShadowMap.value=ae.state.spotShadowMap,pt.spotLightMatrix.value=ae.state.spotLightMatrix,pt.spotLightMap.value=ae.state.spotLightMap,pt.pointShadowMap.value=ae.state.pointShadowMap,pt.pointShadowMatrix.value=ae.state.pointShadowMatrix);const Gt=at.getUniforms(),Jt=ru.seqWithValue(Gt.seq,pt);return $.currentProgram=at,$.uniformsList=Jt,at}function bl(O,Z){const ne=Ue.get(O);ne.outputColorSpace=Z.outputColorSpace,ne.instancing=Z.instancing,ne.skinning=Z.skinning,ne.morphTargets=Z.morphTargets,ne.morphNormals=Z.morphNormals,ne.morphColors=Z.morphColors,ne.morphTargetsCount=Z.morphTargetsCount,ne.numClippingPlanes=Z.numClippingPlanes,ne.numIntersection=Z.numClipIntersection,ne.vertexAlphas=Z.vertexAlphas,ne.vertexTangents=Z.vertexTangents,ne.toneMapping=Z.toneMapping}function Iu(O,Z,ne,$,ae){Z.isScene!==!0&&(Z=Nt),Fe.resetTextureUnits();const Be=Z.fog,Je=$.isMeshStandardMaterial?Z.environment:null,st=C===null?S.outputColorSpace:C.isXRRenderTarget===!0?C.texture.colorSpace:ki,nt=($.isMeshStandardMaterial?rt:tt).get($.envMap||Je),St=$.vertexColors===!0&&!!ne.attributes.color&&ne.attributes.color.itemSize===4,at=!!ne.attributes.tangent&&(!!$.normalMap||$.anisotropy>0),pt=!!ne.morphAttributes.position,Gt=!!ne.morphAttributes.normal,Jt=!!ne.morphAttributes.color,Xn=$.toneMapped?S.toneMapping:ji,gi=ne.morphAttributes.position||ne.morphAttributes.normal||ne.morphAttributes.color,Kt=gi!==void 0?gi.length:0,Tt=Ue.get($),to=y.state.lights;if(_e===!0&&(Pe===!0||O!==A)){const xn=O===A&&$.id===R;We.setState($,O,xn)}let dn=!1;$.version===Tt.__version?(Tt.needsLights&&Tt.lightsStateVersion!==to.state.version||Tt.outputColorSpace!==st||ae.isInstancedMesh&&Tt.instancing===!1||!ae.isInstancedMesh&&Tt.instancing===!0||ae.isSkinnedMesh&&Tt.skinning===!1||!ae.isSkinnedMesh&&Tt.skinning===!0||Tt.envMap!==nt||$.fog===!0&&Tt.fog!==Be||Tt.numClippingPlanes!==void 0&&(Tt.numClippingPlanes!==We.numPlanes||Tt.numIntersection!==We.numIntersection)||Tt.vertexAlphas!==St||Tt.vertexTangents!==at||Tt.morphTargets!==pt||Tt.morphNormals!==Gt||Tt.morphColors!==Jt||Tt.toneMapping!==Xn||xe.isWebGL2===!0&&Tt.morphTargetsCount!==Kt)&&(dn=!0):(dn=!0,Tt.__version=$.version);let rr=Tt.currentProgram;dn===!0&&(rr=Ys($,Z,ae));let no=!1,Ir=!1,Zs=!1;const mn=rr.getUniforms(),sr=Tt.uniforms;if(pe.useProgram(rr.program)&&(no=!0,Ir=!0,Zs=!0),$.id!==R&&(R=$.id,Ir=!0),no||A!==O){if(mn.setValue(z,"projectionMatrix",O.projectionMatrix),xe.logarithmicDepthBuffer&&mn.setValue(z,"logDepthBufFC",2/(Math.log(O.far+1)/Math.LN2)),A!==O&&(A=O,Ir=!0,Zs=!0),$.isShaderMaterial||$.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshStandardMaterial||$.envMap){const xn=mn.map.cameraPosition;xn!==void 0&&xn.setValue(z,Ze.setFromMatrixPosition(O.matrixWorld))}($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial)&&mn.setValue(z,"isOrthographic",O.isOrthographicCamera===!0),($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial||$.isShadowMaterial||ae.isSkinnedMesh)&&mn.setValue(z,"viewMatrix",O.matrixWorldInverse)}if(ae.isSkinnedMesh){mn.setOptional(z,ae,"bindMatrix"),mn.setOptional(z,ae,"bindMatrixInverse");const xn=ae.skeleton;xn&&(xe.floatVertexTextures?(xn.boneTexture===null&&xn.computeBoneTexture(),mn.setValue(z,"boneTexture",xn.boneTexture,Fe),mn.setValue(z,"boneTextureSize",xn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Js=ne.morphAttributes;if((Js.position!==void 0||Js.normal!==void 0||Js.color!==void 0&&xe.isWebGL2===!0)&&$e.update(ae,ne,rr),(Ir||Tt.receiveShadow!==ae.receiveShadow)&&(Tt.receiveShadow=ae.receiveShadow,mn.setValue(z,"receiveShadow",ae.receiveShadow)),$.isMeshGouraudMaterial&&$.envMap!==null&&(sr.envMap.value=nt,sr.flipEnvMap.value=nt.isCubeTexture&&nt.isRenderTargetTexture===!1?-1:1),Ir&&(mn.setValue(z,"toneMappingExposure",S.toneMappingExposure),Tt.needsLights&&Uu(sr,Zs),Be&&$.fog===!0&&ye.refreshFogUniforms(sr,Be),ye.refreshMaterialUniforms(sr,$,j,he,Ie),ru.upload(z,Tt.uniformsList,sr,Fe)),$.isShaderMaterial&&$.uniformsNeedUpdate===!0&&(ru.upload(z,Tt.uniformsList,sr,Fe),$.uniformsNeedUpdate=!1),$.isSpriteMaterial&&mn.setValue(z,"center",ae.center),mn.setValue(z,"modelViewMatrix",ae.modelViewMatrix),mn.setValue(z,"normalMatrix",ae.normalMatrix),mn.setValue(z,"modelMatrix",ae.matrixWorld),$.isShaderMaterial||$.isRawShaderMaterial){const xn=$.uniformsGroups;for(let Ks=0,Ou=xn.length;Ks<Ou;Ks++)if(xe.isWebGL2){const io=xn[Ks];gt.update(io,rr),gt.bind(io,rr)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return rr}function Uu(O,Z){O.ambientLightColor.needsUpdate=Z,O.lightProbe.needsUpdate=Z,O.directionalLights.needsUpdate=Z,O.directionalLightShadows.needsUpdate=Z,O.pointLights.needsUpdate=Z,O.pointLightShadows.needsUpdate=Z,O.spotLights.needsUpdate=Z,O.spotLightShadows.needsUpdate=Z,O.rectAreaLights.needsUpdate=Z,O.hemisphereLights.needsUpdate=Z}function Du(O){return O.isMeshLambertMaterial||O.isMeshToonMaterial||O.isMeshPhongMaterial||O.isMeshStandardMaterial||O.isShadowMaterial||O.isShaderMaterial&&O.lights===!0}this.getActiveCubeFace=function(){return L},this.getActiveMipmapLevel=function(){return T},this.getRenderTarget=function(){return C},this.setRenderTargetTextures=function(O,Z,ne){Ue.get(O.texture).__webglTexture=Z,Ue.get(O.depthTexture).__webglTexture=ne;const $=Ue.get(O);$.__hasExternalTextures=!0,$.__hasExternalTextures&&($.__autoAllocateDepthBuffer=ne===void 0,$.__autoAllocateDepthBuffer||re.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),$.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(O,Z){const ne=Ue.get(O);ne.__webglFramebuffer=Z,ne.__useDefaultFramebuffer=Z===void 0},this.setRenderTarget=function(O,Z=0,ne=0){C=O,L=Z,T=ne;let $=!0,ae=null,Be=!1,Je=!1;if(O){const nt=Ue.get(O);nt.__useDefaultFramebuffer!==void 0?(pe.bindFramebuffer(z.FRAMEBUFFER,null),$=!1):nt.__webglFramebuffer===void 0?Fe.setupRenderTarget(O):nt.__hasExternalTextures&&Fe.rebindTextures(O,Ue.get(O.texture).__webglTexture,Ue.get(O.depthTexture).__webglTexture);const St=O.texture;(St.isData3DTexture||St.isDataArrayTexture||St.isCompressedArrayTexture)&&(Je=!0);const at=Ue.get(O).__webglFramebuffer;O.isWebGLCubeRenderTarget?(ae=at[Z],Be=!0):xe.isWebGL2&&O.samples>0&&Fe.useMultisampledRTT(O)===!1?ae=Ue.get(O).__webglMultisampledFramebuffer:ae=at,D.copy(O.viewport),X.copy(O.scissor),ce=O.scissorTest}else D.copy(te).multiplyScalar(j).floor(),X.copy(Ee).multiplyScalar(j).floor(),ce=Q;if(pe.bindFramebuffer(z.FRAMEBUFFER,ae)&&xe.drawBuffers&&$&&pe.drawBuffers(O,ae),pe.viewport(D),pe.scissor(X),pe.setScissorTest(ce),Be){const nt=Ue.get(O.texture);z.framebufferTexture2D(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_CUBE_MAP_POSITIVE_X+Z,nt.__webglTexture,ne)}else if(Je){const nt=Ue.get(O.texture),St=Z||0;z.framebufferTextureLayer(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,nt.__webglTexture,ne||0,St)}R=-1},this.readRenderTargetPixels=function(O,Z,ne,$,ae,Be,Je){if(!(O&&O.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let st=Ue.get(O).__webglFramebuffer;if(O.isWebGLCubeRenderTarget&&Je!==void 0&&(st=st[Je]),st){pe.bindFramebuffer(z.FRAMEBUFFER,st);try{const nt=O.texture,St=nt.format,at=nt.type;if(St!==hi&&ke.convert(St)!==z.getParameter(z.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const pt=at===ka&&(re.has("EXT_color_buffer_half_float")||xe.isWebGL2&&re.has("EXT_color_buffer_float"));if(at!==wr&&ke.convert(at)!==z.getParameter(z.IMPLEMENTATION_COLOR_READ_TYPE)&&!(at===Ki&&(xe.isWebGL2||re.has("OES_texture_float")||re.has("WEBGL_color_buffer_float")))&&!pt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Z>=0&&Z<=O.width-$&&ne>=0&&ne<=O.height-ae&&z.readPixels(Z,ne,$,ae,ke.convert(St),ke.convert(at),Be)}finally{const nt=C!==null?Ue.get(C).__webglFramebuffer:null;pe.bindFramebuffer(z.FRAMEBUFFER,nt)}}},this.copyFramebufferToTexture=function(O,Z,ne=0){const $=Math.pow(2,-ne),ae=Math.floor(Z.image.width*$),Be=Math.floor(Z.image.height*$);Fe.setTexture2D(Z,0),z.copyTexSubImage2D(z.TEXTURE_2D,ne,0,0,O.x,O.y,ae,Be),pe.unbindTexture()},this.copyTextureToTexture=function(O,Z,ne,$=0){const ae=Z.image.width,Be=Z.image.height,Je=ke.convert(ne.format),st=ke.convert(ne.type);Fe.setTexture2D(ne,0),z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,ne.flipY),z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ne.premultiplyAlpha),z.pixelStorei(z.UNPACK_ALIGNMENT,ne.unpackAlignment),Z.isDataTexture?z.texSubImage2D(z.TEXTURE_2D,$,O.x,O.y,ae,Be,Je,st,Z.image.data):Z.isCompressedTexture?z.compressedTexSubImage2D(z.TEXTURE_2D,$,O.x,O.y,Z.mipmaps[0].width,Z.mipmaps[0].height,Je,Z.mipmaps[0].data):z.texSubImage2D(z.TEXTURE_2D,$,O.x,O.y,Je,st,Z.image),$===0&&ne.generateMipmaps&&z.generateMipmap(z.TEXTURE_2D),pe.unbindTexture()},this.copyTextureToTexture3D=function(O,Z,ne,$,ae=0){if(S.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Be=O.max.x-O.min.x+1,Je=O.max.y-O.min.y+1,st=O.max.z-O.min.z+1,nt=ke.convert($.format),St=ke.convert($.type);let at;if($.isData3DTexture)Fe.setTexture3D($,0),at=z.TEXTURE_3D;else if($.isDataArrayTexture)Fe.setTexture2DArray($,0),at=z.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,$.flipY),z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,$.premultiplyAlpha),z.pixelStorei(z.UNPACK_ALIGNMENT,$.unpackAlignment);const pt=z.getParameter(z.UNPACK_ROW_LENGTH),Gt=z.getParameter(z.UNPACK_IMAGE_HEIGHT),Jt=z.getParameter(z.UNPACK_SKIP_PIXELS),Xn=z.getParameter(z.UNPACK_SKIP_ROWS),gi=z.getParameter(z.UNPACK_SKIP_IMAGES),Kt=ne.isCompressedTexture?ne.mipmaps[0]:ne.image;z.pixelStorei(z.UNPACK_ROW_LENGTH,Kt.width),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,Kt.height),z.pixelStorei(z.UNPACK_SKIP_PIXELS,O.min.x),z.pixelStorei(z.UNPACK_SKIP_ROWS,O.min.y),z.pixelStorei(z.UNPACK_SKIP_IMAGES,O.min.z),ne.isDataTexture||ne.isData3DTexture?z.texSubImage3D(at,ae,Z.x,Z.y,Z.z,Be,Je,st,nt,St,Kt.data):ne.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),z.compressedTexSubImage3D(at,ae,Z.x,Z.y,Z.z,Be,Je,st,nt,Kt.data)):z.texSubImage3D(at,ae,Z.x,Z.y,Z.z,Be,Je,st,nt,St,Kt),z.pixelStorei(z.UNPACK_ROW_LENGTH,pt),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,Gt),z.pixelStorei(z.UNPACK_SKIP_PIXELS,Jt),z.pixelStorei(z.UNPACK_SKIP_ROWS,Xn),z.pixelStorei(z.UNPACK_SKIP_IMAGES,gi),ae===0&&$.generateMipmaps&&z.generateMipmap(at),pe.unbindTexture()},this.initTexture=function(O){O.isCubeTexture?Fe.setTextureCube(O,0):O.isData3DTexture?Fe.setTexture3D(O,0):O.isDataArrayTexture||O.isCompressedArrayTexture?Fe.setTexture2DArray(O,0):Fe.setTexture2D(O,0),pe.unbindTexture()},this.resetState=function(){L=0,T=0,C=null,pe.reset(),He.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Qi}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===mt?Tr:$o}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Tr?mt:ki}}class zv extends Nd{}zv.prototype.isWebGL1Renderer=!0;class Su{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Le(e),this.density=t}clone(){return new Su(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class bu{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Le(e),this.near=t,this.far=n}clone(){return new bu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Fd extends Pt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class Eu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=qo,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=di()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=di()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=di()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Hn=new N;class ks{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Hn.fromBufferAttribute(this,t),Hn.applyMatrix4(e),this.setXYZ(t,Hn.x,Hn.y,Hn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Hn.fromBufferAttribute(this,t),Hn.applyNormalMatrix(e),this.setXYZ(t,Hn.x,Hn.y,Hn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Hn.fromBufferAttribute(this,t),Hn.transformDirection(e),this.setXYZ(t,Hn.x,Hn.y,Hn.z);return this}setX(e,t){return this.normalized&&(t=Mt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=fi(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=fi(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=fi(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=fi(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array),r=Mt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Wt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new ks(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Bd extends Fn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Ra;const Eo=new N,Ca=new N,Pa=new N,La=new fe,wo=new fe,kv=new ot,Cc=new N,To=new N,Pc=new N,d_=new fe,df=new fe,p_=new fe;class Hv extends Pt{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",Ra===void 0){Ra=new Et;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Eu(t,5);Ra.setIndex([0,1,2,0,2,3]),Ra.setAttribute("position",new ks(n,3,0,!1)),Ra.setAttribute("uv",new ks(n,2,3,!1))}this.geometry=Ra,this.material=e!==void 0?e:new Bd,this.center=new fe(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ca.setFromMatrixScale(this.matrixWorld),kv.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Pa.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ca.multiplyScalar(-Pa.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const o=this.center;Lc(Cc.set(-.5,-.5,0),Pa,o,Ca,i,r),Lc(To.set(.5,-.5,0),Pa,o,Ca,i,r),Lc(Pc.set(.5,.5,0),Pa,o,Ca,i,r),d_.set(0,0),df.set(1,0),p_.set(1,1);let l=e.ray.intersectTriangle(Cc,To,Pc,!1,Eo);if(l===null&&(Lc(To.set(-.5,.5,0),Pa,o,Ca,i,r),df.set(0,1),l=e.ray.intersectTriangle(Cc,Pc,To,!1,Eo),l===null))return;const u=e.ray.origin.distanceTo(Eo);u<e.near||u>e.far||t.push({distance:u,point:Eo.clone(),uv:Kn.getInterpolation(Eo,Cc,To,Pc,d_,df,p_,new fe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Lc(s,e,t,n,i,r){La.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(wo.x=r*La.x-i*La.y,wo.y=i*La.x+r*La.y):wo.copy(La),s.copy(e),s.x+=wo.x,s.y+=wo.y,s.applyMatrix4(kv)}const Ic=new N,m_=new N;class Gv extends Pt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),e<r)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Ic.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Ic);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Ic.setFromMatrixPosition(e.matrixWorld),m_.setFromMatrixPosition(this.matrixWorld);const n=Ic.distanceTo(m_)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r;i++){let o=t[i].distance;if(t[i].object.visible&&(o-=o*t[i].hysteresis),n>=o)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const g_=new N,__=new zt,v_=new zt,WP=new N,y_=new ot,Ia=new N,pf=new Gi,x_=new ot,mf=new $a;class Vv extends wn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ot,this.bindMatrixInverse=new ot,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new nr),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)Ia.fromBufferAttribute(t,n),this.applyBoneTransform(n,Ia),this.boundingBox.expandByPoint(Ia)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Gi),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)Ia.fromBufferAttribute(t,n),this.applyBoneTransform(n,Ia),this.boundingSphere.expandByPoint(Ia)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),pf.copy(this.boundingSphere),pf.applyMatrix4(i),e.ray.intersectsSphere(pf)!==!1&&(x_.copy(i).invert(),mf.copy(e.ray).applyMatrix4(x_),!(this.boundingBox!==null&&mf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,mf)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new zt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;__.fromBufferAttribute(i.attributes.skinIndex,e),v_.fromBufferAttribute(i.attributes.skinWeight,e),g_.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const o=v_.getComponent(r);if(o!==0){const l=__.getComponent(r);y_.multiplyMatrices(n.bones[l].matrixWorld,n.boneInverses[l]),t.addScaledVector(WP.copy(g_).applyMatrix4(y_),o)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class zd extends Pt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class za extends fn{constructor(e=null,t=1,n=1,i,r,o,l,u,h=un,f=un,p,m){super(null,o,l,u,h,f,i,r,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const M_=new ot,XP=new ot;class wu{constructor(e=[],t=[]){this.uuid=di(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new ot)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new ot;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,o=e.length;r<o;r++){const l=e[r]?e[r].matrixWorld:XP;M_.multiplyMatrices(l,t[r]),M_.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new wu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Ev(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new za(t,e,e,hi,Ki);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let o=t[r];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),o=new zd),this.bones.push(o),this.boneInverses.push(new ot().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const o=t[i];e.bones.push(o.uuid);const l=n[i];e.boneInverses.push(l.toArray())}return e}}class Va extends Wt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Ua=new ot,S_=new ot,Uc=[],b_=new nr,$P=new ot,Ao=new wn,Ro=new Gi;class Wv extends wn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Va(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,$P)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new nr),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Ua),b_.copy(e.boundingBox).applyMatrix4(Ua),this.boundingBox.union(b_)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Gi),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Ua),Ro.copy(e.boundingSphere).applyMatrix4(Ua),this.boundingSphere.union(Ro)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Ao.geometry=this.geometry,Ao.material=this.material,Ao.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ro.copy(this.boundingSphere),Ro.applyMatrix4(n),e.ray.intersectsSphere(Ro)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,Ua),S_.multiplyMatrices(n,Ua),Ao.matrixWorld=S_,Ao.raycast(e,Uc);for(let o=0,l=Uc.length;o<l;o++){const u=Uc[o];u.instanceId=r,u.object=this,t.push(u)}Uc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Va(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Wn extends Fn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Le(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const E_=new N,w_=new N,T_=new ot,gf=new $a,Dc=new Gi;class es extends Pt{constructor(e=new Et,t=new Wn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)E_.fromBufferAttribute(t,i-1),w_.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=E_.distanceTo(w_);e.setAttribute("lineDistance",new Ve(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Dc.copy(n.boundingSphere),Dc.applyMatrix4(i),Dc.radius+=r,e.ray.intersectsSphere(Dc)===!1)return;T_.copy(i).invert(),gf.copy(e.ray).applyMatrix4(T_);const l=r/((this.scale.x+this.scale.y+this.scale.z)/3),u=l*l,h=new N,f=new N,p=new N,m=new N,g=this.isLineSegments?2:1,v=n.index,y=n.attributes.position;if(v!==null){const _=Math.max(0,o.start),b=Math.min(v.count,o.start+o.count);for(let S=_,w=b-1;S<w;S+=g){const L=v.getX(S),T=v.getX(S+1);if(h.fromBufferAttribute(y,L),f.fromBufferAttribute(y,T),gf.distanceSqToSegment(h,f,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const R=e.ray.origin.distanceTo(m);R<e.near||R>e.far||t.push({distance:R,point:p.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,o.start),b=Math.min(y.count,o.start+o.count);for(let S=_,w=b-1;S<w;S+=g){if(h.fromBufferAttribute(y,S),f.fromBufferAttribute(y,S+1),gf.distanceSqToSegment(h,f,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const T=e.ray.origin.distanceTo(m);T<e.near||T>e.far||t.push({distance:T,point:p.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const l=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=r}}}}}const A_=new N,R_=new N;class ir extends es{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)A_.fromBufferAttribute(t,i),R_.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+A_.distanceTo(R_);e.setAttribute("lineDistance",new Ve(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Xv extends es{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class kd extends Fn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const C_=new ot,od=new $a,Oc=new Gi,Nc=new N;class $v extends Pt{constructor(e=new Et,t=new kd){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Oc.copy(n.boundingSphere),Oc.applyMatrix4(i),Oc.radius+=r,e.ray.intersectsSphere(Oc)===!1)return;C_.copy(i).invert(),od.copy(e.ray).applyMatrix4(C_);const l=r/((this.scale.x+this.scale.y+this.scale.z)/3),u=l*l,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,o.start),g=Math.min(h.count,o.start+o.count);for(let v=m,M=g;v<M;v++){const y=h.getX(v);Nc.fromBufferAttribute(p,y),P_(Nc,y,u,i,e,t,this)}}else{const m=Math.max(0,o.start),g=Math.min(p.count,o.start+o.count);for(let v=m,M=g;v<M;v++)Nc.fromBufferAttribute(p,v),P_(Nc,v,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const l=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=r}}}}}function P_(s,e,t,n,i,r,o){const l=od.distanceSqToPoint(s);if(l<t){const u=new N;od.closestPointToPoint(s,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;r.push({distance:h,distanceToRay:Math.sqrt(l),point:u,index:e,face:null,object:o})}}class qP extends fn{constructor(e,t,n,i,r,o,l,u,h){super(e,t,n,i,r,o,l,u,h),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:hn,this.magFilter=r!==void 0?r:hn,this.generateMipmaps=!1;const f=this;function p(){f.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class YP extends fn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=un,this.minFilter=un,this.generateMipmaps=!1,this.needsUpdate=!0}}class Hd extends fn{constructor(e,t,n,i,r,o,l,u,h,f,p,m){super(null,o,l,u,h,f,i,r,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class ZP extends Hd{constructor(e,t,n,i,r,o){super(e,t,n,r,o),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Dn}}class JP extends fn{constructor(e,t,n,i,r,o,l,u,h){super(e,t,n,i,r,o,l,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Vi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let o;t?o=t:o=e*n[r-1];let l=0,u=r-1,h;for(;l<=u;)if(i=Math.floor(l+(u-l)/2),h=n[i]-o,h<0)l=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===o)return i/(r-1);const f=n[i],m=n[i+1]-f,g=(o-f)/m;return(i+g)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),l=this.getPoint(r),u=t||(o.isVector2?new fe:new N);return u.copy(l).sub(o).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new N,i=[],r=[],o=[],l=new N,u=new ot;for(let g=0;g<=e;g++){const v=g/e;i[g]=this.getTangentAt(v,new N)}r[0]=new N,o[0]=new N;let h=Number.MAX_VALUE;const f=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);f<=h&&(h=f,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),l.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],l),o[0].crossVectors(i[0],r[0]);for(let g=1;g<=e;g++){if(r[g]=r[g-1].clone(),o[g]=o[g-1].clone(),l.crossVectors(i[g-1],i[g]),l.length()>Number.EPSILON){l.normalize();const v=Math.acos(an(i[g-1].dot(i[g]),-1,1));r[g].applyMatrix4(u.makeRotationAxis(l,v))}o[g].crossVectors(i[g],r[g])}if(t===!0){let g=Math.acos(an(r[0].dot(r[e]),-1,1));g/=e,i[0].dot(l.crossVectors(r[0],r[e]))>0&&(g=-g);for(let v=1;v<=e;v++)r[v].applyMatrix4(u.makeRotationAxis(i[v],g*v)),o[v].crossVectors(i[v],r[v])}return{tangents:i,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Tu extends Vi{constructor(e=0,t=0,n=1,i=1,r=0,o=Math.PI*2,l=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=l,this.aRotation=u}getPoint(e,t){const n=t||new fe,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const l=this.aStartAngle+e*r;let u=this.aX+this.xRadius*Math.cos(l),h=this.aY+this.yRadius*Math.sin(l);if(this.aRotation!==0){const f=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,g=h-this.aY;u=m*f-g*p+this.aX,h=m*p+g*f+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class qv extends Tu{constructor(e,t,n,i,r,o){super(e,t,n,n,i,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Gd(){let s=0,e=0,t=0,n=0;function i(r,o,l,u){s=r,e=l,t=-3*r+3*o-2*l-u,n=2*r-2*o+l+u}return{initCatmullRom:function(r,o,l,u,h){i(o,l,h*(l-r),h*(u-o))},initNonuniformCatmullRom:function(r,o,l,u,h,f,p){let m=(o-r)/h-(l-r)/(h+f)+(l-o)/f,g=(l-o)/f-(u-o)/(f+p)+(u-l)/p;m*=f,g*=f,i(o,l,m,g)},calc:function(r){const o=r*r,l=o*r;return s+e*r+t*o+n*l}}}const Fc=new N,_f=new Gd,vf=new Gd,yf=new Gd;class Yv extends Vi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new N){const n=t,i=this.points,r=i.length,o=(r-(this.closed?0:1))*e;let l=Math.floor(o),u=o-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/r)+1)*r:u===0&&l===r-1&&(l=r-2,u=1);let h,f;this.closed||l>0?h=i[(l-1)%r]:(Fc.subVectors(i[0],i[1]).add(i[0]),h=Fc);const p=i[l%r],m=i[(l+1)%r];if(this.closed||l+2<r?f=i[(l+2)%r]:(Fc.subVectors(i[r-1],i[r-2]).add(i[r-1]),f=Fc),this.curveType==="centripetal"||this.curveType==="chordal"){const g=this.curveType==="chordal"?.5:.25;let v=Math.pow(h.distanceToSquared(p),g),M=Math.pow(p.distanceToSquared(m),g),y=Math.pow(m.distanceToSquared(f),g);M<1e-4&&(M=1),v<1e-4&&(v=M),y<1e-4&&(y=M),_f.initNonuniformCatmullRom(h.x,p.x,m.x,f.x,v,M,y),vf.initNonuniformCatmullRom(h.y,p.y,m.y,f.y,v,M,y),yf.initNonuniformCatmullRom(h.z,p.z,m.z,f.z,v,M,y)}else this.curveType==="catmullrom"&&(_f.initCatmullRom(h.x,p.x,m.x,f.x,this.tension),vf.initCatmullRom(h.y,p.y,m.y,f.y,this.tension),yf.initCatmullRom(h.z,p.z,m.z,f.z,this.tension));return n.set(_f.calc(u),vf.calc(u),yf.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new N().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function L_(s,e,t,n,i){const r=(n-e)*.5,o=(i-t)*.5,l=s*s,u=s*l;return(2*t-2*n+r+o)*u+(-3*t+3*n-2*r-o)*l+r*s+t}function KP(s,e){const t=1-s;return t*t*e}function QP(s,e){return 2*(1-s)*s*e}function jP(s,e){return s*s*e}function Fo(s,e,t,n){return KP(s,e)+QP(s,t)+jP(s,n)}function eL(s,e){const t=1-s;return t*t*t*e}function tL(s,e){const t=1-s;return 3*t*t*s*e}function nL(s,e){return 3*(1-s)*s*s*e}function iL(s,e){return s*s*s*e}function Bo(s,e,t,n,i){return eL(s,e)+tL(s,t)+nL(s,n)+iL(s,i)}class Vd extends Vi{constructor(e=new fe,t=new fe,n=new fe,i=new fe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new fe){const n=t,i=this.v0,r=this.v1,o=this.v2,l=this.v3;return n.set(Bo(e,i.x,r.x,o.x,l.x),Bo(e,i.y,r.y,o.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Zv extends Vi{constructor(e=new N,t=new N,n=new N,i=new N){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new N){const n=t,i=this.v0,r=this.v1,o=this.v2,l=this.v3;return n.set(Bo(e,i.x,r.x,o.x,l.x),Bo(e,i.y,r.y,o.y,l.y),Bo(e,i.z,r.z,o.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Au extends Vi{constructor(e=new fe,t=new fe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new fe){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new fe){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Jv extends Vi{constructor(e=new N,t=new N){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new N){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new N){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Wd extends Vi{constructor(e=new fe,t=new fe,n=new fe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new fe){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(Fo(e,i.x,r.x,o.x),Fo(e,i.y,r.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Xd extends Vi{constructor(e=new N,t=new N,n=new N){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new N){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(Fo(e,i.x,r.x,o.x),Fo(e,i.y,r.y,o.y),Fo(e,i.z,r.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class $d extends Vi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new fe){const n=t,i=this.points,r=(i.length-1)*e,o=Math.floor(r),l=r-o,u=i[o===0?o:o-1],h=i[o],f=i[o>i.length-2?i.length-1:o+1],p=i[o>i.length-3?i.length-1:o+2];return n.set(L_(l,u.x,h.x,f.x,p.x),L_(l,u.y,h.y,f.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new fe().fromArray(i))}return this}}var qd=Object.freeze({__proto__:null,ArcCurve:qv,CatmullRomCurve3:Yv,CubicBezierCurve:Vd,CubicBezierCurve3:Zv,EllipseCurve:Tu,LineCurve:Au,LineCurve3:Jv,QuadraticBezierCurve:Wd,QuadraticBezierCurve3:Xd,SplineCurve:$d});class Kv extends Vi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Au(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const o=i[r]-n,l=this.curves[r],u=l.getLength(),h=u===0?0:1-o/u;return l.getPointAt(h,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],l=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,u=o.getPoints(l);for(let h=0;h<u.length;h++){const f=u[h];n&&n.equals(f)||(t.push(f),n=f)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new qd[i.type]().fromJSON(i))}return this}}class Jo extends Kv{constructor(e){super(),this.type="Path",this.currentPoint=new fe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Au(this.currentPoint.clone(),new fe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new Wd(this.currentPoint.clone(),new fe(e,t),new fe(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,o){const l=new Vd(this.currentPoint.clone(),new fe(e,t),new fe(n,i),new fe(r,o));return this.curves.push(l),this.currentPoint.set(r,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new $d(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,o){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+l,t+u,n,i,r,o),this}absarc(e,t,n,i,r,o){return this.absellipse(e,t,n,n,i,r,o),this}ellipse(e,t,n,i,r,o,l,u){const h=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(e+h,t+f,n,i,r,o,l,u),this}absellipse(e,t,n,i,r,o,l,u){const h=new Tu(e,t,n,i,r,o,l,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const f=h.getPoint(1);return this.currentPoint.copy(f),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Za extends Et{constructor(e=[new fe(0,-.5),new fe(.5,0),new fe(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=an(i,0,Math.PI*2);const r=[],o=[],l=[],u=[],h=[],f=1/t,p=new N,m=new fe,g=new N,v=new N,M=new N;let y=0,_=0;for(let b=0;b<=e.length-1;b++)switch(b){case 0:y=e[b+1].x-e[b].x,_=e[b+1].y-e[b].y,g.x=_*1,g.y=-y,g.z=_*0,M.copy(g),g.normalize(),u.push(g.x,g.y,g.z);break;case e.length-1:u.push(M.x,M.y,M.z);break;default:y=e[b+1].x-e[b].x,_=e[b+1].y-e[b].y,g.x=_*1,g.y=-y,g.z=_*0,v.copy(g),g.x+=M.x,g.y+=M.y,g.z+=M.z,g.normalize(),u.push(g.x,g.y,g.z),M.copy(v)}for(let b=0;b<=t;b++){const S=n+b*f*i,w=Math.sin(S),L=Math.cos(S);for(let T=0;T<=e.length-1;T++){p.x=e[T].x*w,p.y=e[T].y,p.z=e[T].x*L,o.push(p.x,p.y,p.z),m.x=b/t,m.y=T/(e.length-1),l.push(m.x,m.y);const C=u[3*T+0]*w,R=u[3*T+1],A=u[3*T+0]*L;h.push(C,R,A)}}for(let b=0;b<t;b++)for(let S=0;S<e.length-1;S++){const w=S+b*e.length,L=w,T=w+e.length,C=w+e.length+1,R=w+1;r.push(L,T,R),r.push(C,R,T)}this.setIndex(r),this.setAttribute("position",new Ve(o,3)),this.setAttribute("uv",new Ve(l,2)),this.setAttribute("normal",new Ve(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Za(e.points,e.segments,e.phiStart,e.phiLength)}}class ll extends Za{constructor(e=1,t=1,n=4,i=8){const r=new Jo;r.absarc(0,-t/2,e,Math.PI*1.5,0),r.absarc(0,t/2,e,0,Math.PI*.5),super(r.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new ll(e.radius,e.length,e.capSegments,e.radialSegments)}}class cl extends Et{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],o=[],l=[],u=[],h=new N,f=new fe;o.push(0,0,0),l.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const g=n+p/t*i;h.x=e*Math.cos(g),h.y=e*Math.sin(g),o.push(h.x,h.y,h.z),l.push(0,0,1),f.x=(o[m]/e+1)/2,f.y=(o[m+1]/e+1)/2,u.push(f.x,f.y)}for(let p=1;p<=t;p++)r.push(p,p+1,0);this.setIndex(r),this.setAttribute("position",new Ve(o,3)),this.setAttribute("normal",new Ve(l,3)),this.setAttribute("uv",new Ve(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new cl(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Vs extends Et{constructor(e=1,t=1,n=1,i=32,r=1,o=!1,l=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:l,thetaLength:u};const h=this;i=Math.floor(i),r=Math.floor(r);const f=[],p=[],m=[],g=[];let v=0;const M=[],y=n/2;let _=0;b(),o===!1&&(e>0&&S(!0),t>0&&S(!1)),this.setIndex(f),this.setAttribute("position",new Ve(p,3)),this.setAttribute("normal",new Ve(m,3)),this.setAttribute("uv",new Ve(g,2));function b(){const w=new N,L=new N;let T=0;const C=(t-e)/n;for(let R=0;R<=r;R++){const A=[],D=R/r,X=D*(t-e)+e;for(let ce=0;ce<=i;ce++){const q=ce/i,Y=q*u+l,W=Math.sin(Y),he=Math.cos(Y);L.x=X*W,L.y=-D*n+y,L.z=X*he,p.push(L.x,L.y,L.z),w.set(W,C,he).normalize(),m.push(w.x,w.y,w.z),g.push(q,1-D),A.push(v++)}M.push(A)}for(let R=0;R<i;R++)for(let A=0;A<r;A++){const D=M[A][R],X=M[A+1][R],ce=M[A+1][R+1],q=M[A][R+1];f.push(D,X,q),f.push(X,ce,q),T+=6}h.addGroup(_,T,0),_+=T}function S(w){const L=v,T=new fe,C=new N;let R=0;const A=w===!0?e:t,D=w===!0?1:-1;for(let ce=1;ce<=i;ce++)p.push(0,y*D,0),m.push(0,D,0),g.push(.5,.5),v++;const X=v;for(let ce=0;ce<=i;ce++){const Y=ce/i*u+l,W=Math.cos(Y),he=Math.sin(Y);C.x=A*he,C.y=y*D,C.z=A*W,p.push(C.x,C.y,C.z),m.push(0,D,0),T.x=W*.5+.5,T.y=he*.5*D+.5,g.push(T.x,T.y),v++}for(let ce=0;ce<i;ce++){const q=L+ce,Y=X+ce;w===!0?f.push(Y,Y+1,q):f.push(Y+1,Y,q),R+=3}h.addGroup(_,R,w===!0?1:2),_+=R}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Vs(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ul extends Vs{constructor(e=1,t=1,n=32,i=1,r=!1,o=0,l=Math.PI*2){super(0,e,t,n,i,r,o,l),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:o,thetaLength:l}}static fromJSON(e){return new ul(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Lr extends Et{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],o=[];l(i),h(n),f(),this.setAttribute("position",new Ve(r,3)),this.setAttribute("normal",new Ve(r.slice(),3)),this.setAttribute("uv",new Ve(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function l(b){const S=new N,w=new N,L=new N;for(let T=0;T<t.length;T+=3)g(t[T+0],S),g(t[T+1],w),g(t[T+2],L),u(S,w,L,b)}function u(b,S,w,L){const T=L+1,C=[];for(let R=0;R<=T;R++){C[R]=[];const A=b.clone().lerp(w,R/T),D=S.clone().lerp(w,R/T),X=T-R;for(let ce=0;ce<=X;ce++)ce===0&&R===T?C[R][ce]=A:C[R][ce]=A.clone().lerp(D,ce/X)}for(let R=0;R<T;R++)for(let A=0;A<2*(T-R)-1;A++){const D=Math.floor(A/2);A%2===0?(m(C[R][D+1]),m(C[R+1][D]),m(C[R][D])):(m(C[R][D+1]),m(C[R+1][D+1]),m(C[R+1][D]))}}function h(b){const S=new N;for(let w=0;w<r.length;w+=3)S.x=r[w+0],S.y=r[w+1],S.z=r[w+2],S.normalize().multiplyScalar(b),r[w+0]=S.x,r[w+1]=S.y,r[w+2]=S.z}function f(){const b=new N;for(let S=0;S<r.length;S+=3){b.x=r[S+0],b.y=r[S+1],b.z=r[S+2];const w=y(b)/2/Math.PI+.5,L=_(b)/Math.PI+.5;o.push(w,1-L)}v(),p()}function p(){for(let b=0;b<o.length;b+=6){const S=o[b+0],w=o[b+2],L=o[b+4],T=Math.max(S,w,L),C=Math.min(S,w,L);T>.9&&C<.1&&(S<.2&&(o[b+0]+=1),w<.2&&(o[b+2]+=1),L<.2&&(o[b+4]+=1))}}function m(b){r.push(b.x,b.y,b.z)}function g(b,S){const w=b*3;S.x=e[w+0],S.y=e[w+1],S.z=e[w+2]}function v(){const b=new N,S=new N,w=new N,L=new N,T=new fe,C=new fe,R=new fe;for(let A=0,D=0;A<r.length;A+=9,D+=6){b.set(r[A+0],r[A+1],r[A+2]),S.set(r[A+3],r[A+4],r[A+5]),w.set(r[A+6],r[A+7],r[A+8]),T.set(o[D+0],o[D+1]),C.set(o[D+2],o[D+3]),R.set(o[D+4],o[D+5]),L.copy(b).add(S).add(w).divideScalar(3);const X=y(L);M(T,D+0,b,X),M(C,D+2,S,X),M(R,D+4,w,X)}}function M(b,S,w,L){L<0&&b.x===1&&(o[S]=b.x-1),w.x===0&&w.z===0&&(o[S]=L/2/Math.PI+.5)}function y(b){return Math.atan2(b.z,-b.x)}function _(b){return Math.atan2(-b.y,Math.sqrt(b.x*b.x+b.z*b.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Lr(e.vertices,e.indices,e.radius,e.details)}}class hl extends Lr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new hl(e.radius,e.detail)}}const Bc=new N,zc=new N,xf=new N,kc=new Kn;class Qv extends Et{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(Fs*t),o=e.getIndex(),l=e.getAttribute("position"),u=o?o.count:l.count,h=[0,0,0],f=["a","b","c"],p=new Array(3),m={},g=[];for(let v=0;v<u;v+=3){o?(h[0]=o.getX(v),h[1]=o.getX(v+1),h[2]=o.getX(v+2)):(h[0]=v,h[1]=v+1,h[2]=v+2);const{a:M,b:y,c:_}=kc;if(M.fromBufferAttribute(l,h[0]),y.fromBufferAttribute(l,h[1]),_.fromBufferAttribute(l,h[2]),kc.getNormal(xf),p[0]=`${Math.round(M.x*i)},${Math.round(M.y*i)},${Math.round(M.z*i)}`,p[1]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,p[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let b=0;b<3;b++){const S=(b+1)%3,w=p[b],L=p[S],T=kc[f[b]],C=kc[f[S]],R=`${w}_${L}`,A=`${L}_${w}`;A in m&&m[A]?(xf.dot(m[A].normal)<=r&&(g.push(T.x,T.y,T.z),g.push(C.x,C.y,C.z)),m[A]=null):R in m||(m[R]={index0:h[b],index1:h[S],normal:xf.clone()})}}for(const v in m)if(m[v]){const{index0:M,index1:y}=m[v];Bc.fromBufferAttribute(l,M),zc.fromBufferAttribute(l,y),g.push(Bc.x,Bc.y,Bc.z),g.push(zc.x,zc.y,zc.z)}this.setAttribute("position",new Ve(g,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Bs extends Jo{constructor(e){super(e),this.uuid=di(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Jo().fromJSON(i))}return this}}const rL={triangulate:function(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=jv(s,0,i,t,!0);const o=[];if(!r||r.next===r.prev)return o;let l,u,h,f,p,m,g;if(n&&(r=cL(s,e,r,t)),s.length>80*t){l=h=s[0],u=f=s[1];for(let v=t;v<i;v+=t)p=s[v],m=s[v+1],p<l&&(l=p),m<u&&(u=m),p>h&&(h=p),m>f&&(f=m);g=Math.max(h-l,f-u),g=g!==0?32767/g:0}return Ko(r,o,t,l,u,g,0),o}};function jv(s,e,t,n,i){let r,o;if(i===xL(s,e,t,n)>0)for(r=e;r<t;r+=n)o=I_(r,s[r],s[r+1],o);else for(r=t-n;r>=e;r-=n)o=I_(r,s[r],s[r+1],o);return o&&Ru(o,o.next)&&(jo(o),o=o.next),o}function Hs(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(Ru(t,t.next)||tn(t.prev,t,t.next)===0)){if(jo(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Ko(s,e,t,n,i,r,o){if(!s)return;!o&&r&&pL(s,n,i,r);let l=s,u,h;for(;s.prev!==s.next;){if(u=s.prev,h=s.next,r?aL(s,n,i,r):sL(s)){e.push(u.i/t|0),e.push(s.i/t|0),e.push(h.i/t|0),jo(s),s=h.next,l=h.next;continue}if(s=h,s===l){o?o===1?(s=oL(Hs(s),e,t),Ko(s,e,t,n,i,r,2)):o===2&&lL(s,e,t,n,i,r):Ko(Hs(s),e,t,n,i,r,1);break}}}function sL(s){const e=s.prev,t=s,n=s.next;if(tn(e,t,n)>=0)return!1;const i=e.x,r=t.x,o=n.x,l=e.y,u=t.y,h=n.y,f=i<r?i<o?i:o:r<o?r:o,p=l<u?l<h?l:h:u<h?u:h,m=i>r?i>o?i:o:r>o?r:o,g=l>u?l>h?l:h:u>h?u:h;let v=n.next;for(;v!==e;){if(v.x>=f&&v.x<=m&&v.y>=p&&v.y<=g&&Fa(i,l,r,u,o,h,v.x,v.y)&&tn(v.prev,v,v.next)>=0)return!1;v=v.next}return!0}function aL(s,e,t,n){const i=s.prev,r=s,o=s.next;if(tn(i,r,o)>=0)return!1;const l=i.x,u=r.x,h=o.x,f=i.y,p=r.y,m=o.y,g=l<u?l<h?l:h:u<h?u:h,v=f<p?f<m?f:m:p<m?p:m,M=l>u?l>h?l:h:u>h?u:h,y=f>p?f>m?f:m:p>m?p:m,_=ld(g,v,e,t,n),b=ld(M,y,e,t,n);let S=s.prevZ,w=s.nextZ;for(;S&&S.z>=_&&w&&w.z<=b;){if(S.x>=g&&S.x<=M&&S.y>=v&&S.y<=y&&S!==i&&S!==o&&Fa(l,f,u,p,h,m,S.x,S.y)&&tn(S.prev,S,S.next)>=0||(S=S.prevZ,w.x>=g&&w.x<=M&&w.y>=v&&w.y<=y&&w!==i&&w!==o&&Fa(l,f,u,p,h,m,w.x,w.y)&&tn(w.prev,w,w.next)>=0))return!1;w=w.nextZ}for(;S&&S.z>=_;){if(S.x>=g&&S.x<=M&&S.y>=v&&S.y<=y&&S!==i&&S!==o&&Fa(l,f,u,p,h,m,S.x,S.y)&&tn(S.prev,S,S.next)>=0)return!1;S=S.prevZ}for(;w&&w.z<=b;){if(w.x>=g&&w.x<=M&&w.y>=v&&w.y<=y&&w!==i&&w!==o&&Fa(l,f,u,p,h,m,w.x,w.y)&&tn(w.prev,w,w.next)>=0)return!1;w=w.nextZ}return!0}function oL(s,e,t){let n=s;do{const i=n.prev,r=n.next.next;!Ru(i,r)&&ey(i,n,n.next,r)&&Qo(i,r)&&Qo(r,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(r.i/t|0),jo(n),jo(n.next),n=s=r),n=n.next}while(n!==s);return Hs(n)}function lL(s,e,t,n,i,r){let o=s;do{let l=o.next.next;for(;l!==o.prev;){if(o.i!==l.i&&_L(o,l)){let u=ty(o,l);o=Hs(o,o.next),u=Hs(u,u.next),Ko(o,e,t,n,i,r,0),Ko(u,e,t,n,i,r,0);return}l=l.next}o=o.next}while(o!==s)}function cL(s,e,t,n){const i=[];let r,o,l,u,h;for(r=0,o=e.length;r<o;r++)l=e[r]*n,u=r<o-1?e[r+1]*n:s.length,h=jv(s,l,u,n,!1),h===h.next&&(h.steiner=!0),i.push(gL(h));for(i.sort(uL),r=0;r<i.length;r++)t=hL(i[r],t);return t}function uL(s,e){return s.x-e.x}function hL(s,e){const t=fL(s,e);if(!t)return e;const n=ty(t,s);return Hs(n,n.next),Hs(t,t.next)}function fL(s,e){let t=e,n=-1/0,i;const r=s.x,o=s.y;do{if(o<=t.y&&o>=t.next.y&&t.next.y!==t.y){const m=t.x+(o-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=r&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===r))return i}t=t.next}while(t!==e);if(!i)return null;const l=i,u=i.x,h=i.y;let f=1/0,p;t=i;do r>=t.x&&t.x>=u&&r!==t.x&&Fa(o<h?r:n,o,u,h,o<h?n:r,o,t.x,t.y)&&(p=Math.abs(o-t.y)/(r-t.x),Qo(t,s)&&(p<f||p===f&&(t.x>i.x||t.x===i.x&&dL(i,t)))&&(i=t,f=p)),t=t.next;while(t!==l);return i}function dL(s,e){return tn(s.prev,s,e.prev)<0&&tn(e.next,s,s.next)<0}function pL(s,e,t,n){let i=s;do i.z===0&&(i.z=ld(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,mL(i)}function mL(s){let e,t,n,i,r,o,l,u,h=1;do{for(t=s,s=null,r=null,o=0;t;){for(o++,n=t,l=0,e=0;e<h&&(l++,n=n.nextZ,!!n);e++);for(u=h;l>0||u>0&&n;)l!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,l--):(i=n,n=n.nextZ,u--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;t=n}r.nextZ=null,h*=2}while(o>1);return s}function ld(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function gL(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function Fa(s,e,t,n,i,r,o,l){return(i-o)*(e-l)>=(s-o)*(r-l)&&(s-o)*(n-l)>=(t-o)*(e-l)&&(t-o)*(r-l)>=(i-o)*(n-l)}function _L(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!vL(s,e)&&(Qo(s,e)&&Qo(e,s)&&yL(s,e)&&(tn(s.prev,s,e.prev)||tn(s,e.prev,e))||Ru(s,e)&&tn(s.prev,s,s.next)>0&&tn(e.prev,e,e.next)>0)}function tn(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function Ru(s,e){return s.x===e.x&&s.y===e.y}function ey(s,e,t,n){const i=Gc(tn(s,e,t)),r=Gc(tn(s,e,n)),o=Gc(tn(t,n,s)),l=Gc(tn(t,n,e));return!!(i!==r&&o!==l||i===0&&Hc(s,t,e)||r===0&&Hc(s,n,e)||o===0&&Hc(t,s,n)||l===0&&Hc(t,e,n))}function Hc(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function Gc(s){return s>0?1:s<0?-1:0}function vL(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&ey(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function Qo(s,e){return tn(s.prev,s,s.next)<0?tn(s,e,s.next)>=0&&tn(s,s.prev,e)>=0:tn(s,e,s.prev)<0||tn(s,s.next,e)<0}function yL(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function ty(s,e){const t=new cd(s.i,s.x,s.y),n=new cd(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function I_(s,e,t,n){const i=new cd(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function jo(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function cd(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function xL(s,e,t,n){let i=0;for(let r=e,o=t-n;r<t;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}class er{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return er.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];U_(e),D_(n,e);let o=e.length;t.forEach(U_);for(let u=0;u<t.length;u++)i.push(o),o+=t[u].length,D_(n,t[u]);const l=rL.triangulate(n,i);for(let u=0;u<l.length;u+=3)r.push(l.slice(u,u+3));return r}}function U_(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function D_(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class fl extends Et{constructor(e=new Bs([new fe(.5,.5),new fe(-.5,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let l=0,u=e.length;l<u;l++){const h=e[l];o(h)}this.setAttribute("position",new Ve(i,3)),this.setAttribute("uv",new Ve(r,2)),this.computeVertexNormals();function o(l){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,f=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,g=t.bevelThickness!==void 0?t.bevelThickness:.2,v=t.bevelSize!==void 0?t.bevelSize:g-.1,M=t.bevelOffset!==void 0?t.bevelOffset:0,y=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,b=t.UVGenerator!==void 0?t.UVGenerator:ML;let S,w=!1,L,T,C,R;_&&(S=_.getSpacedPoints(f),w=!0,m=!1,L=_.computeFrenetFrames(f,!1),T=new N,C=new N,R=new N),m||(y=0,g=0,v=0,M=0);const A=l.extractPoints(h);let D=A.shape;const X=A.holes;if(!er.isClockWise(D)){D=D.reverse();for(let z=0,Me=X.length;z<Me;z++){const re=X[z];er.isClockWise(re)&&(X[z]=re.reverse())}}const q=er.triangulateShape(D,X),Y=D;for(let z=0,Me=X.length;z<Me;z++){const re=X[z];D=D.concat(re)}function W(z,Me,re){return Me||console.error("THREE.ExtrudeGeometry: vec does not exist"),z.clone().addScaledVector(Me,re)}const he=D.length,j=q.length;function oe(z,Me,re){let xe,pe,Ne;const Ue=z.x-Me.x,Fe=z.y-Me.y,tt=re.x-z.x,rt=re.y-z.y,kt=Ue*Ue+Fe*Fe,F=Ue*rt-Fe*tt;if(Math.abs(F)>Number.EPSILON){const U=Math.sqrt(kt),ee=Math.sqrt(tt*tt+rt*rt),ye=Me.x-Fe/U,ve=Me.y+Ue/U,Se=re.x-rt/ee,We=re.y+tt/ee,we=((Se-ye)*rt-(We-ve)*tt)/(Ue*rt-Fe*tt);xe=ye+Ue*we-z.x,pe=ve+Fe*we-z.y;const se=xe*xe+pe*pe;if(se<=2)return new fe(xe,pe);Ne=Math.sqrt(se/2)}else{let U=!1;Ue>Number.EPSILON?tt>Number.EPSILON&&(U=!0):Ue<-Number.EPSILON?tt<-Number.EPSILON&&(U=!0):Math.sign(Fe)===Math.sign(rt)&&(U=!0),U?(xe=-Fe,pe=Ue,Ne=Math.sqrt(kt)):(xe=Ue,pe=Fe,Ne=Math.sqrt(kt/2))}return new fe(xe/Ne,pe/Ne)}const de=[];for(let z=0,Me=Y.length,re=Me-1,xe=z+1;z<Me;z++,re++,xe++)re===Me&&(re=0),xe===Me&&(xe=0),de[z]=oe(Y[z],Y[re],Y[xe]);const te=[];let Ee,Q=de.concat();for(let z=0,Me=X.length;z<Me;z++){const re=X[z];Ee=[];for(let xe=0,pe=re.length,Ne=pe-1,Ue=xe+1;xe<pe;xe++,Ne++,Ue++)Ne===pe&&(Ne=0),Ue===pe&&(Ue=0),Ee[xe]=oe(re[xe],re[Ne],re[Ue]);te.push(Ee),Q=Q.concat(Ee)}for(let z=0;z<y;z++){const Me=z/y,re=g*Math.cos(Me*Math.PI/2),xe=v*Math.sin(Me*Math.PI/2)+M;for(let pe=0,Ne=Y.length;pe<Ne;pe++){const Ue=W(Y[pe],de[pe],xe);Ge(Ue.x,Ue.y,-re)}for(let pe=0,Ne=X.length;pe<Ne;pe++){const Ue=X[pe];Ee=te[pe];for(let Fe=0,tt=Ue.length;Fe<tt;Fe++){const rt=W(Ue[Fe],Ee[Fe],xe);Ge(rt.x,rt.y,-re)}}}const ge=v+M;for(let z=0;z<he;z++){const Me=m?W(D[z],Q[z],ge):D[z];w?(C.copy(L.normals[0]).multiplyScalar(Me.x),T.copy(L.binormals[0]).multiplyScalar(Me.y),R.copy(S[0]).add(C).add(T),Ge(R.x,R.y,R.z)):Ge(Me.x,Me.y,0)}for(let z=1;z<=f;z++)for(let Me=0;Me<he;Me++){const re=m?W(D[Me],Q[Me],ge):D[Me];w?(C.copy(L.normals[z]).multiplyScalar(re.x),T.copy(L.binormals[z]).multiplyScalar(re.y),R.copy(S[z]).add(C).add(T),Ge(R.x,R.y,R.z)):Ge(re.x,re.y,p/f*z)}for(let z=y-1;z>=0;z--){const Me=z/y,re=g*Math.cos(Me*Math.PI/2),xe=v*Math.sin(Me*Math.PI/2)+M;for(let pe=0,Ne=Y.length;pe<Ne;pe++){const Ue=W(Y[pe],de[pe],xe);Ge(Ue.x,Ue.y,p+re)}for(let pe=0,Ne=X.length;pe<Ne;pe++){const Ue=X[pe];Ee=te[pe];for(let Fe=0,tt=Ue.length;Fe<tt;Fe++){const rt=W(Ue[Fe],Ee[Fe],xe);w?Ge(rt.x,rt.y+S[f-1].y,S[f-1].x+re):Ge(rt.x,rt.y,p+re)}}}_e(),Pe();function _e(){const z=i.length/3;if(m){let Me=0,re=he*Me;for(let xe=0;xe<j;xe++){const pe=q[xe];it(pe[2]+re,pe[1]+re,pe[0]+re)}Me=f+y*2,re=he*Me;for(let xe=0;xe<j;xe++){const pe=q[xe];it(pe[0]+re,pe[1]+re,pe[2]+re)}}else{for(let Me=0;Me<j;Me++){const re=q[Me];it(re[2],re[1],re[0])}for(let Me=0;Me<j;Me++){const re=q[Me];it(re[0]+he*f,re[1]+he*f,re[2]+he*f)}}n.addGroup(z,i.length/3-z,0)}function Pe(){const z=i.length/3;let Me=0;Ie(Y,Me),Me+=Y.length;for(let re=0,xe=X.length;re<xe;re++){const pe=X[re];Ie(pe,Me),Me+=pe.length}n.addGroup(z,i.length/3-z,1)}function Ie(z,Me){let re=z.length;for(;--re>=0;){const xe=re;let pe=re-1;pe<0&&(pe=z.length-1);for(let Ne=0,Ue=f+y*2;Ne<Ue;Ne++){const Fe=he*Ne,tt=he*(Ne+1),rt=Me+xe+Fe,kt=Me+pe+Fe,F=Me+pe+tt,U=Me+xe+tt;Ze(rt,kt,F,U)}}}function Ge(z,Me,re){u.push(z),u.push(Me),u.push(re)}function it(z,Me,re){Nt(z),Nt(Me),Nt(re);const xe=i.length/3,pe=b.generateTopUV(n,i,xe-3,xe-2,xe-1);et(pe[0]),et(pe[1]),et(pe[2])}function Ze(z,Me,re,xe){Nt(z),Nt(Me),Nt(xe),Nt(Me),Nt(re),Nt(xe);const pe=i.length/3,Ne=b.generateSideWallUV(n,i,pe-6,pe-3,pe-2,pe-1);et(Ne[0]),et(Ne[1]),et(Ne[3]),et(Ne[1]),et(Ne[2]),et(Ne[3])}function Nt(z){i.push(u[z*3+0]),i.push(u[z*3+1]),i.push(u[z*3+2])}function et(z){r.push(z.x),r.push(z.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return SL(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,o=e.shapes.length;r<o;r++){const l=t[e.shapes[r]];n.push(l)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new qd[i.type]().fromJSON(i)),new fl(n,e.options)}}const ML={generateTopUV:function(s,e,t,n,i){const r=e[t*3],o=e[t*3+1],l=e[n*3],u=e[n*3+1],h=e[i*3],f=e[i*3+1];return[new fe(r,o),new fe(l,u),new fe(h,f)]},generateSideWallUV:function(s,e,t,n,i,r){const o=e[t*3],l=e[t*3+1],u=e[t*3+2],h=e[n*3],f=e[n*3+1],p=e[n*3+2],m=e[i*3],g=e[i*3+1],v=e[i*3+2],M=e[r*3],y=e[r*3+1],_=e[r*3+2];return Math.abs(l-f)<Math.abs(o-h)?[new fe(o,1-u),new fe(h,1-p),new fe(m,1-v),new fe(M,1-_)]:[new fe(l,1-u),new fe(f,1-p),new fe(g,1-v),new fe(y,1-_)]}};function SL(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class dl extends Lr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new dl(e.radius,e.detail)}}class Ja extends Lr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ja(e.radius,e.detail)}}class pl extends Et{constructor(e=.5,t=1,n=32,i=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const l=[],u=[],h=[],f=[];let p=e;const m=(t-e)/i,g=new N,v=new fe;for(let M=0;M<=i;M++){for(let y=0;y<=n;y++){const _=r+y/n*o;g.x=p*Math.cos(_),g.y=p*Math.sin(_),u.push(g.x,g.y,g.z),h.push(0,0,1),v.x=(g.x/t+1)/2,v.y=(g.y/t+1)/2,f.push(v.x,v.y)}p+=m}for(let M=0;M<i;M++){const y=M*(n+1);for(let _=0;_<n;_++){const b=_+y,S=b,w=b+n+1,L=b+n+2,T=b+1;l.push(S,w,T),l.push(w,L,T)}}this.setIndex(l),this.setAttribute("position",new Ve(u,3)),this.setAttribute("normal",new Ve(h,3)),this.setAttribute("uv",new Ve(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new pl(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class ml extends Et{constructor(e=new Bs([new fe(0,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],o=[];let l=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let f=0;f<e.length;f++)h(e[f]),this.addGroup(l,u,f),l+=u,u=0;this.setIndex(n),this.setAttribute("position",new Ve(i,3)),this.setAttribute("normal",new Ve(r,3)),this.setAttribute("uv",new Ve(o,2));function h(f){const p=i.length/3,m=f.extractPoints(t);let g=m.shape;const v=m.holes;er.isClockWise(g)===!1&&(g=g.reverse());for(let y=0,_=v.length;y<_;y++){const b=v[y];er.isClockWise(b)===!0&&(v[y]=b.reverse())}const M=er.triangulateShape(g,v);for(let y=0,_=v.length;y<_;y++){const b=v[y];g=g.concat(b)}for(let y=0,_=g.length;y<_;y++){const b=g[y];i.push(b.x,b.y,0),r.push(0,0,1),o.push(b.x,b.y)}for(let y=0,_=M.length;y<_;y++){const b=M[y],S=b[0]+p,w=b[1]+p,L=b[2]+p;n.push(S,w,L),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return bL(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const o=t[e.shapes[i]];n.push(o)}return new ml(n,e.curveSegments)}}function bL(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class Ka extends Et{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,o=0,l=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:l},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(o+l,Math.PI);let h=0;const f=[],p=new N,m=new N,g=[],v=[],M=[],y=[];for(let _=0;_<=n;_++){const b=[],S=_/n;let w=0;_===0&&o===0?w=.5/t:_===n&&u===Math.PI&&(w=-.5/t);for(let L=0;L<=t;L++){const T=L/t;p.x=-e*Math.cos(i+T*r)*Math.sin(o+S*l),p.y=e*Math.cos(o+S*l),p.z=e*Math.sin(i+T*r)*Math.sin(o+S*l),v.push(p.x,p.y,p.z),m.copy(p).normalize(),M.push(m.x,m.y,m.z),y.push(T+w,1-S),b.push(h++)}f.push(b)}for(let _=0;_<n;_++)for(let b=0;b<t;b++){const S=f[_][b+1],w=f[_][b],L=f[_+1][b],T=f[_+1][b+1];(_!==0||o>0)&&g.push(S,w,T),(_!==n-1||u<Math.PI)&&g.push(w,L,T)}this.setIndex(g),this.setAttribute("position",new Ve(v,3)),this.setAttribute("normal",new Ve(M,3)),this.setAttribute("uv",new Ve(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ka(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class gl extends Lr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new gl(e.radius,e.detail)}}class _l extends Et{constructor(e=1,t=.4,n=12,i=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const o=[],l=[],u=[],h=[],f=new N,p=new N,m=new N;for(let g=0;g<=n;g++)for(let v=0;v<=i;v++){const M=v/i*r,y=g/n*Math.PI*2;p.x=(e+t*Math.cos(y))*Math.cos(M),p.y=(e+t*Math.cos(y))*Math.sin(M),p.z=t*Math.sin(y),l.push(p.x,p.y,p.z),f.x=e*Math.cos(M),f.y=e*Math.sin(M),m.subVectors(p,f).normalize(),u.push(m.x,m.y,m.z),h.push(v/i),h.push(g/n)}for(let g=1;g<=n;g++)for(let v=1;v<=i;v++){const M=(i+1)*g+v-1,y=(i+1)*(g-1)+v-1,_=(i+1)*(g-1)+v,b=(i+1)*g+v;o.push(M,y,b),o.push(y,_,b)}this.setIndex(o),this.setAttribute("position",new Ve(l,3)),this.setAttribute("normal",new Ve(u,3)),this.setAttribute("uv",new Ve(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new _l(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class vl extends Et{constructor(e=1,t=.4,n=64,i=8,r=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:o},n=Math.floor(n),i=Math.floor(i);const l=[],u=[],h=[],f=[],p=new N,m=new N,g=new N,v=new N,M=new N,y=new N,_=new N;for(let S=0;S<=n;++S){const w=S/n*r*Math.PI*2;b(w,r,o,e,g),b(w+.01,r,o,e,v),y.subVectors(v,g),_.addVectors(v,g),M.crossVectors(y,_),_.crossVectors(M,y),M.normalize(),_.normalize();for(let L=0;L<=i;++L){const T=L/i*Math.PI*2,C=-t*Math.cos(T),R=t*Math.sin(T);p.x=g.x+(C*_.x+R*M.x),p.y=g.y+(C*_.y+R*M.y),p.z=g.z+(C*_.z+R*M.z),u.push(p.x,p.y,p.z),m.subVectors(p,g).normalize(),h.push(m.x,m.y,m.z),f.push(S/n),f.push(L/i)}}for(let S=1;S<=n;S++)for(let w=1;w<=i;w++){const L=(i+1)*(S-1)+(w-1),T=(i+1)*S+(w-1),C=(i+1)*S+w,R=(i+1)*(S-1)+w;l.push(L,T,R),l.push(T,C,R)}this.setIndex(l),this.setAttribute("position",new Ve(u,3)),this.setAttribute("normal",new Ve(h,3)),this.setAttribute("uv",new Ve(f,2));function b(S,w,L,T,C){const R=Math.cos(S),A=Math.sin(S),D=L/w*S,X=Math.cos(D);C.x=T*(2+X)*.5*R,C.y=T*(2+X)*A*.5,C.z=T*Math.sin(D)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vl(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class yl extends Et{constructor(e=new Xd(new N(-1,-1,0),new N(-1,1,0),new N(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const o=e.computeFrenetFrames(t,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const l=new N,u=new N,h=new fe;let f=new N;const p=[],m=[],g=[],v=[];M(),this.setIndex(v),this.setAttribute("position",new Ve(p,3)),this.setAttribute("normal",new Ve(m,3)),this.setAttribute("uv",new Ve(g,2));function M(){for(let S=0;S<t;S++)y(S);y(r===!1?t:0),b(),_()}function y(S){f=e.getPointAt(S/t,f);const w=o.normals[S],L=o.binormals[S];for(let T=0;T<=i;T++){const C=T/i*Math.PI*2,R=Math.sin(C),A=-Math.cos(C);u.x=A*w.x+R*L.x,u.y=A*w.y+R*L.y,u.z=A*w.z+R*L.z,u.normalize(),m.push(u.x,u.y,u.z),l.x=f.x+n*u.x,l.y=f.y+n*u.y,l.z=f.z+n*u.z,p.push(l.x,l.y,l.z)}}function _(){for(let S=1;S<=t;S++)for(let w=1;w<=i;w++){const L=(i+1)*(S-1)+(w-1),T=(i+1)*S+(w-1),C=(i+1)*S+w,R=(i+1)*(S-1)+w;v.push(L,T,R),v.push(T,C,R)}}function b(){for(let S=0;S<=t;S++)for(let w=0;w<=i;w++)h.x=S/t,h.y=w/i,g.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new yl(new qd[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class ny extends Et{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new N,r=new N;if(e.index!==null){const o=e.attributes.position,l=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:l.count,materialIndex:0}]);for(let h=0,f=u.length;h<f;++h){const p=u[h],m=p.start,g=p.count;for(let v=m,M=m+g;v<M;v+=3)for(let y=0;y<3;y++){const _=l.getX(v+y),b=l.getX(v+(y+1)%3);i.fromBufferAttribute(o,_),r.fromBufferAttribute(o,b),O_(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const o=e.attributes.position;for(let l=0,u=o.count/3;l<u;l++)for(let h=0;h<3;h++){const f=3*l+h,p=3*l+(h+1)%3;i.fromBufferAttribute(o,f),r.fromBufferAttribute(o,p),O_(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new Ve(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function O_(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var N_=Object.freeze({__proto__:null,BoxGeometry:as,CapsuleGeometry:ll,CircleGeometry:cl,ConeGeometry:ul,CylinderGeometry:Vs,DodecahedronGeometry:hl,EdgesGeometry:Qv,ExtrudeGeometry:fl,IcosahedronGeometry:dl,LatheGeometry:Za,OctahedronGeometry:Ja,PlaneGeometry:qa,PolyhedronGeometry:Lr,RingGeometry:pl,ShapeGeometry:ml,SphereGeometry:Ka,TetrahedronGeometry:gl,TorusGeometry:_l,TorusKnotGeometry:vl,TubeGeometry:yl,WireframeGeometry:ny});class iy extends Fn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Le(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class ry extends tr{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Yd extends Fn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Le(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ss,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Cu extends Yd{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new fe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return an(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Le(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Le(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Le(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class sy extends Fn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Le(16777215),this.specular=new Le(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ss,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=sl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ay extends Fn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Le(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ss,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class oy extends Fn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ss,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class ly extends Fn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ss,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=sl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class cy extends Fn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Le(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ss,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class uy extends Wn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Ti(s,e,t){return Zd(s)?new s.constructor(s.subarray(e,t!==void 0?t:s.length)):s.slice(e,t)}function Us(s,e,t){return!s||!t&&s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function Zd(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function hy(s){function e(i,r){return s[i]-s[r]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function ud(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,o=0;o!==n;++r){const l=t[r]*e;for(let u=0;u!==e;++u)i[o++]=s[l+u]}return i}function Jd(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let o=r[n];if(o!==void 0)if(Array.isArray(o))do o=r[n],o!==void 0&&(e.push(r.time),t.push.apply(t,o)),r=s[i++];while(r!==void 0);else if(o.toArray!==void 0)do o=r[n],o!==void 0&&(e.push(r.time),o.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do o=r[n],o!==void 0&&(e.push(r.time),t.push(o)),r=s[i++];while(r!==void 0)}function EL(s,e,t,n,i=30){const r=s.clone();r.name=e;const o=[];for(let u=0;u<r.tracks.length;++u){const h=r.tracks[u],f=h.getValueSize(),p=[],m=[];for(let g=0;g<h.times.length;++g){const v=h.times[g]*i;if(!(v<t||v>=n)){p.push(h.times[g]);for(let M=0;M<f;++M)m.push(h.values[g*f+M])}}p.length!==0&&(h.times=Us(p,h.times.constructor),h.values=Us(m,h.values.constructor),o.push(h))}r.tracks=o;let l=1/0;for(let u=0;u<r.tracks.length;++u)l>r.tracks[u].times[0]&&(l=r.tracks[u].times[0]);for(let u=0;u<r.tracks.length;++u)r.tracks[u].shift(-1*l);return r.resetDuration(),r}function wL(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let o=0;o<i;++o){const l=t.tracks[o],u=l.ValueTypeName;if(u==="bool"||u==="string")continue;const h=s.tracks.find(function(_){return _.name===l.name&&_.ValueTypeName===u});if(h===void 0)continue;let f=0;const p=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);let m=0;const g=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=g/3);const v=l.times.length-1;let M;if(r<=l.times[0]){const _=f,b=p-f;M=Ti(l.values,_,b)}else if(r>=l.times[v]){const _=v*p+f,b=_+p-f;M=Ti(l.values,_,b)}else{const _=l.createInterpolant(),b=f,S=p-f;_.evaluate(r),M=Ti(_.resultBuffer,b,S)}u==="quaternion"&&new Qn().fromArray(M).normalize().conjugate().toArray(M);const y=h.times.length;for(let _=0;_<y;++_){const b=_*g+m;if(u==="quaternion")Qn.multiplyQuaternionsFlat(h.values,b,M,0,h.values,b);else{const S=g-m*2;for(let w=0;w<S;++w)h.values[b+w]-=M[w]}}}return s.blendMode=Td,s}const TL={arraySlice:Ti,convertArray:Us,isTypedArray:Zd,getKeyframeOrder:hy,sortedArray:ud,flattenJSON:Jd,subclip:EL,makeClipAdditive:wL};class xl{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let l=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===l)break;if(r=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=r)){const l=t[1];e<l&&(n=2,r=l);for(let u=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=r,r=t[--n-1],e>=r)break t}o=n,n=0;break n}break e}for(;n<o;){const l=n+o>>>1;e<t[l]?o=l:n=l+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let o=0;o!==i;++o)t[o]=n[r+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class fy extends xl{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ps,endingEnd:Ps}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,o=e+1,l=i[r],u=i[o];if(l===void 0)switch(this.getSettings_().endingStart){case Ls:r=e,l=2*t-n;break;case Xo:r=i.length-2,l=t+i[r]-i[r+1];break;default:r=e,l=n}if(u===void 0)switch(this.getSettings_().endingEnd){case Ls:o=e,u=2*n-t;break;case Xo:o=1,u=n+i[1]-i[0];break;default:o=e-1,u=t}const h=(n-t)*.5,f=this.valueSize;this._weightPrev=h/(t-l),this._weightNext=h/(u-n),this._offsetPrev=r*f,this._offsetNext=o*f}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,l=this.valueSize,u=e*l,h=u-l,f=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,g=this._weightNext,v=(n-t)/(i-t),M=v*v,y=M*v,_=-m*y+2*m*M-m*v,b=(1+m)*y+(-1.5-2*m)*M+(-.5+m)*v+1,S=(-1-g)*y+(1.5+g)*M+.5*v,w=g*y-g*M;for(let L=0;L!==l;++L)r[L]=_*o[f+L]+b*o[h+L]+S*o[u+L]+w*o[p+L];return r}}class Kd extends xl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,l=this.valueSize,u=e*l,h=u-l,f=(n-t)/(i-t),p=1-f;for(let m=0;m!==l;++m)r[m]=o[h+m]*p+o[u+m]*f;return r}}class dy extends xl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Wi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Us(t,this.TimeBufferType),this.values=Us(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Us(e.times,Array),values:Us(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new dy(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Kd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new fy(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Vo:t=this.InterpolantFactoryMethodDiscrete;break;case Wo:t=this.InterpolantFactoryMethodLinear;break;case nu:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Vo;case this.InterpolantFactoryMethodLinear:return Wo;case this.InterpolantFactoryMethodSmooth:return nu}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,o=i-1;for(;r!==i&&n[r]<e;)++r;for(;o!==-1&&n[o]>t;)--o;if(++o,r!==0||o!==i){r>=o&&(o=Math.max(o,1),r=o-1);const l=this.getValueSize();this.times=Ti(n,r,o),this.values=Ti(this.values,r*l,o*l)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let l=0;l!==r;l++){const u=n[l];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,l,u),e=!1;break}if(o!==null&&o>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,l,u,o),e=!1;break}o=u}if(i!==void 0&&Zd(i))for(let l=0,u=i.length;l!==u;++l){const h=i[l];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,h),e=!1;break}}return e}optimize(){const e=Ti(this.times),t=Ti(this.values),n=this.getValueSize(),i=this.getInterpolation()===nu,r=e.length-1;let o=1;for(let l=1;l<r;++l){let u=!1;const h=e[l],f=e[l+1];if(h!==f&&(l!==1||h!==e[0]))if(i)u=!0;else{const p=l*n,m=p-n,g=p+n;for(let v=0;v!==n;++v){const M=t[p+v];if(M!==t[m+v]||M!==t[g+v]){u=!0;break}}}if(u){if(l!==o){e[o]=e[l];const p=l*n,m=o*n;for(let g=0;g!==n;++g)t[m+g]=t[p+g]}++o}}if(r>0){e[o]=e[r];for(let l=r*n,u=o*n,h=0;h!==n;++h)t[u+h]=t[l+h];++o}return o!==e.length?(this.times=Ti(e,0,o),this.values=Ti(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=Ti(this.times,0),t=Ti(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Wi.prototype.TimeBufferType=Float32Array;Wi.prototype.ValueBufferType=Float32Array;Wi.prototype.DefaultInterpolation=Wo;class Ws extends Wi{}Ws.prototype.ValueTypeName="bool";Ws.prototype.ValueBufferType=Array;Ws.prototype.DefaultInterpolation=Vo;Ws.prototype.InterpolantFactoryMethodLinear=void 0;Ws.prototype.InterpolantFactoryMethodSmooth=void 0;class Qd extends Wi{}Qd.prototype.ValueTypeName="color";class el extends Wi{}el.prototype.ValueTypeName="number";class py extends xl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,l=this.valueSize,u=(n-t)/(i-t);let h=e*l;for(let f=h+l;h!==f;h+=4)Qn.slerpFlat(r,0,o,h-l,o,h,u);return r}}class Qa extends Wi{InterpolantFactoryMethodLinear(e){return new py(this.times,this.values,this.getValueSize(),e)}}Qa.prototype.ValueTypeName="quaternion";Qa.prototype.DefaultInterpolation=Wo;Qa.prototype.InterpolantFactoryMethodSmooth=void 0;class Xs extends Wi{}Xs.prototype.ValueTypeName="string";Xs.prototype.ValueBufferType=Array;Xs.prototype.DefaultInterpolation=Vo;Xs.prototype.InterpolantFactoryMethodLinear=void 0;Xs.prototype.InterpolantFactoryMethodSmooth=void 0;class tl extends Wi{}tl.prototype.ValueTypeName="vector";class nl{constructor(e,t=-1,n,i=mu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=di(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,l=n.length;o!==l;++o)t.push(RL(n[o]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,o=n.length;r!==o;++r)t.push(Wi.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,o=[];for(let l=0;l<r;l++){let u=[],h=[];u.push((l+r-1)%r,l,(l+1)%r),h.push(0,1,0);const f=hy(u);u=ud(u,1,f),h=ud(h,1,f),!i&&u[0]===0&&(u.push(r),h.push(h[0])),o.push(new el(".morphTargetInfluences["+t[l].name+"]",u,h).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let l=0,u=e.length;l<u;l++){const h=e[l],f=h.name.match(r);if(f&&f.length>1){const p=f[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const o=[];for(const l in i)o.push(this.CreateFromMorphTargetSequence(l,i[l],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,g,v,M){if(g.length!==0){const y=[],_=[];Jd(g,y,_,v),y.length!==0&&M.push(new p(m,y,_))}},i=[],r=e.name||"default",o=e.fps||30,l=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const g={};let v;for(v=0;v<m.length;v++)if(m[v].morphTargets)for(let M=0;M<m[v].morphTargets.length;M++)g[m[v].morphTargets[M]]=-1;for(const M in g){const y=[],_=[];for(let b=0;b!==m[v].morphTargets.length;++b){const S=m[v];y.push(S.time),_.push(S.morphTarget===M?1:0)}i.push(new el(".morphTargetInfluence["+M+"]",y,_))}u=g.length*o}else{const g=".bones["+t[p].name+"]";n(tl,g+".position",m,"pos",i),n(Qa,g+".quaternion",m,"rot",i),n(tl,g+".scale",m,"scl",i)}}return i.length===0?null:new this(r,u,i,l)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function AL(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return el;case"vector":case"vector2":case"vector3":case"vector4":return tl;case"color":return Qd;case"quaternion":return Qa;case"bool":case"boolean":return Ws;case"string":return Xs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function RL(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=AL(s.type);if(s.times===void 0){const t=[],n=[];Jd(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const Gs={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class jd{constructor(e,t,n){const i=this;let r=!1,o=0,l=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(f){l++,r===!1&&i.onStart!==void 0&&i.onStart(f,o,l),r=!0},this.itemEnd=function(f){o++,i.onProgress!==void 0&&i.onProgress(f,o,l),o===l&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(f){i.onError!==void 0&&i.onError(f)},this.resolveURL=function(f){return u?u(f):f},this.setURLModifier=function(f){return u=f,this},this.addHandler=function(f,p){return h.push(f,p),this},this.removeHandler=function(f){const p=h.indexOf(f);return p!==-1&&h.splice(p,2),this},this.getHandler=function(f){for(let p=0,m=h.length;p<m;p+=2){const g=h[p],v=h[p+1];if(g.global&&(g.lastIndex=0),g.test(f))return v}return null}}}const my=new jd;class pi{constructor(e){this.manager=e!==void 0?e:my,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Mr={};class CL extends Error{constructor(e,t){super(e),this.response=t}}class Rr extends pi{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=Gs.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(Mr[e]!==void 0){Mr[e].push({onLoad:t,onProgress:n,onError:i});return}Mr[e]=[],Mr[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),l=this.mimeType,u=this.responseType;fetch(o).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const f=Mr[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),g=m?parseInt(m):0,v=g!==0;let M=0;const y=new ReadableStream({start(_){b();function b(){p.read().then(({done:S,value:w})=>{if(S)_.close();else{M+=w.byteLength;const L=new ProgressEvent("progress",{lengthComputable:v,loaded:M,total:g});for(let T=0,C=f.length;T<C;T++){const R=f[T];R.onProgress&&R.onProgress(L)}_.enqueue(w),b()}})}}});return new Response(y)}else throw new CL(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(f=>new DOMParser().parseFromString(f,l));case"json":return h.json();default:if(l===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(l),m=p&&p[1]?p[1].toLowerCase():void 0,g=new TextDecoder(m);return h.arrayBuffer().then(v=>g.decode(v))}}}).then(h=>{Gs.add(e,h);const f=Mr[e];delete Mr[e];for(let p=0,m=f.length;p<m;p++){const g=f[p];g.onLoad&&g.onLoad(h)}}).catch(h=>{const f=Mr[e];if(f===void 0)throw this.manager.itemError(e),h;delete Mr[e];for(let p=0,m=f.length;p<m;p++){const g=f[p];g.onError&&g.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class PL extends pi{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new Rr(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){try{t(r.parse(JSON.parse(l)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=nl.parse(e[n]);t.push(i)}return t}}class LL extends pi{constructor(e){super(e)}load(e,t,n,i){const r=this,o=[],l=new Hd,u=new Rr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(r.withCredentials);let h=0;function f(p){u.load(e[p],function(m){const g=r.parse(m,!0);o[p]={width:g.width,height:g.height,format:g.format,mipmaps:g.mipmaps},h+=1,h===6&&(g.mipmapCount===1&&(l.minFilter=hn),l.image=o,l.format=g.format,l.needsUpdate=!0,t&&t(l))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)f(p);else u.load(e,function(p){const m=r.parse(p,!0);if(m.isCubemap){const g=m.mipmaps.length/m.mipmapCount;for(let v=0;v<g;v++){o[v]={mipmaps:[]};for(let M=0;M<m.mipmapCount;M++)o[v].mipmaps.push(m.mipmaps[v*m.mipmapCount+M]),o[v].format=m.format,o[v].width=m.width,o[v].height=m.height}l.image=o}else l.image.width=m.width,l.image.height=m.height,l.mipmaps=m.mipmaps;m.mipmapCount===1&&(l.minFilter=hn),l.format=m.format,l.needsUpdate=!0,t&&t(l)},n,i);return l}}class il extends pi{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Gs.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const l=Zo("img");function u(){f(),Gs.add(e,this),t&&t(this),r.manager.itemEnd(e)}function h(p){f(),i&&i(p),r.manager.itemError(e),r.manager.itemEnd(e)}function f(){l.removeEventListener("load",u,!1),l.removeEventListener("error",h,!1)}return l.addEventListener("load",u,!1),l.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(l.crossOrigin=this.crossOrigin),r.manager.itemStart(e),l.src=e,l}}class IL extends pi{constructor(e){super(e)}load(e,t,n,i){const r=new ol;r.colorSpace=mt;const o=new il(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let l=0;function u(h){o.load(e[h],function(f){r.images[h]=f,l++,l===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return r}}class UL extends pi{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new za,l=new Rr(this.manager);return l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setPath(this.path),l.setWithCredentials(r.withCredentials),l.load(e,function(u){const h=r.parse(u);h&&(h.image!==void 0?o.image=h.image:h.data!==void 0&&(o.image.width=h.width,o.image.height=h.height,o.image.data=h.data),o.wrapS=h.wrapS!==void 0?h.wrapS:Dn,o.wrapT=h.wrapT!==void 0?h.wrapT:Dn,o.magFilter=h.magFilter!==void 0?h.magFilter:hn,o.minFilter=h.minFilter!==void 0?h.minFilter:hn,o.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0?o.colorSpace=h.colorSpace:h.encoding!==void 0&&(o.encoding=h.encoding),h.flipY!==void 0&&(o.flipY=h.flipY),h.format!==void 0&&(o.format=h.format),h.type!==void 0&&(o.type=h.type),h.mipmaps!==void 0&&(o.mipmaps=h.mipmaps,o.minFilter=jr),h.mipmapCount===1&&(o.minFilter=hn),h.generateMipmaps!==void 0&&(o.generateMipmaps=h.generateMipmaps),o.needsUpdate=!0,t&&t(o,h))},n,i),o}}class DL extends pi{constructor(e){super(e)}load(e,t,n,i){const r=new fn,o=new il(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(l){r.image=l,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class os extends Pt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Le(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class gy extends os{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Pt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Le(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Mf=new ot,F_=new N,B_=new N;class ep{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new fe(512,512),this.map=null,this.mapPass=null,this.matrix=new ot,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new yu,this._frameExtents=new fe(1,1),this._viewportCount=1,this._viewports=[new zt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;F_.setFromMatrixPosition(e.matrixWorld),t.position.copy(F_),B_.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(B_),t.updateMatrixWorld(),Mf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Mf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Mf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class OL extends ep{constructor(){super(new En(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Ha*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class _y extends os{constructor(e,t,n=0,i=Math.PI/3,r=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Pt.DEFAULT_UP),this.updateMatrix(),this.target=new Pt,this.distance=n,this.angle=i,this.penumbra=r,this.decay=o,this.map=null,this.shadow=new OL}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const z_=new ot,Co=new N,Sf=new N;class NL extends ep{constructor(){super(new En(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new fe(4,2),this._viewportCount=6,this._viewports=[new zt(2,1,1,1),new zt(0,1,1,1),new zt(3,1,1,1),new zt(1,1,1,1),new zt(3,0,1,1),new zt(1,0,1,1)],this._cubeDirections=[new N(1,0,0),new N(-1,0,0),new N(0,0,1),new N(0,0,-1),new N(0,1,0),new N(0,-1,0)],this._cubeUps=[new N(0,1,0),new N(0,1,0),new N(0,1,0),new N(0,1,0),new N(0,0,1),new N(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Co.setFromMatrixPosition(e.matrixWorld),n.position.copy(Co),Sf.copy(n.position),Sf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Sf),n.updateMatrixWorld(),i.makeTranslation(-Co.x,-Co.y,-Co.z),z_.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(z_)}}class vy extends os{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new NL}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class FL extends ep{constructor(){super(new xu(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class yy extends os{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Pt.DEFAULT_UP),this.updateMatrix(),this.target=new Pt,this.shadow=new FL}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class xy extends os{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class My extends os{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Sy{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new N)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*r),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*r)),t.addScaledVector(o[6],.315392*(3*r*r-1)),t.addScaledVector(o[7],1.092548*(n*r)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*r),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*r),t.addScaledVector(o[6],.743125*r*r-.247708),t.addScaledVector(o[7],2*.429043*n*r),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class Pu extends os{constructor(e=new Sy,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Lu extends pi{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,o=new Rr(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(l){try{t(r.parse(JSON.parse(l)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=Lu.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Le().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const o=e.uniforms[r];switch(i.uniforms[r]={},o.type){case"t":i.uniforms[r].value=n(o.value);break;case"c":i.uniforms[r].value=new Le().setHex(o.value);break;case"v2":i.uniforms[r].value=new fe().fromArray(o.value);break;case"v3":i.uniforms[r].value=new N().fromArray(o.value);break;case"v4":i.uniforms[r].value=new zt().fromArray(o.value);break;case"m3":i.uniforms[r].value=new xt().fromArray(o.value);break;case"m4":i.uniforms[r].value=new ot().fromArray(o.value);break;default:i.uniforms[r].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new fe().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new fe().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:iy,SpriteMaterial:Bd,RawShaderMaterial:ry,ShaderMaterial:tr,PointsMaterial:kd,MeshPhysicalMaterial:Cu,MeshStandardMaterial:Yd,MeshPhongMaterial:sy,MeshToonMaterial:ay,MeshNormalMaterial:oy,MeshLambertMaterial:ly,MeshDepthMaterial:Dd,MeshDistanceMaterial:Od,MeshBasicMaterial:Pr,MeshMatcapMaterial:cy,LineDashedMaterial:uy,LineBasicMaterial:Wn,Material:Fn};return new t[e]}}class hd{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class by extends Et{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Ey extends pi{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new Rr(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(l){try{t(r.parse(JSON.parse(l)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(g,v){if(t[v]!==void 0)return t[v];const y=g.interleavedBuffers[v],_=r(g,y.buffer),b=Da(y.type,_),S=new Eu(b,y.stride);return S.uuid=y.uuid,t[v]=S,S}function r(g,v){if(n[v]!==void 0)return n[v];const y=g.arrayBuffers[v],_=new Uint32Array(y).buffer;return n[v]=_,_}const o=e.isInstancedBufferGeometry?new by:new Et,l=e.data.index;if(l!==void 0){const g=Da(l.type,l.array);o.setIndex(new Wt(g,1))}const u=e.data.attributes;for(const g in u){const v=u[g];let M;if(v.isInterleavedBufferAttribute){const y=i(e.data,v.data);M=new ks(y,v.itemSize,v.offset,v.normalized)}else{const y=Da(v.type,v.array),_=v.isInstancedBufferAttribute?Va:Wt;M=new _(y,v.itemSize,v.normalized)}v.name!==void 0&&(M.name=v.name),v.usage!==void 0&&M.setUsage(v.usage),v.updateRange!==void 0&&(M.updateRange.offset=v.updateRange.offset,M.updateRange.count=v.updateRange.count),o.setAttribute(g,M)}const h=e.data.morphAttributes;if(h)for(const g in h){const v=h[g],M=[];for(let y=0,_=v.length;y<_;y++){const b=v[y];let S;if(b.isInterleavedBufferAttribute){const w=i(e.data,b.data);S=new ks(w,b.itemSize,b.offset,b.normalized)}else{const w=Da(b.type,b.array);S=new Wt(w,b.itemSize,b.normalized)}b.name!==void 0&&(S.name=b.name),M.push(S)}o.morphAttributes[g]=M}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let g=0,v=p.length;g!==v;++g){const M=p[g];o.addGroup(M.start,M.count,M.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const g=new N;m.center!==void 0&&g.fromArray(m.center),o.boundingSphere=new Gi(g,m.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class BL extends pi{constructor(e){super(e)}load(e,t,n,i){const r=this,o=this.path===""?hd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const l=new Rr(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const f=h.metadata;if(f===void 0||f.type===void 0||f.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?hd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new Rr(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const o=await r.loadAsync(e,t),l=JSON.parse(o),u=l.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(l)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(h)}),l=this.parseTextures(e.textures,o),u=this.parseMaterials(e.materials,l),h=this.parseObject(e.object,r,u,l,n),f=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,f),t!==void 0){let p=!1;for(const m in o)if(o[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,r),l=this.parseMaterials(e.materials,o),u=this.parseObject(e.object,i,l,o,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new Bs().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,o=e.length;r<o;r++){const l=new wu().fromJSON(e[r],i);n[l.uuid]=l}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new Ey;for(let r=0,o=e.length;r<o;r++){let l;const u=e[r];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":l=i.parse(u);break;default:u.type in N_?l=N_[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}l.uuid=u.uuid,u.name!==void 0&&(l.name=u.name),u.userData!==void 0&&(l.userData=u.userData),n[u.uuid]=l}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new Lu;r.setTextures(t);for(let o=0,l=e.length;o<l;o++){const u=e[o];n[u.uuid]===void 0&&(n[u.uuid]=r.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=nl.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function o(u){return n.manager.itemStart(u),r.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function l(u){if(typeof u=="string"){const h=u,f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return o(f)}else return u.data?{data:Da(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new jd(t);r=new il(u),r.setCrossOrigin(this.crossOrigin);for(let h=0,f=e.length;h<f;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const g=[];for(let v=0,M=m.length;v<M;v++){const y=m[v],_=l(y);_!==null&&(_ instanceof HTMLImageElement?g.push(_):g.push(new za(_.data,_.width,_.height)))}i[p.uuid]=new Is(g)}else{const g=l(p.url);i[p.uuid]=new Is(g)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(o){if(typeof o=="string"){const l=o,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l)?l:t.resourcePath+l;return await i.loadAsync(u)}else return o.data?{data:Da(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new il(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,l=e.length;o<l;o++){const u=e[o],h=u.url;if(Array.isArray(h)){const f=[];for(let p=0,m=h.length;p<m;p++){const g=h[p],v=await r(g);v!==null&&(v instanceof HTMLImageElement?f.push(v):f.push(new za(v.data,v.width,v.height)))}n[u.uuid]=new Is(f)}else{const f=await r(u.url);n[u.uuid]=new Is(f)}}}return n}parseTextures(e,t){function n(r,o){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),o[r])}const i={};if(e!==void 0)for(let r=0,o=e.length;r<o;r++){const l=e[r];l.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',l.uuid),t[l.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",l.image);const u=t[l.image],h=u.data;let f;Array.isArray(h)?(f=new ol,h.length===6&&(f.needsUpdate=!0)):(h&&h.data?f=new za:f=new fn,h&&(f.needsUpdate=!0)),f.source=u,f.uuid=l.uuid,l.name!==void 0&&(f.name=l.name),l.mapping!==void 0&&(f.mapping=n(l.mapping,zL)),l.channel!==void 0&&(f.channel=l.channel),l.offset!==void 0&&f.offset.fromArray(l.offset),l.repeat!==void 0&&f.repeat.fromArray(l.repeat),l.center!==void 0&&f.center.fromArray(l.center),l.rotation!==void 0&&(f.rotation=l.rotation),l.wrap!==void 0&&(f.wrapS=n(l.wrap[0],k_),f.wrapT=n(l.wrap[1],k_)),l.format!==void 0&&(f.format=l.format),l.internalFormat!==void 0&&(f.internalFormat=l.internalFormat),l.type!==void 0&&(f.type=l.type),l.colorSpace!==void 0&&(f.colorSpace=l.colorSpace),l.encoding!==void 0&&(f.encoding=l.encoding),l.minFilter!==void 0&&(f.minFilter=n(l.minFilter,H_)),l.magFilter!==void 0&&(f.magFilter=n(l.magFilter,H_)),l.anisotropy!==void 0&&(f.anisotropy=l.anisotropy),l.flipY!==void 0&&(f.flipY=l.flipY),l.generateMipmaps!==void 0&&(f.generateMipmaps=l.generateMipmaps),l.premultiplyAlpha!==void 0&&(f.premultiplyAlpha=l.premultiplyAlpha),l.unpackAlignment!==void 0&&(f.unpackAlignment=l.unpackAlignment),l.compareFunction!==void 0&&(f.compareFunction=l.compareFunction),l.userData!==void 0&&(f.userData=l.userData),i[l.uuid]=f}return i}parseObject(e,t,n,i,r){let o;function l(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const g=[];for(let v=0,M=m.length;v<M;v++){const y=m[v];n[y]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",y),g.push(n[y])}return g}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let f,p;switch(e.type){case"Scene":o=new Fd,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new Le(e.background):o.background=h(e.background)),e.environment!==void 0&&(o.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new bu(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Su(e.fog.color,e.fog.density))),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":o=new En(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new xu(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new xy(e.color,e.intensity);break;case"DirectionalLight":o=new yy(e.color,e.intensity);break;case"PointLight":o=new vy(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new My(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new _y(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new gy(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new Pu().fromJSON(e);break;case"SkinnedMesh":f=l(e.geometry),p=u(e.material),o=new Vv(f,p),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":f=l(e.geometry),p=u(e.material),o=new wn(f,p);break;case"InstancedMesh":f=l(e.geometry),p=u(e.material);const m=e.count,g=e.instanceMatrix,v=e.instanceColor;o=new Wv(f,p,m),o.instanceMatrix=new Va(new Float32Array(g.array),16),v!==void 0&&(o.instanceColor=new Va(new Float32Array(v.array),v.itemSize));break;case"LOD":o=new Gv;break;case"Line":o=new es(l(e.geometry),u(e.material));break;case"LineLoop":o=new Xv(l(e.geometry),u(e.material));break;case"LineSegments":o=new ir(l(e.geometry),u(e.material));break;case"PointCloud":case"Points":o=new $v(l(e.geometry),u(e.material));break;case"Sprite":o=new Hv(u(e.material));break;case"Group":o=new Na;break;case"Bone":o=new zd;break;default:o=new Pt}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let g=0;g<m.length;g++)o.add(this.parseObject(m[g],t,n,i,r))}if(e.animations!==void 0){const m=e.animations;for(let g=0;g<m.length;g++){const v=m[g];o.animations.push(r[v])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const m=e.levels;for(let g=0;g<m.length;g++){const v=m[g],M=o.getObjectByProperty("uuid",v.object);M!==void 0&&o.addLevel(M,v.distance,v.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const zL={UVMapping:du,CubeReflectionMapping:Kr,CubeRefractionMapping:Qr,EquirectangularReflectionMapping:zo,EquirectangularRefractionMapping:ko,CubeUVReflectionMapping:Xa},k_={RepeatWrapping:Ho,ClampToEdgeWrapping:Dn,MirroredRepeatWrapping:Go},H_={NearestFilter:un,NearestMipmapNearestFilter:ou,NearestMipmapLinearFilter:Do,LinearFilter:hn,LinearMipmapNearestFilter:yd,LinearMipmapLinearFilter:jr};class kL extends pi{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Gs.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const l={};l.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",l.headers=this.requestHeader,fetch(e,l).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(u){Gs.add(e,u),t&&t(u),r.manager.itemEnd(e)}).catch(function(u){i&&i(u),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}let Vc;class tp{static getContext(){return Vc===void 0&&(Vc=new(window.AudioContext||window.webkitAudioContext)),Vc}static setContext(e){Vc=e}}class HL extends pi{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new Rr(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(u){try{const h=u.slice(0);tp.getContext().decodeAudioData(h,function(p){t(p)},l)}catch(h){l(h)}},n,i);function l(u){i?i(u):console.error(u),r.manager.itemError(e)}}}class GL extends Pu{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new Le().set(e),r=new Le().set(t),o=new N(i.r,i.g,i.b),l=new N(r.r,r.g,r.b),u=Math.sqrt(Math.PI),h=u*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(l).multiplyScalar(u),this.sh.coefficients[1].copy(o).sub(l).multiplyScalar(h)}}class VL extends Pu{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new Le().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const G_=new ot,V_=new ot,Ss=new ot;class WL{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new En,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new En,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Ss.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,o=t.near*Math.tan(Fs*t.fov*.5)/t.zoom;let l,u;V_.elements[12]=-i,G_.elements[12]=i,l=-o*t.aspect+r,u=o*t.aspect+r,Ss.elements[0]=2*t.near/(u-l),Ss.elements[8]=(u+l)/(u-l),this.cameraL.projectionMatrix.copy(Ss),l=-o*t.aspect-r,u=o*t.aspect-r,Ss.elements[0]=2*t.near/(u-l),Ss.elements[8]=(u+l)/(u-l),this.cameraR.projectionMatrix.copy(Ss)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(V_),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(G_)}}class np{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=W_(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=W_();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function W_(){return(typeof performance>"u"?Date:performance).now()}const bs=new N,X_=new Qn,XL=new N,Es=new N;class $L extends Pt{constructor(){super(),this.type="AudioListener",this.context=tp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new np}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(bs,X_,XL),Es.set(0,0,-1).applyQuaternion(X_),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(bs.x,i),t.positionY.linearRampToValueAtTime(bs.y,i),t.positionZ.linearRampToValueAtTime(bs.z,i),t.forwardX.linearRampToValueAtTime(Es.x,i),t.forwardY.linearRampToValueAtTime(Es.y,i),t.forwardZ.linearRampToValueAtTime(Es.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(bs.x,bs.y,bs.z),t.setOrientation(Es.x,Es.y,Es.z,n.x,n.y,n.z)}}class wy extends Pt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const ws=new N,$_=new Qn,qL=new N,Ts=new N;class YL extends wy{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ws,$_,qL),Ts.set(0,0,1).applyQuaternion($_);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ws.x,n),t.positionY.linearRampToValueAtTime(ws.y,n),t.positionZ.linearRampToValueAtTime(ws.z,n),t.orientationX.linearRampToValueAtTime(Ts.x,n),t.orientationY.linearRampToValueAtTime(Ts.y,n),t.orientationZ.linearRampToValueAtTime(Ts.z,n)}else t.setPosition(ws.x,ws.y,ws.z),t.setOrientation(Ts.x,Ts.y,Ts.z)}}class ZL{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class Ty{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,o;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let l=0;l!==i;++l)n[r+l]=n[l];o=t}else{o+=t;const l=t/o;this._mixBufferRegion(n,r,0,l,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,o=this.cumulativeWeightAdditive,l=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-r,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){l.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,o=i;r!==o;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let o=0;o!==r;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){Qn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const o=this._workIndex*r;Qn.multiplyQuaternionsFlat(e,o,e,t,e,n),Qn.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,r){const o=1-i;for(let l=0;l!==r;++l){const u=t+l;e[u]=e[u]*o+e[n+l]*i}}_lerpAdditive(e,t,n,i,r){for(let o=0;o!==r;++o){const l=t+o;e[l]=e[l]+e[n+o]*i}}}const ip="\\[\\]\\.:\\/",JL=new RegExp("["+ip+"]","g"),rp="[^"+ip+"]",KL="[^"+ip.replace("\\.","")+"]",QL=/((?:WC+[\/:])*)/.source.replace("WC",rp),jL=/(WCOD+)?/.source.replace("WCOD",KL),eI=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",rp),tI=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",rp),nI=new RegExp("^"+QL+jL+eI+tI+"$"),iI=["material","materials","bones","map"];class rI{constructor(e,t,n){const i=n||Lt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Lt{constructor(e,t,n){this.path=t,this.parsedPath=n||Lt.parseTrackName(t),this.node=Lt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Lt.Composite(e,t,n):new Lt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(JL,"")}static parseTrackName(e){const t=nI.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);iI.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let o=0;o<r.length;o++){const l=r[o];if(l.name===t||l.uuid===t)return l;const u=n(l.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=Lt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let f=0;f<e.length;f++)if(e[f].name===h){h=f;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const o=e[i];if(o===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let l=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?l=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(l=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}u=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(u=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][l]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Lt.Composite=rI;Lt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Lt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Lt.prototype.GetterByBindingType=[Lt.prototype._getValue_direct,Lt.prototype._getValue_array,Lt.prototype._getValue_arrayElement,Lt.prototype._getValue_toArray];Lt.prototype.SetterByBindingTypeAndVersioning=[[Lt.prototype._setValue_direct,Lt.prototype._setValue_direct_setNeedsUpdate,Lt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Lt.prototype._setValue_array,Lt.prototype._setValue_array_setNeedsUpdate,Lt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Lt.prototype._setValue_arrayElement,Lt.prototype._setValue_arrayElement_setNeedsUpdate,Lt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Lt.prototype._setValue_fromArray,Lt.prototype._setValue_fromArray_setNeedsUpdate,Lt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class sI{constructor(){this.isAnimationObjectGroup=!0,this.uuid=di(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,o=r.length;let l,u=e.length,h=this.nCachedObjects_;for(let f=0,p=arguments.length;f!==p;++f){const m=arguments[f],g=m.uuid;let v=t[g];if(v===void 0){v=u++,t[g]=v,e.push(m);for(let M=0,y=o;M!==y;++M)r[M].push(new Lt(m,n[M],i[M]))}else if(v<h){l=e[v];const M=--h,y=e[M];t[y.uuid]=v,e[v]=y,t[g]=M,e[M]=m;for(let _=0,b=o;_!==b;++_){const S=r[_],w=S[M];let L=S[v];S[v]=w,L===void 0&&(L=new Lt(m,n[_],i[_])),S[M]=L}}else e[v]!==l&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let o=0,l=arguments.length;o!==l;++o){const u=arguments[o],h=u.uuid,f=t[h];if(f!==void 0&&f>=r){const p=r++,m=e[p];t[m.uuid]=f,e[f]=m,t[h]=p,e[p]=u;for(let g=0,v=i;g!==v;++g){const M=n[g],y=M[p],_=M[f];M[f]=y,M[p]=_}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,o=e.length;for(let l=0,u=arguments.length;l!==u;++l){const h=arguments[l],f=h.uuid,p=t[f];if(p!==void 0)if(delete t[f],p<r){const m=--r,g=e[m],v=--o,M=e[v];t[g.uuid]=p,e[p]=g,t[M.uuid]=m,e[m]=M,e.pop();for(let y=0,_=i;y!==_;++y){const b=n[y],S=b[m],w=b[v];b[p]=S,b[m]=w,b.pop()}}else{const m=--o,g=e[m];m>0&&(t[g.uuid]=p),e[p]=g,e.pop();for(let v=0,M=i;v!==M;++v){const y=n[v];y[p]=y[m],y.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const o=this._paths,l=this._parsedPaths,u=this._objects,h=u.length,f=this.nCachedObjects_,p=new Array(h);i=r.length,n[e]=i,o.push(e),l.push(t),r.push(p);for(let m=f,g=u.length;m!==g;++m){const v=u[m];p[m]=new Lt(v,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,o=this._bindings,l=o.length-1,u=o[l],h=e[l];t[h]=n,o[n]=u,o.pop(),r[n]=r[l],r.pop(),i[n]=i[l],i.pop()}}}class Ay{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,o=r.length,l=new Array(o),u={endingStart:Ps,endingEnd:Ps};for(let h=0;h!==o;++h){const f=r[h].createInterpolant(null);l[h]=f,f.settings=u}this._interpolantSettings=u,this._interpolants=l,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=uv,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,o=r/i,l=i/r;e.warp(1,o,t),this.warp(l,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,o=this.timeScale;let l=this._timeScaleInterpolant;l===null&&(l=i._lendControlInterpolant(),this._timeScaleInterpolant=l);const u=l.parameterPositions,h=l.sampleValues;return u[0]=r,u[1]=r+n,h[0]=e/o,h[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const u=(e-r)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const o=this._updateTime(t),l=this._updateWeight(e);if(l>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Td:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(o),h[f].accumulateAdditive(l);break;case mu:default:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(o),h[f].accumulate(i,l)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const o=n===hv;if(e===0)return r===-1?i:o&&(r&1)===1?t-i:i;if(n===cv){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const l=Math.floor(i/t);i-=t*l,r+=Math.abs(l);const u=this.repetitions-r;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:l})}}else this.time=i;if(o&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Ls,i.endingEnd=Ls):(e?i.endingStart=this.zeroSlopeAtStart?Ls:Ps:i.endingStart=Xo,t?i.endingEnd=this.zeroSlopeAtEnd?Ls:Ps:i.endingEnd=Xo)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const l=o.parameterPositions,u=o.sampleValues;return l[0]=r,u[0]=t,l[1]=r+e,u[1]=n,this}}const aI=new Float32Array(1);class oI extends Cr{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,o=e._propertyBindings,l=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let f=h[u];f===void 0&&(f={},h[u]=f);for(let p=0;p!==r;++p){const m=i[p],g=m.name;let v=f[g];if(v!==void 0)++v.referenceCount,o[p]=v;else{if(v=o[p],v!==void 0){v._cacheIndex===null&&(++v.referenceCount,this._addInactiveBinding(v,u,g));continue}const M=t&&t._propertyBindings[p].binding.parsedPath;v=new Ty(Lt.create(n,g,M),m.ValueTypeName,m.getValueSize()),++v.referenceCount,this._addInactiveBinding(v,u,g),o[p]=v}l[p].resultBuffer=v.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let o=r[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=o;else{const l=o.knownActions;e._byClipCacheIndex=l.length,l.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,o=this._actionsByClip,l=o[r],u=l.knownActions,h=u[u.length-1],f=e._byClipCacheIndex;h._byClipCacheIndex=f,u[f]=h,u.pop(),e._byClipCacheIndex=null;const p=l.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete o[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,o=this._bindingsByRootAndName,l=o[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete l[r],Object.keys(l).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Kd(new Float32Array(2),new Float32Array(2),1,aI),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let o=typeof e=="string"?nl.findByName(i,e):e;const l=o!==null?o.uuid:e,u=this._actionsByClip[l];let h=null;if(n===void 0&&(o!==null?n=o.blendMode:n=mu),u!==void 0){const p=u.actionByRoot[r];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],o===null&&(o=h._clip)}if(o===null)return null;const f=new Ay(this,o,t,n);return this._bindAction(f,h),this._addInactiveAction(f,l,r),f}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?nl.findByName(n,e):e,o=r?r.uuid:e,l=this._actionsByClip[o];return l!==void 0&&l.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),o=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,r,o);const l=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)l[h].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const o=r.knownActions;for(let l=0,u=o.length;l!==u;++l){const h=o[l];this._deactivateAction(h);const f=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=f,t[f]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const l=n[o].actionByRoot,u=l[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const o in r){const l=r[o];l.restoreOriginalState(),this._removeInactiveBinding(l)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class sp{constructor(e){this.value=e}clone(){return new sp(this.value.clone===void 0?this.value:this.value.clone())}}let lI=0;class cI extends Cr{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:lI++}),this.name="",this.usage=qo,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class uI extends Eu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class hI{constructor(e,t,n,i,r){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class Ry{constructor(e,t,n=0,i=1/0){this.ray=new $a(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new _u,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return fd(e,this,n,t),n.sort(q_),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)fd(e[i],this,n,t);return n.sort(q_),n}}function q_(s,e){return s.distance-e.distance}function fd(s,e,t,n){if(s.layers.test(e.layers)&&s.raycast(e,t),n===!0){const i=s.children;for(let r=0,o=i.length;r<o;r++)fd(i[r],e,t,!0)}}class fI{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(an(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class dI{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const Y_=new fe;class pI{constructor(e=new fe(1/0,1/0),t=new fe(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Y_.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Y_).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Z_=new N,Wc=new N;class mI{constructor(e=new N,t=new N){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Z_.subVectors(e,this.start),Wc.subVectors(this.end,this.start);const n=Wc.dot(Wc);let r=Wc.dot(Z_)/n;return t&&(r=an(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const J_=new N;class gI extends Pt{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new Et,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,l=1,u=32;o<u;o++,l++){const h=o/u*Math.PI*2,f=l/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(f),Math.sin(f),1)}n.setAttribute("position",new Ve(i,3));const r=new Wn({fog:!1,toneMapped:!1});this.cone=new ir(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),J_.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(J_),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const $r=new N,Xc=new ot,bf=new ot;class _I extends ir{constructor(e){const t=Cy(e),n=new Et,i=[],r=[],o=new Le(0,0,1),l=new Le(0,1,0);for(let h=0;h<t.length;h++){const f=t[h];f.parent&&f.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(o.r,o.g,o.b),r.push(l.r,l.g,l.b))}n.setAttribute("position",new Ve(i,3)),n.setAttribute("color",new Ve(r,3));const u=new Wn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");bf.copy(this.root.matrixWorld).invert();for(let r=0,o=0;r<t.length;r++){const l=t[r];l.parent&&l.parent.isBone&&(Xc.multiplyMatrices(bf,l.matrixWorld),$r.setFromMatrixPosition(Xc),i.setXYZ(o,$r.x,$r.y,$r.z),Xc.multiplyMatrices(bf,l.parent.matrixWorld),$r.setFromMatrixPosition(Xc),i.setXYZ(o+1,$r.x,$r.y,$r.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Cy(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push.apply(e,Cy(s.children[t]));return e}class vI extends wn{constructor(e,t,n){const i=new Ka(t,4,2),r=new Pr({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const yI=new N,K_=new Le,Q_=new Le;class xI extends Pt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Ja(t);i.rotateY(Math.PI*.5),this.material=new Pr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),o=new Float32Array(r.count*3);i.setAttribute("color",new Wt(o,3)),this.add(new wn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");K_.copy(this.light.color),Q_.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?K_:Q_;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(yI.setFromMatrixPosition(this.light.matrixWorld).negate())}}class MI extends ir{constructor(e=10,t=10,n=4473924,i=8947848){n=new Le(n),i=new Le(i);const r=t/2,o=e/t,l=e/2,u=[],h=[];for(let m=0,g=0,v=-l;m<=t;m++,v+=o){u.push(-l,0,v,l,0,v),u.push(v,0,-l,v,0,l);const M=m===r?n:i;M.toArray(h,g),g+=3,M.toArray(h,g),g+=3,M.toArray(h,g),g+=3,M.toArray(h,g),g+=3}const f=new Et;f.setAttribute("position",new Ve(u,3)),f.setAttribute("color",new Ve(h,3));const p=new Wn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class SI extends ir{constructor(e=10,t=16,n=8,i=64,r=4473924,o=8947848){r=new Le(r),o=new Le(o);const l=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),g=Math.sin(m)*e,v=Math.cos(m)*e;l.push(0,0,0),l.push(g,0,v);const M=p&1?r:o;u.push(M.r,M.g,M.b),u.push(M.r,M.g,M.b)}for(let p=0;p<n;p++){const m=p&1?r:o,g=e-e/n*p;for(let v=0;v<i;v++){let M=v/i*(Math.PI*2),y=Math.sin(M)*g,_=Math.cos(M)*g;l.push(y,0,_),u.push(m.r,m.g,m.b),M=(v+1)/i*(Math.PI*2),y=Math.sin(M)*g,_=Math.cos(M)*g,l.push(y,0,_),u.push(m.r,m.g,m.b)}}const h=new Et;h.setAttribute("position",new Ve(l,3)),h.setAttribute("color",new Ve(u,3));const f=new Wn({vertexColors:!0,toneMapped:!1});super(h,f),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const j_=new N,$c=new N,e0=new N;class bI extends Pt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new Et;i.setAttribute("position",new Ve([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new Wn({fog:!1,toneMapped:!1});this.lightPlane=new es(i,r),this.add(this.lightPlane),i=new Et,i.setAttribute("position",new Ve([0,0,0,0,0,1],3)),this.targetLine=new es(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),j_.setFromMatrixPosition(this.light.matrixWorld),$c.setFromMatrixPosition(this.light.target.matrixWorld),e0.subVectors($c,j_),this.lightPlane.lookAt($c),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt($c),this.targetLine.scale.z=e0.length()}}const qc=new N,sn=new vu;class EI extends ir{constructor(e){const t=new Et,n=new Wn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],o={};l("n1","n2"),l("n2","n4"),l("n4","n3"),l("n3","n1"),l("f1","f2"),l("f2","f4"),l("f4","f3"),l("f3","f1"),l("n1","f1"),l("n2","f2"),l("n3","f3"),l("n4","f4"),l("p","n1"),l("p","n2"),l("p","n3"),l("p","n4"),l("u1","u2"),l("u2","u3"),l("u3","u1"),l("c","t"),l("p","c"),l("cn1","cn2"),l("cn3","cn4"),l("cf1","cf2"),l("cf3","cf4");function l(v,M){u(v),u(M)}function u(v){i.push(0,0,0),r.push(0,0,0),o[v]===void 0&&(o[v]=[]),o[v].push(i.length/3-1)}t.setAttribute("position",new Ve(i,3)),t.setAttribute("color",new Ve(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const h=new Le(16755200),f=new Le(16711680),p=new Le(43775),m=new Le(16777215),g=new Le(3355443);this.setColors(h,f,p,m,g)}setColors(e,t,n,i,r){const l=this.geometry.getAttribute("color");l.setXYZ(0,e.r,e.g,e.b),l.setXYZ(1,e.r,e.g,e.b),l.setXYZ(2,e.r,e.g,e.b),l.setXYZ(3,e.r,e.g,e.b),l.setXYZ(4,e.r,e.g,e.b),l.setXYZ(5,e.r,e.g,e.b),l.setXYZ(6,e.r,e.g,e.b),l.setXYZ(7,e.r,e.g,e.b),l.setXYZ(8,e.r,e.g,e.b),l.setXYZ(9,e.r,e.g,e.b),l.setXYZ(10,e.r,e.g,e.b),l.setXYZ(11,e.r,e.g,e.b),l.setXYZ(12,e.r,e.g,e.b),l.setXYZ(13,e.r,e.g,e.b),l.setXYZ(14,e.r,e.g,e.b),l.setXYZ(15,e.r,e.g,e.b),l.setXYZ(16,e.r,e.g,e.b),l.setXYZ(17,e.r,e.g,e.b),l.setXYZ(18,e.r,e.g,e.b),l.setXYZ(19,e.r,e.g,e.b),l.setXYZ(20,e.r,e.g,e.b),l.setXYZ(21,e.r,e.g,e.b),l.setXYZ(22,e.r,e.g,e.b),l.setXYZ(23,e.r,e.g,e.b),l.setXYZ(24,t.r,t.g,t.b),l.setXYZ(25,t.r,t.g,t.b),l.setXYZ(26,t.r,t.g,t.b),l.setXYZ(27,t.r,t.g,t.b),l.setXYZ(28,t.r,t.g,t.b),l.setXYZ(29,t.r,t.g,t.b),l.setXYZ(30,t.r,t.g,t.b),l.setXYZ(31,t.r,t.g,t.b),l.setXYZ(32,n.r,n.g,n.b),l.setXYZ(33,n.r,n.g,n.b),l.setXYZ(34,n.r,n.g,n.b),l.setXYZ(35,n.r,n.g,n.b),l.setXYZ(36,n.r,n.g,n.b),l.setXYZ(37,n.r,n.g,n.b),l.setXYZ(38,i.r,i.g,i.b),l.setXYZ(39,i.r,i.g,i.b),l.setXYZ(40,r.r,r.g,r.b),l.setXYZ(41,r.r,r.g,r.b),l.setXYZ(42,r.r,r.g,r.b),l.setXYZ(43,r.r,r.g,r.b),l.setXYZ(44,r.r,r.g,r.b),l.setXYZ(45,r.r,r.g,r.b),l.setXYZ(46,r.r,r.g,r.b),l.setXYZ(47,r.r,r.g,r.b),l.setXYZ(48,r.r,r.g,r.b),l.setXYZ(49,r.r,r.g,r.b),l.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;sn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),cn("c",t,e,sn,0,0,-1),cn("t",t,e,sn,0,0,1),cn("n1",t,e,sn,-n,-i,-1),cn("n2",t,e,sn,n,-i,-1),cn("n3",t,e,sn,-n,i,-1),cn("n4",t,e,sn,n,i,-1),cn("f1",t,e,sn,-n,-i,1),cn("f2",t,e,sn,n,-i,1),cn("f3",t,e,sn,-n,i,1),cn("f4",t,e,sn,n,i,1),cn("u1",t,e,sn,n*.7,i*1.1,-1),cn("u2",t,e,sn,-n*.7,i*1.1,-1),cn("u3",t,e,sn,0,i*2,-1),cn("cf1",t,e,sn,-n,0,1),cn("cf2",t,e,sn,n,0,1),cn("cf3",t,e,sn,0,-i,1),cn("cf4",t,e,sn,0,i,1),cn("cn1",t,e,sn,-n,0,-1),cn("cn2",t,e,sn,n,0,-1),cn("cn3",t,e,sn,0,-i,-1),cn("cn4",t,e,sn,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function cn(s,e,t,n,i,r,o){qc.set(i,r,o).unproject(n);const l=e[s];if(l!==void 0){const u=t.getAttribute("position");for(let h=0,f=l.length;h<f;h++)u.setXYZ(l[h],qc.x,qc.y,qc.z)}}const Yc=new nr;class wI extends ir{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new Et;r.setIndex(new Wt(n,1)),r.setAttribute("position",new Wt(i,3)),super(r,new Wn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Yc.setFromObject(this.object),Yc.isEmpty())return;const t=Yc.min,n=Yc.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class TI extends ir{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new Et;r.setIndex(new Wt(n,1)),r.setAttribute("position",new Ve(i,3)),super(r,new Wn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class AI extends es{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new Et;o.setAttribute("position",new Ve(r,3)),o.computeBoundingSphere(),super(o,new Wn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const l=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new Et;u.setAttribute("position",new Ve(l,3)),u.computeBoundingSphere(),this.add(new wn(u,new Pr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const t0=new N;let Zc,Ef;class RI extends Pt{constructor(e=new N(0,0,1),t=new N(0,0,0),n=1,i=16776960,r=n*.2,o=r*.2){super(),this.type="ArrowHelper",Zc===void 0&&(Zc=new Et,Zc.setAttribute("position",new Ve([0,0,0,0,1,0],3)),Ef=new Vs(0,.5,1,5,1),Ef.translate(0,-.5,0)),this.position.copy(t),this.line=new es(Zc,new Wn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new wn(Ef,new Pr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{t0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(t0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class CI extends ir{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Et;i.setAttribute("position",new Ve(t,3)),i.setAttribute("color",new Ve(n,3));const r=new Wn({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new Le,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class PI{constructor(){this.type="ShapePath",this.color=new Le,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Jo,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,o){return this.currentPath.bezierCurveTo(e,t,n,i,r,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const b=[];for(let S=0,w=_.length;S<w;S++){const L=_[S],T=new Bs;T.curves=L.curves,b.push(T)}return b}function n(_,b){const S=b.length;let w=!1;for(let L=S-1,T=0;T<S;L=T++){let C=b[L],R=b[T],A=R.x-C.x,D=R.y-C.y;if(Math.abs(D)>Number.EPSILON){if(D<0&&(C=b[T],A=-A,R=b[L],D=-D),_.y<C.y||_.y>R.y)continue;if(_.y===C.y){if(_.x===C.x)return!0}else{const X=D*(_.x-C.x)-A*(_.y-C.y);if(X===0)return!0;if(X<0)continue;w=!w}}else{if(_.y!==C.y)continue;if(R.x<=_.x&&_.x<=C.x||C.x<=_.x&&_.x<=R.x)return!0}}return w}const i=er.isClockWise,r=this.subPaths;if(r.length===0)return[];let o,l,u;const h=[];if(r.length===1)return l=r[0],u=new Bs,u.curves=l.curves,h.push(u),h;let f=!i(r[0].getPoints());f=e?!f:f;const p=[],m=[];let g=[],v=0,M;m[v]=void 0,g[v]=[];for(let _=0,b=r.length;_<b;_++)l=r[_],M=l.getPoints(),o=i(M),o=e?!o:o,o?(!f&&m[v]&&v++,m[v]={s:new Bs,p:M},m[v].s.curves=l.curves,f&&v++,g[v]=[]):g[v].push({h:l,p:M[0]});if(!m[0])return t(r);if(m.length>1){let _=!1,b=0;for(let S=0,w=m.length;S<w;S++)p[S]=[];for(let S=0,w=m.length;S<w;S++){const L=g[S];for(let T=0;T<L.length;T++){const C=L[T];let R=!0;for(let A=0;A<m.length;A++)n(C.p,m[A].p)&&(S!==A&&b++,R?(R=!1,p[A].push(C)):_=!0);R&&p[S].push(C)}}b>0&&_===!1&&(g=p)}let y;for(let _=0,b=m.length;_<b;_++){u=m[_].s,h.push(u),y=g[_];for(let S=0,w=y.length;S<w;S++)u.holes.push(y[S].h)}return h}}class LI extends as{constructor(e,t,n,i,r,o){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,n,i,r,o)}}class II extends ll{constructor(e,t,n,i){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,n,i)}}class UI extends cl{constructor(e,t,n,i){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,n,i)}}class DI extends ul{constructor(e,t,n,i,r,o,l){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,n,i,r,o,l)}}class OI extends Vs{constructor(e,t,n,i,r,o,l,u){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,n,i,r,o,l,u)}}class NI extends hl{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}}class FI extends fl{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}}class BI extends dl{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}}class zI extends Za{constructor(e,t,n,i){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,n,i)}}class kI extends Ja{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}}class HI extends qa{constructor(e,t,n,i){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,n,i)}}class GI extends Lr{constructor(e,t,n,i){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,n,i)}}class VI extends pl{constructor(e,t,n,i,r,o){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,n,i,r,o)}}class WI extends ml{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}}class XI extends Ka{constructor(e,t,n,i,r,o,l){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,n,i,r,o,l)}}class $I extends gl{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}}class qI extends _l{constructor(e,t,n,i,r){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,n,i,r)}}class YI extends vl{constructor(e,t,n,i,r,o){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,n,i,r,o)}}class ZI extends yl{constructor(e,t,n,i,r){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,n,i,r)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:hu}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=hu);const JI=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:vd,AddEquation:Rs,AddOperation:Z0,AdditiveAnimationBlendMode:Td,AdditiveBlending:Cf,AlphaFormat:nv,AlwaysCompare:bv,AlwaysDepth:G0,AlwaysStencilFunc:mv,AmbientLight:xy,AmbientLightProbe:VL,AnimationAction:Ay,AnimationClip:nl,AnimationLoader:PL,AnimationMixer:oI,AnimationObjectGroup:sI,AnimationUtils:TL,ArcCurve:qv,ArrayCamera:Fv,ArrowHelper:RI,Audio:wy,AudioAnalyser:ZL,AudioContext:tp,AudioListener:$L,AudioLoader:HL,AxesHelper:CI,BackSide:Vn,BasicDepthPacking:fv,BasicShadowMap:$w,Bone:zd,BooleanKeyframeTrack:Ws,Box2:pI,Box3:nr,Box3Helper:TI,BoxBufferGeometry:LI,BoxGeometry:as,BoxHelper:wI,BufferAttribute:Wt,BufferGeometry:Et,BufferGeometryLoader:Ey,ByteType:ev,Cache:Gs,Camera:vu,CameraHelper:EI,CanvasTexture:JP,CapsuleBufferGeometry:II,CapsuleGeometry:ll,CatmullRomCurve3:Yv,CineonToneMapping:Q0,CircleBufferGeometry:UI,CircleGeometry:cl,ClampToEdgeWrapping:Dn,Clock:np,Color:Le,ColorKeyframeTrack:Qd,ColorManagement:li,CompressedArrayTexture:ZP,CompressedTexture:Hd,CompressedTextureLoader:LL,ConeBufferGeometry:DI,ConeGeometry:ul,CubeCamera:Cv,CubeReflectionMapping:Kr,CubeRefractionMapping:Qr,CubeTexture:ol,CubeTextureLoader:IL,CubeUVReflectionMapping:Xa,CubicBezierCurve:Vd,CubicBezierCurve3:Zv,CubicInterpolant:fy,CullFaceBack:Rf,CullFaceFront:R0,CullFaceFrontBack:Xw,CullFaceNone:A0,Curve:Vi,CurvePath:Kv,CustomBlending:C0,CustomToneMapping:j0,CylinderBufferGeometry:OI,CylinderGeometry:Vs,Cylindrical:dI,Data3DTexture:Pd,DataArrayTexture:gu,DataTexture:za,DataTextureLoader:UL,DataUtils:sA,DecrementStencilOp:rT,DecrementWrapStencilOp:aT,DefaultLoadingManager:my,DepthFormat:Zr,DepthStencilFormat:zs,DepthTexture:Bv,DirectionalLight:yy,DirectionalLightHelper:bI,DiscreteInterpolant:dy,DisplayP3ColorSpace:Ad,DodecahedronBufferGeometry:NI,DodecahedronGeometry:hl,DoubleSide:Ji,DstAlphaFactor:N0,DstColorFactor:B0,DynamicCopyUsage:MT,DynamicDrawUsage:mT,DynamicReadUsage:vT,EdgesGeometry:Qv,EllipseCurve:Tu,EqualCompare:vv,EqualDepth:W0,EqualStencilFunc:uT,EquirectangularReflectionMapping:zo,EquirectangularRefractionMapping:ko,Euler:al,EventDispatcher:Cr,ExtrudeBufferGeometry:FI,ExtrudeGeometry:fl,FileLoader:Rr,Float16BufferAttribute:hA,Float32BufferAttribute:Ve,Float64BufferAttribute:fA,FloatType:Ki,Fog:bu,FogExp2:Su,FramebufferTexture:YP,FrontSide:Ar,Frustum:yu,GLBufferAttribute:hI,GLSL1:bT,GLSL3:id,GreaterCompare:xv,GreaterDepth:$0,GreaterEqualCompare:Sv,GreaterEqualDepth:X0,GreaterEqualStencilFunc:pT,GreaterStencilFunc:fT,GridHelper:MI,Group:Na,HalfFloatType:ka,HemisphereLight:gy,HemisphereLightHelper:xI,HemisphereLightProbe:GL,IcosahedronBufferGeometry:BI,IcosahedronGeometry:dl,ImageBitmapLoader:kL,ImageLoader:il,ImageUtils:Cd,IncrementStencilOp:iT,IncrementWrapStencilOp:sT,InstancedBufferAttribute:Va,InstancedBufferGeometry:by,InstancedInterleavedBuffer:uI,InstancedMesh:Wv,Int16BufferAttribute:cA,Int32BufferAttribute:uA,Int8BufferAttribute:aA,IntType:xd,InterleavedBuffer:Eu,InterleavedBufferAttribute:ks,Interpolant:xl,InterpolateDiscrete:Vo,InterpolateLinear:Wo,InterpolateSmooth:nu,InvertStencilOp:oT,KeepStencilOp:iu,KeyframeTrack:Wi,LOD:Gv,LatheBufferGeometry:zI,LatheGeometry:Za,Layers:_u,LessCompare:_v,LessDepth:V0,LessEqualCompare:yv,LessEqualDepth:au,LessEqualStencilFunc:hT,LessStencilFunc:cT,Light:os,LightProbe:Pu,Line:es,Line3:mI,LineBasicMaterial:Wn,LineCurve:Au,LineCurve3:Jv,LineDashedMaterial:uy,LineLoop:Xv,LineSegments:ir,LinearEncoding:$o,LinearFilter:hn,LinearInterpolant:Kd,LinearMipMapLinearFilter:Kw,LinearMipMapNearestFilter:Jw,LinearMipmapLinearFilter:jr,LinearMipmapNearestFilter:yd,LinearSRGBColorSpace:ki,LinearToneMapping:J0,Loader:pi,LoaderUtils:hd,LoadingManager:jd,LoopOnce:cv,LoopPingPong:hv,LoopRepeat:uv,LuminanceAlphaFormat:rv,LuminanceFormat:iv,MOUSE:Vw,Material:Fn,MaterialLoader:Lu,MathUtils:FT,Matrix3:xt,Matrix4:ot,MaxEquation:Uf,Mesh:wn,MeshBasicMaterial:Pr,MeshDepthMaterial:Dd,MeshDistanceMaterial:Od,MeshLambertMaterial:ly,MeshMatcapMaterial:cy,MeshNormalMaterial:oy,MeshPhongMaterial:sy,MeshPhysicalMaterial:Cu,MeshStandardMaterial:Yd,MeshToonMaterial:ay,MinEquation:If,MirroredRepeatWrapping:Go,MixOperation:Y0,MultiplyBlending:Lf,MultiplyOperation:sl,NearestFilter:un,NearestMipMapLinearFilter:Zw,NearestMipMapNearestFilter:Yw,NearestMipmapLinearFilter:Do,NearestMipmapNearestFilter:ou,NeverCompare:gv,NeverDepth:H0,NeverStencilFunc:lT,NoBlending:Er,NoColorSpace:Jr,NoToneMapping:ji,NormalAnimationBlendMode:mu,NormalBlending:Ns,NotEqualCompare:Mv,NotEqualDepth:q0,NotEqualStencilFunc:dT,NumberKeyframeTrack:el,Object3D:Pt,ObjectLoader:BL,ObjectSpaceNormalMap:pv,OctahedronBufferGeometry:kI,OctahedronGeometry:Ja,OneFactor:U0,OneMinusDstAlphaFactor:F0,OneMinusDstColorFactor:z0,OneMinusSrcAlphaFactor:_d,OneMinusSrcColorFactor:O0,OrthographicCamera:xu,PCFShadowMap:md,PCFSoftShadowMap:fu,PMREMGenerator:sd,Path:Jo,PerspectiveCamera:En,Plane:qr,PlaneBufferGeometry:HI,PlaneGeometry:qa,PlaneHelper:AI,PointLight:vy,PointLightHelper:vI,Points:$v,PointsMaterial:kd,PolarGridHelper:SI,PolyhedronBufferGeometry:GI,PolyhedronGeometry:Lr,PositionalAudio:YL,PropertyBinding:Lt,PropertyMixer:Ty,QuadraticBezierCurve:Wd,QuadraticBezierCurve3:Xd,Quaternion:Qn,QuaternionKeyframeTrack:Qa,QuaternionLinearInterpolant:py,RED_GREEN_RGTC2_Format:td,RED_RGTC1_Format:lv,REVISION:hu,RGBADepthPacking:dv,RGBAFormat:hi,RGBAIntegerFormat:wd,RGBA_ASTC_10x10_Format:Kf,RGBA_ASTC_10x5_Format:Yf,RGBA_ASTC_10x6_Format:Zf,RGBA_ASTC_10x8_Format:Jf,RGBA_ASTC_12x10_Format:Qf,RGBA_ASTC_12x12_Format:jf,RGBA_ASTC_4x4_Format:kf,RGBA_ASTC_5x4_Format:Hf,RGBA_ASTC_5x5_Format:Gf,RGBA_ASTC_6x5_Format:Vf,RGBA_ASTC_6x6_Format:Wf,RGBA_ASTC_8x5_Format:Xf,RGBA_ASTC_8x6_Format:$f,RGBA_ASTC_8x8_Format:qf,RGBA_BPTC_Format:tu,RGBA_ETC2_EAC_Format:zf,RGBA_PVRTC_2BPPV1_Format:Ff,RGBA_PVRTC_4BPPV1_Format:Nf,RGBA_S3TC_DXT1_Format:Qc,RGBA_S3TC_DXT3_Format:jc,RGBA_S3TC_DXT5_Format:eu,RGB_ETC1_Format:ov,RGB_ETC2_Format:Bf,RGB_PVRTC_2BPPV1_Format:Of,RGB_PVRTC_4BPPV1_Format:Df,RGB_S3TC_DXT1_Format:Kc,RGFormat:av,RGIntegerFormat:Ed,RawShaderMaterial:ry,Ray:$a,Raycaster:Ry,RectAreaLight:My,RedFormat:sv,RedIntegerFormat:bd,ReinhardToneMapping:K0,RepeatWrapping:Ho,ReplaceStencilOp:nT,ReverseSubtractEquation:L0,RingBufferGeometry:VI,RingGeometry:pl,SIGNED_RED_GREEN_RGTC2_Format:nd,SIGNED_RED_RGTC1_Format:ed,SRGBColorSpace:mt,Scene:Fd,ShaderChunk:yt,ShaderLib:Bi,ShaderMaterial:tr,ShadowMaterial:iy,Shape:Bs,ShapeBufferGeometry:WI,ShapeGeometry:ml,ShapePath:PI,ShapeUtils:er,ShortType:tv,Skeleton:wu,SkeletonHelper:_I,SkinnedMesh:Vv,Source:Is,Sphere:Gi,SphereBufferGeometry:XI,SphereGeometry:Ka,Spherical:fI,SphericalHarmonics3:Sy,SplineCurve:$d,SpotLight:_y,SpotLightHelper:gI,Sprite:Hv,SpriteMaterial:Bd,SrcAlphaFactor:gd,SrcAlphaSaturateFactor:k0,SrcColorFactor:D0,StaticCopyUsage:xT,StaticDrawUsage:qo,StaticReadUsage:_T,StereoCamera:WL,StreamCopyUsage:ST,StreamDrawUsage:gT,StreamReadUsage:yT,StringKeyframeTrack:Xs,SubtractEquation:P0,SubtractiveBlending:Pf,TOUCH:Ww,TangentSpaceNormalMap:ss,TetrahedronBufferGeometry:$I,TetrahedronGeometry:gl,Texture:fn,TextureLoader:DL,TorusBufferGeometry:qI,TorusGeometry:_l,TorusKnotBufferGeometry:YI,TorusKnotGeometry:vl,Triangle:Kn,TriangleFanDrawMode:eT,TriangleStripDrawMode:jw,TrianglesDrawMode:Qw,TubeBufferGeometry:ZI,TubeGeometry:yl,TwoPassDoubleSide:qw,UVMapping:du,Uint16BufferAttribute:Ld,Uint32BufferAttribute:Id,Uint8BufferAttribute:oA,Uint8ClampedBufferAttribute:lA,Uniform:sp,UniformsGroup:cI,UniformsLib:Te,UniformsUtils:Rv,UnsignedByteType:wr,UnsignedInt248Type:Yr,UnsignedIntType:br,UnsignedShort4444Type:Md,UnsignedShort5551Type:Sd,UnsignedShortType:pu,VSMShadowMap:Zi,Vector2:fe,Vector3:N,Vector4:zt,VectorKeyframeTrack:tl,VideoTexture:qP,WebGL1Renderer:zv,WebGL3DRenderTarget:YT,WebGLArrayRenderTarget:qT,WebGLCoordinateSystem:Qi,WebGLCubeRenderTarget:Pv,WebGLMultipleRenderTargets:ZT,WebGLRenderTarget:Hi,WebGLRenderer:Nd,WebGLUtils:Nv,WebGPUCoordinateSystem:Yo,WireframeGeometry:ny,WrapAroundEnding:Xo,ZeroCurvatureEnding:Ps,ZeroFactor:I0,ZeroSlopeEnding:Ls,ZeroStencilOp:tT,_SRGBAFormat:lu,sRGBEncoding:Tr},Symbol.toStringTag,{value:"Module"})),KI=()=>On("threlte-internal-context");function QI(s){let e;const t=s[9].default,n=ts(t,s,s[8],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,[r]){n&&n.p&&(!e||r&256)&&ns(n,t,i,i[8],e?rs(t,i[8],r,null):is(i[8]),null)},i(i){e||(De(n,i),e=!0)},o(i){ze(n,i),e=!1},d(i){n&&n.d(i)}}}const n0="threlte-disposable-object-context";function jI(s,e,t){let n,i,{$$slots:r={},$$scope:o}=e;const{collectDisposableObjects:l,addDisposableObjects:u,removeDisposableObjects:h}=KI();let{object:f=void 0}=e,p=f,{dispose:m=void 0}=e;const g=On(n0);bn(s,g,y=>t(7,i=y));const v=jn(m??i??!0);bn(s,v,y=>t(6,n=y)),Nn(n0,v);let M=n?l(f):[];return u(M),Cn(()=>{h(M)}),s.$$set=y=>{"object"in y&&t(2,f=y.object),"dispose"in y&&t(3,m=y.dispose),"$$scope"in y&&t(8,o=y.$$scope)},s.$$.update=()=>{s.$$.dirty&136&&v.set(m??i??!0),s.$$.dirty&116&&f!==p&&(h(M),t(5,M=n?l(f):[]),u(M),t(4,p=f))},[g,v,f,m,p,M,n,i,o,r]}class eU extends Ri{constructor(e){super(),Ci(this,e,jI,QI,Pi,{object:2,dispose:3})}}function tU(s,e){const t=jn(s);let n=s;const i=t.subscribe(l=>n=l);return Cn(i),{...t,set:l=>{if((l==null?void 0:l.uuid)===(n==null?void 0:n.uuid))return;const u=n;t.set(l),e==null||e(l,u)},update:l=>{const u=l(n);if((u==null?void 0:u.uuid)===(n==null?void 0:n.uuid))return;const h=n;t.set(u),e==null||e(u,h)}}}const ls=()=>On("threlte"),nU=()=>On("threlte-hierarchical-parent-context");function iU(s){let e;const t=s[8].default,n=ts(t,s,s[7],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,[r]){n&&n.p&&(!e||r&128)&&ns(n,t,i,i[7],e?rs(t,i[7],r,null):is(i[7]),null)},i(i){e||(De(n,i),e=!0)},o(i){ze(n,i),e=!1},d(i){n&&n.d(i)}}}const rU=()=>({onChildMount:On("threlte-hierarchical-object-on-mount"),onChildDestroy:On("threlte-hierarchical-object-on-destroy")});function sU(s,e,t){var _;let n,{$$slots:i={},$$scope:r}=e,{object:o=void 0}=e,{children:l=[]}=e,{onChildMount:u=void 0}=e;const h=b=>{l.push(b),t(1,l),u==null||u(b)};let{onChildDestroy:f=void 0}=e;const p=b=>{const S=l.findIndex(w=>w.uuid===b.uuid);S!==-1&&l.splice(S,1),t(1,l),f==null||f(b)},{invalidate:m}=ls(),g=nU();bn(s,g,b=>t(6,n=b));let{parent:v=n}=e;const M=rU();o&&((_=M.onChildMount)==null||_.call(M,o),m("HierarchicalObject: object added"));const y=tU(o,(b,S)=>{var w,L;S&&((w=M.onChildDestroy)==null||w.call(M,S),m("HierarchicalObject: object added")),b&&((L=M.onChildMount)==null||L.call(M,b),m("HierarchicalObject: object removed"))});return Cn(()=>{var b;o&&((b=M.onChildDestroy)==null||b.call(M,o),m("HierarchicalObject: object removed"))}),Nn("threlte-hierarchical-object-on-mount",h),Nn("threlte-hierarchical-object-on-destroy",p),Nn("threlte-hierarchical-parent-context",y),s.$$set=b=>{"object"in b&&t(3,o=b.object),"children"in b&&t(1,l=b.children),"onChildMount"in b&&t(4,u=b.onChildMount),"onChildDestroy"in b&&t(5,f=b.onChildDestroy),"parent"in b&&t(2,v=b.parent),"$$scope"in b&&t(7,r=b.$$scope)},s.$$.update=()=>{s.$$.dirty&64&&t(2,v=n),s.$$.dirty&8&&y.set(o)},[g,l,v,o,u,f,n,r,i]}class aU extends Ri{constructor(e){super(),Ci(this,e,sU,iU,Pi,{object:3,children:1,onChildMount:4,onChildDestroy:5,parent:2})}}function oU(s){let e;const t=s[1].default,n=ts(t,s,s[4],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&16)&&ns(n,t,i,i[4],e?rs(t,i[4],r,null):is(i[4]),null)},i(i){e||(De(n,i),e=!0)},o(i){ze(n,i),e=!1},d(i){n&&n.d(i)}}}function lU(s){let e,t;return e=new aU({props:{object:s[0],onChildMount:s[2],onChildDestroy:s[3],$$slots:{default:[oU]},$$scope:{ctx:s}}}),{c(){ct(e.$$.fragment)},l(n){ut(e.$$.fragment,n)},m(n,i){ht(e,n,i),t=!0},p(n,[i]){const r={};i&1&&(r.object=n[0]),i&1&&(r.onChildMount=n[2]),i&1&&(r.onChildDestroy=n[3]),i&16&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(De(e.$$.fragment,n),t=!0)},o(n){ze(e.$$.fragment,n),t=!1},d(n){ft(e,n)}}}function cU(s,e,t){let{$$slots:n={},$$scope:i}=e,{object:r}=e;const o=u=>r.add(u),l=u=>r.remove(u);return s.$$set=u=>{"object"in u&&t(0,r=u.object),"$$scope"in u&&t(4,i=u.$$scope)},[r,n,o,l,i]}class uU extends Ri{constructor(e){super(),Ci(this,e,cU,lU,Pi,{object:0})}}const Py=(s,e)=>{if(e.includes(".")){const t=e.split("."),n=t.pop();for(let i=0;i<t.length;i+=1)s=s[t[i]];return{target:s,key:n}}else return{target:s,key:e}},wf=Symbol("initialValueBeforeAttach"),hU=()=>{const{invalidate:s}=ls();let e=!1,t=wf,n,i,r;const o=(u,h,f)=>{if(l(),!f){const p=u;((p==null?void 0:p.isMaterial)||!1)&&(f="material"),((p==null?void 0:p.isBufferGeometry)||(p==null?void 0:p.isGeometry)||!1)&&(f="geometry")}if(f){if(typeof f=="function")n=f(h,u);else{const{target:p,key:m}=Py(h,f);t=p[m],p[m]=u,i=p,r=m}e=!0,s()}},l=()=>{e&&(n?(n(),n=void 0):i&&r&&t!==wf&&(i[r]=t,t=wf,i=void 0,r=void 0),e=!1,s())};return Cn(()=>{l()}),{update:o}},fU=s=>s&&s.isCamera,Ly=s=>s&&s.isOrthographicCamera,Iy=s=>s&&s.isPerspectiveCamera,dU=s=>Iy(s)||Ly(s),pU=()=>{const{invalidate:s,size:e,camera:t}=ls();let n,i;Cn(()=>{i==null||i()});const r=u=>{n&&(Ly(n)?(n.left=u.width/-2,n.right=u.width/2,n.top=u.height/2,n.bottom=u.height/-2,n.updateProjectionMatrix(),n.updateMatrixWorld(),s()):Iy(n)&&(n.aspect=u.width/u.height,n.updateProjectionMatrix(),n.updateMatrixWorld(),s()))};return{update:(u,h)=>{if(i==null||i(),h||!dU(u)){n=void 0;return}n=u,i=e.subscribe(r)},makeDefaultCamera:(u,h)=>{!fU(u)||!h||(t.set(u),s())}}},ap=()=>{const s=pd(),e=(n,i)=>{const r=s.$$.callbacks[n];r&&r.forEach(o=>{o(i)})};return Object.defineProperty(e,"hasEventListener",{value:n=>!!s.$$.callbacks[n],enumerable:!0}),e},mU=()=>{const s=ap(),e=[];let t,n=!1;const i=()=>{e.forEach(l=>l()),e.length=0,s("create",{ref:t,cleanup:l=>{e.push(l)}})},r=o=>{t=o,n&&i()};return Wa(()=>{i(),n=!0}),Cn(()=>{e.forEach(o=>o())}),{updateRef:r}},i0=s=>!!(s!=null&&s.addEventListener),gU=()=>{const s=ap(),e=pd(),t=m=>{m!=null&&m.type&&s(m.type,m)},n=(m,g)=>{i0(m)&&g.forEach(v=>{m.removeEventListener(v,t)})},i=(m,g)=>{i0(m)&&g.forEach(v=>{m.addEventListener(v,t)})};let r=[],o;const l=jn([]),u=l.subscribe(m=>{n(o,r),i(o,m),r=m});Cn(u);const h=jn(),f=h.subscribe(m=>{n(o,r),i(m,r),o=m});return Cn(f),Cn(()=>{n(o,r)}),Wa(()=>{l.set(Object.keys(e.$$.callbacks))}),{updateRef:m=>{h.set(m)}}},_U=s=>{const t=On("threlte-plugin-context");if(!t)return;const n=Object.values(t).map(h=>h(s)).filter(Boolean),i=n.flatMap(h=>h.pluginProps??[]);let r=[];return Cn(()=>{r.forEach(h=>h())}),{updateRef:h=>{r.forEach(f=>f()),r=[],n.forEach(f=>{var m;const p=(m=f.onRefChange)==null?void 0:m.call(f,h);p&&r.push(p)})},updateProps:h=>{n.forEach(f=>{var p;(p=f.onPropsChange)==null||p.call(f,h)})},updateRestProps:h=>{n.forEach(f=>{var p;(p=f.onRestPropsChange)==null||p.call(f,h)})},pluginsProps:i}},vU=new Set(["$$scope","$$slots","type","args","attach","instance"]),yU=new Set(["fov","aspect","near","far","left","right","top","bottom","zoom"]),xU=s=>typeof s=="string"||typeof s=="number"||typeof s=="boolean"||typeof s>"u"||s===null,MU=()=>{const{invalidate:s}=ls(),e=new Map,t=(i,r,o,l)=>{var f,p;if(xU(o)){const m=e.get(r);if(m&&m.instance===i&&m.value===o)return;e.set(r,{instance:i,value:o})}const{key:u,target:h}=Py(i,r);if(!Array.isArray(o)&&typeof o=="number"&&typeof((f=h[u])==null?void 0:f.setScalar)=="function")h[u].setScalar(o);else if(typeof((p=h[u])==null?void 0:p.set)=="function")Array.isArray(o)?h[u].set(...o):h[u].set(o);else{if(h[u]=o,l.manualCamera)return;yU.has(u)&&(h.isPerspectiveCamera||h.isOrthographicCamera)&&h.updateProjectionMatrix()}};return{updateProps:(i,r,o)=>{var l;for(const u in r)!vU.has(u)&&!((l=o.pluginsProps)!=null&&l.includes(u))&&t(i,u,r[u],o),s()}}},SU=s=>({ref:s&2}),r0=s=>({ref:s[1]}),bU=s=>({ref:s&2}),s0=s=>({ref:s[1]});function a0(s){let e,t;return e=new eU({props:{object:s[1],dispose:s[0]}}),{c(){ct(e.$$.fragment)},l(n){ut(e.$$.fragment,n)},m(n,i){ht(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.object=n[1]),i&1&&(r.dispose=n[0]),e.$set(r)},i(n){t||(De(e.$$.fragment,n),t=!0)},o(n){ze(e.$$.fragment,n),t=!1},d(n){ft(e,n)}}}function EU(s){let e;const t=s[12].default,n=ts(t,s,s[13],r0);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&8194)&&ns(n,t,i,i[13],e?rs(t,i[13],r,SU):is(i[13]),r0)},i(i){e||(De(n,i),e=!0)},o(i){ze(n,i),e=!1},d(i){n&&n.d(i)}}}function wU(s){let e,t;return e=new uU({props:{object:s[1],$$slots:{default:[TU]},$$scope:{ctx:s}}}),{c(){ct(e.$$.fragment)},l(n){ut(e.$$.fragment,n)},m(n,i){ht(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.object=n[1]),i&8194&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(De(e.$$.fragment,n),t=!0)},o(n){ze(e.$$.fragment,n),t=!1},d(n){ft(e,n)}}}function TU(s){let e;const t=s[12].default,n=ts(t,s,s[13],s0);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&8194)&&ns(n,t,i,i[13],e?rs(t,i[13],r,bU):is(i[13]),s0)},i(i){e||(De(n,i),e=!0)},o(i){ze(n,i),e=!1},d(i){n&&n.d(i)}}}function AU(s){let e=s[4](s[1]),t,n,i,r,o,l,u=e&&a0(s);const h=[wU,EU],f=[];function p(m,g){return g&2&&(n=null),n==null&&(n=!!m[3](m[1])),n?0:1}return i=p(s,-1),r=f[i]=h[i](s),{c(){u&&u.c(),t=jt(),r.c(),o=Ai()},l(m){u&&u.l(m),t=en(m),r.l(m),o=Ai()},m(m,g){u&&u.m(m,g),Ot(m,t,g),f[i].m(m,g),Ot(m,o,g),l=!0},p(m,[g]){g&2&&(e=m[4](m[1])),e?u?(u.p(m,g),g&2&&De(u,1)):(u=a0(m),u.c(),De(u,1),u.m(t.parentNode,t)):u&&(Os(),ze(u,1,1,()=>{u=null}),Ds());let v=i;i=p(m,g),i===v?f[i].p(m,g):(Os(),ze(f[v],1,1,()=>{f[v]=null}),Ds(),r=f[i],r?r.p(m,g):(r=f[i]=h[i](m),r.c()),De(r,1),r.m(o.parentNode,o))},i(m){l||(De(u),De(r),l=!0)},o(m){ze(u),ze(r),l=!1},d(m){u&&u.d(m),m&&It(t),f[i].d(m),m&&It(o)}}}function RU(s,e,t){const n=["is","args","attach","manual","makeDefault","dispose","ref"];let i=wg(e,n),r,{$$slots:o={},$$scope:l}=e,{is:u}=e,{args:h=void 0}=e,{attach:f=void 0}=e,{manual:p=void 0}=e,{makeDefault:m=void 0}=e,{dispose:g=void 0}=e;const v=On("threlte-hierarchical-parent-context");bn(s,v,W=>t(11,r=W));const M=W=>typeof W=="function"&&/^\s*class\s+/.test(W.toString()),y=W=>Array.isArray(W),_=mU();let b=M(u)&&y(h)?new u(...h):M(u)?new u:u;_.updateRef(b);let S=!1;const w=()=>{if(!S){S=!0;return}t(1,b=M(u)&&y(h)?new u(...h):M(u)?new u:u),_.updateRef(b)};let{ref:L=b}=e;const T=jn(b);Nn("threlte-hierarchical-parent-context",T);const C=_U({ref:b,props:e}),R=(C==null?void 0:C.pluginsProps)??[],A=MU(),D=pU(),X=hU(),ce=gU(),q=W=>!!W.isObject3D,Y=W=>W.dispose!==void 0;return s.$$set=W=>{t(27,e=su(su({},e),Tg(W))),t(26,i=wg(e,n)),"is"in W&&t(6,u=W.is),"args"in W&&t(7,h=W.args),"attach"in W&&t(8,f=W.attach),"manual"in W&&t(9,p=W.manual),"makeDefault"in W&&t(10,m=W.makeDefault),"dispose"in W&&t(0,g=W.dispose),"ref"in W&&t(5,L=W.ref),"$$scope"in W&&t(13,l=W.$$scope)},s.$$.update=()=>{s.$$.dirty&192&&w(),s.$$.dirty&2&&t(5,L=b),s.$$.dirty&2&&T.set(b),A.updateProps(b,i,{manualCamera:p,pluginsProps:R}),s.$$.dirty&514&&D.update(b,p),s.$$.dirty&1026&&D.makeDefaultCamera(b,m),s.$$.dirty&2306&&X.update(b,r,f),s.$$.dirty&2&&ce.updateRef(b),s.$$.dirty&2&&(C==null||C.updateRef(b)),C==null||C.updateProps(e),C==null||C.updateRestProps(i)},e=Tg(e),[g,b,v,q,Y,L,u,h,f,p,m,r,o,l]}let op=class extends Ri{constructor(e){super(),Ci(this,e,RU,AU,Pi,{is:6,args:7,attach:8,manual:9,makeDefault:10,dispose:0,ref:5})}};const lp=typeof window<"u",CU=()=>{const s=jn({width:0,height:0});let e={width:0,height:0};const t=s.subscribe(o=>e=o);Cn(t);let n;const i=()=>{const o=e;if(!n||!n.parentElement)return;const{clientWidth:l,clientHeight:u}=n.parentElement;(l!==o.width||u!==o.height)&&s.set({width:l,height:u})},r=o=>{n=o,i(),window.addEventListener("resize",i)};return lp?(Cn(()=>{window.removeEventListener("resize",i)}),{parentSizeAction:r,parentSize:s}):{parentSize:s,parentSizeAction:r}},PU=()=>{Nn("threlte-cache",[])},Uy=s=>s.userData,LU=()=>{const s=new En(75,0,.1,1e3);return Uy(s).threlteDefaultCamera=!0,s.position.z=5,s.lookAt(0,0,0),s},IU=s=>{ja(s.size,e=>{Uy(Ow(s.camera)).threlteDefaultCamera&&s.camera.update(t=>{const n=t;return n.aspect=e.width/e.height,n.updateProjectionMatrix(),s.invalidate("Default camera: aspect ratio changed"),n})})},ja=(s,e)=>{const t=T0(s,r=>r);let n;const i=t.subscribe(async r=>{n&&n();const o=await e(r);o&&(n=o)});Cn(()=>{i(),n&&n()})};function Dy(s,e){const t={current:void 0};return ja(s,n=>{t.current=e?e(n):n}),t}const ci=s=>{const e=jn(s),t={set:n=>{t.current=n,e.set(n)},subscribe:e.subscribe,update:n=>{const i=n(t.current);t.current=i,e.set(i)},current:s};return t},UU=s=>{const e={debugFrameloop:s.debugFrameloop,frame:0,frameInvalidated:!0,invalidations:{},manualFrameHandlers:new Set,autoFrameHandlers:new Set,allFrameHandlers:new Set,renderHandlers:new Set,advance:!1,dispose:async(o=!1)=>{await Nw(),!(!e.shouldDispose&&!o)&&(e.disposableObjects.forEach((l,u)=>{var h;(l===0||o)&&((h=u==null?void 0:u.dispose)==null||h.call(u),e.disposableObjects.delete(u))}),e.shouldDispose=!1)},collectDisposableObjects:(o,l)=>{const u=l??[];return o&&(o!=null&&o.dispose&&typeof o.dispose=="function"&&o.type!=="Scene"&&u.push(o),Object.entries(o).forEach(([h,f])=>{if(h==="parent"||h==="children"||typeof f!="object")return;const p=f;p!=null&&p.dispose&&e.collectDisposableObjects(p,u)})),u},addDisposableObjects:o=>{o.forEach(l=>{const u=e.disposableObjects.get(l);u?e.disposableObjects.set(l,u+1):e.disposableObjects.set(l,1)})},removeDisposableObjects:o=>{o.length!==0&&(o.forEach(l=>{const u=e.disposableObjects.get(l);u&&u>0&&e.disposableObjects.set(l,u-1)}),e.shouldDispose=!0)},disposableObjects:new Map,shouldDispose:!1},t={size:T0([s.userSize,s.parentSize],([o,l])=>o||l),clock:new np,camera:ci(LU()),scene:new Fd,renderer:void 0,invalidate:o=>{e.frameInvalidated=!0,e.debugFrameloop&&o&&(e.invalidations[o]=e.invalidations[o]?e.invalidations[o]+1:1)},advance:()=>{e.advance=!0},colorSpace:ci(s.colorSpace),toneMapping:ci(s.toneMapping),dpr:ci(s.dpr),useLegacyLights:ci(s.useLegacyLights),shadows:ci(s.shadows),colorManagementEnabled:ci(s.colorManagementEnabled),frameloop:ci(s.frameloop)},n=ci({});return Nn("threlte",t),Nn("threlte-internal-context",e),Nn("threlte-user-context",n),{ctx:t,internalCtx:e,getCtx:()=>t,getInternalCtx:()=>e}},DU=s=>{if(!lp)return;let e;const t=()=>{s(),e=requestAnimationFrame(t)};t(),Cn(()=>{e&&cancelAnimationFrame(e)})},OU=(s,e,t)=>{if(e.allFrameHandlers.size===0)return;if(e.debugFrameloop){let i=0;e.autoFrameHandlers.forEach(r=>{r.debugFrameloopMessage?e.invalidations[r.debugFrameloopMessage]=r.debugFrameloopMessage in e.invalidations?e.invalidations[r.debugFrameloopMessage]+1:1:++i}),i>0&&(e.invalidations.useFrame=e.autoFrameHandlers.size)}Array.from(e.allFrameHandlers).reduce((i,r)=>r.order?!0:i,!1)?Array.from(e.allFrameHandlers).sort((i,r)=>(i.order??0)>(r.order??0)?1:-1).forEach(i=>i.fn(s,t)):e.allFrameHandlers.forEach(i=>i.fn(s,t))},NU=(s,e,t)=>{if(e.renderHandlers.size===0)return;Array.from(e.renderHandlers).reduce((i,r)=>r.order?!0:i,!1)?Array.from(e.renderHandlers).sort((i,r)=>(i.order??0)>(r.order??0)?1:-1).forEach(i=>i.fn(s,t)):e.renderHandlers.forEach(i=>i.fn(s,t))},FU=s=>{s.debugFrameloop&&(s.frame+=1,console.log(`frame: ${s.frame}${Object.keys(s.invalidations).length>0?", requested by ↴":""}`),Object.keys(s.invalidations).length>0&&console.table(s.invalidations),s.invalidations={})},BU=(s,e)=>s.frameloop.current==="always"||s.frameloop.current==="demand"&&(e.frameInvalidated||e.autoFrameHandlers.size>0)||s.frameloop.current==="never"&&e.advance,zU=(s,e)=>{DU(()=>{e.dispose();const t=s.clock.getDelta();OU(s,e,t),BU(s,e)&&(e.renderHandlers.size>0?NU(s,e,t):s.renderer&&s.camera.current&&s.renderer.render(s.scene,s.camera.current),FU(e),e.frameInvalidated=!1,e.advance=!1)})},kU={srgb:Tr,"srgb-linear":$o,"":$o},HU=s=>s.outputColorSpace!==void 0,GU=s=>{const e=jn(void 0),t=(n,i)=>{s.renderer=new Nd({powerPreference:"high-performance",canvas:n,antialias:!0,alpha:!0,...i}),e.set(s.renderer)};return ja([e,s.size,s.toneMapping,s.colorSpace,s.dpr,s.shadows,s.colorManagementEnabled,s.useLegacyLights],([n,i,r,o,l,u,h,f])=>{if(!n)return;if(n.setSize(i.width,i.height),n.setPixelRatio(l),HU(n))n.outputColorSpace=o;else{const g=kU[o];g?n.outputEncoding=g:console.warn("No encoding found for colorSpace",o)}n.toneMapping=r,n.shadowMap.enabled=!!u,u&&u!==!0?n.shadowMap.type=u:u===!0&&(n.shadowMap.type=fu);const p=li;p.enabled!==void 0?p.enabled=h:p.legacyMode!==void 0&&(p.legacyMode=!h);const m=n;f&&m.useLegacyLights!==void 0?m.useLegacyLights=f:m.physicallyCorrectLights!==void 0&&(m.physicallyCorrectLights=!f)}),Cn(()=>{var n;(n=s.renderer)==null||n.dispose()}),{createRenderer:t}};function o0(s){let e,t;return e=new op({props:{is:s[3].ctx.scene,$$slots:{default:[VU]},$$scope:{ctx:s}}}),{c(){ct(e.$$.fragment)},l(n){ut(e.$$.fragment,n)},m(n,i){ht(e,n,i),t=!0},p(n,i){const r={};i&131072&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(De(e.$$.fragment,n),t=!0)},o(n){ze(e.$$.fragment,n),t=!1},d(n){ft(e,n)}}}function VU(s){let e;const t=s[15].default,n=ts(t,s,s[17],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&131072)&&ns(n,t,i,i[17],e?rs(t,i[17],r,null):is(i[17]),null)},i(i){e||(De(n,i),e=!0)},o(i){ze(n,i),e=!1},d(i){n&&n.d(i)}}}function WU(s){let e,t,n,i,r=s[1]&&o0(s);return{c(){e=x0("canvas"),r&&r.c(),this.h()},l(o){e=M0(o,"CANVAS",{class:!0});var l=S0(e);r&&r.l(l),l.forEach(It),this.h()},h(){b0(e,"class","svelte-o3oskp")},m(o,l){Ot(o,e,l),r&&r.m(e,null),s[16](e),t=!0,n||(i=Fw(s[2].call(null,e)),n=!0)},p(o,[l]){o[1]?r?(r.p(o,l),l&2&&De(r,1)):(r=o0(o),r.c(),De(r,1),r.m(e,null)):r&&(Os(),ze(r,1,1,()=>{r=null}),Ds())},i(o){t||(De(r),t=!0)},o(o){ze(r),t=!1},d(o){o&&It(e),r&&r.d(),s[16](null),n=!1,i()}}}const l0=new Set;function XU(s,e,t){let{$$slots:n={},$$scope:i}=e,{dpr:r=lp?window.devicePixelRatio:1}=e,{toneMapping:o=vd}=e,{colorSpace:l="srgb"}=e,{frameloop:u="demand"}=e,{debugFrameloop:h=!1}=e,{shadows:f=fu}=e,{size:p=void 0}=e,{rendererParameters:m=void 0}=e,{colorManagementEnabled:g=!0}=e,{useLegacyLights:v=!0}=e,M,y=!1;const _=jn(p),{parentSize:b,parentSizeAction:S}=CU(),w=UU({colorSpace:l,toneMapping:o,dpr:r,userSize:_,parentSize:b,debugFrameloop:h,frameloop:u,shadows:f,colorManagementEnabled:g,useLegacyLights:v});PU();const L=w.ctx;IU(L),l0.add(L.invalidate),Cn(()=>{l0.delete(L.invalidate)});const{createRenderer:T}=GU(L);zU(w.ctx,w.internalCtx),Wa(()=>{M&&(T(M,m),t(1,y=!0))}),Cn(()=>{w.internalCtx.dispose(!0)});function C(R){E0[R?"unshift":"push"](()=>{M=R,t(0,M)})}return s.$$set=R=>{"dpr"in R&&t(4,r=R.dpr),"toneMapping"in R&&t(5,o=R.toneMapping),"colorSpace"in R&&t(6,l=R.colorSpace),"frameloop"in R&&t(7,u=R.frameloop),"debugFrameloop"in R&&t(8,h=R.debugFrameloop),"shadows"in R&&t(9,f=R.shadows),"size"in R&&t(10,p=R.size),"rendererParameters"in R&&t(11,m=R.rendererParameters),"colorManagementEnabled"in R&&t(12,g=R.colorManagementEnabled),"useLegacyLights"in R&&t(13,v=R.useLegacyLights),"$$scope"in R&&t(17,i=R.$$scope)},s.$$.update=()=>{s.$$.dirty&1024&&_.set(p)},[M,y,S,w,r,o,l,u,h,f,p,m,g,v,L,n,C,i]}class $U extends Ri{constructor(e){super(),Ci(this,e,XU,WU,Pi,{dpr:4,toneMapping:5,colorSpace:6,frameloop:7,debugFrameloop:8,shadows:9,size:10,rendererParameters:11,colorManagementEnabled:12,useLegacyLights:13,ctx:14})}get ctx(){return this.$$.ctx[14]}}const qU={},YU=(s,e)=>{const t=qU[e]||JI[e];if(!t)throw new Error(`No Three.js module found for ${e}. Did you forget to extend the catalogue?`);return{...s,props:{...s.props,is:t}}},ZU=s=>new Proxy(class{},{construct(e,[t]){const n=t;return new op(YU(n,s))}}),Ut=new Proxy(class{},{construct(s,[e]){const t=e;return new op(t)},get(s,e){return ZU(e)}});function Oy(s,e){const t="threlte-plugin-context";if(Array.isArray(s)){const[n,i]=s;Nn(t,{...On(t),[n]:i})}else{const n=s,i=e;if(!i)return;Nn(t,{...On(t),[n]:i})}}new N;new N;new N;var Po=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},uu={exports:{}};/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */uu.exports;(function(s,e){(function(){var t,n="4.17.21",i=200,r="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",o="Expected a function",l="Invalid `variable` option passed into `_.template`",u="__lodash_hash_undefined__",h=500,f="__lodash_placeholder__",p=1,m=2,g=4,v=1,M=2,y=1,_=2,b=4,S=8,w=16,L=32,T=64,C=128,R=256,A=512,D=30,X="...",ce=800,q=16,Y=1,W=2,he=3,j=1/0,oe=9007199254740991,de=17976931348623157e292,te=0/0,Ee=4294967295,Q=Ee-1,ge=Ee>>>1,_e=[["ary",C],["bind",y],["bindKey",_],["curry",S],["curryRight",w],["flip",A],["partial",L],["partialRight",T],["rearg",R]],Pe="[object Arguments]",Ie="[object Array]",Ge="[object AsyncFunction]",it="[object Boolean]",Ze="[object Date]",Nt="[object DOMException]",et="[object Error]",z="[object Function]",Me="[object GeneratorFunction]",re="[object Map]",xe="[object Number]",pe="[object Null]",Ne="[object Object]",Ue="[object Promise]",Fe="[object Proxy]",tt="[object RegExp]",rt="[object Set]",kt="[object String]",F="[object Symbol]",U="[object Undefined]",ee="[object WeakMap]",ye="[object WeakSet]",ve="[object ArrayBuffer]",Se="[object DataView]",We="[object Float32Array]",we="[object Float64Array]",se="[object Int8Array]",$e="[object Int16Array]",qe="[object Int32Array]",Ye="[object Uint8Array]",ke="[object Uint8ClampedArray]",He="[object Uint16Array]",gt="[object Uint32Array]",Ht=/\b__p \+= '';/g,H=/\b(__p \+=) '' \+/g,Ae=/(__e\(.*?\)|\b__t\)) \+\n'';/g,K=/&(?:amp|lt|gt|quot|#39);/g,be=/[&<>"']/g,Ce=RegExp(K.source),Ct=RegExp(be.source),qt=/<%-([\s\S]+?)%>/g,nn=/<%([\s\S]+?)%>/g,Xi=/<%=([\s\S]+?)%>/g,Yt=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,mi=/^\w*$/,Tn=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,$s=/[\\^$.*+?()[\]{}|]/g,Ml=RegExp($s.source),eo=/^\s+/,qs=/\s/,Sl=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,Ys=/\{\n\/\* \[wrapped with (.+)\] \*/,bl=/,? & /,Iu=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,Uu=/[()=,{}\[\]\/\s]/,Du=/\\(\\)?/g,O=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,Z=/\w*$/,ne=/^[-+]0x[0-9a-f]+$/i,$=/^0b[01]+$/i,ae=/^\[object .+?Constructor\]$/,Be=/^0o[0-7]+$/i,Je=/^(?:0|[1-9]\d*)$/,st=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,nt=/($^)/,St=/['\n\r\u2028\u2029\\]/g,at="\\ud800-\\udfff",pt="\\u0300-\\u036f",Gt="\\ufe20-\\ufe2f",Jt="\\u20d0-\\u20ff",Xn=pt+Gt+Jt,gi="\\u2700-\\u27bf",Kt="a-z\\xdf-\\xf6\\xf8-\\xff",Tt="\\xac\\xb1\\xd7\\xf7",to="\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",dn="\\u2000-\\u206f",rr=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",no="A-Z\\xc0-\\xd6\\xd8-\\xde",Ir="\\ufe0e\\ufe0f",Zs=Tt+to+dn+rr,mn="['’]",sr="["+at+"]",Js="["+Zs+"]",xn="["+Xn+"]",Ks="\\d+",Ou="["+gi+"]",io="["+Kt+"]",cp="[^"+at+Zs+Ks+gi+Kt+no+"]",Nu="\\ud83c[\\udffb-\\udfff]",Fy="(?:"+xn+"|"+Nu+")",up="[^"+at+"]",Fu="(?:\\ud83c[\\udde6-\\uddff]){2}",Bu="[\\ud800-\\udbff][\\udc00-\\udfff]",Qs="["+no+"]",hp="\\u200d",fp="(?:"+io+"|"+cp+")",By="(?:"+Qs+"|"+cp+")",dp="(?:"+mn+"(?:d|ll|m|re|s|t|ve))?",pp="(?:"+mn+"(?:D|LL|M|RE|S|T|VE))?",mp=Fy+"?",gp="["+Ir+"]?",zy="(?:"+hp+"(?:"+[up,Fu,Bu].join("|")+")"+gp+mp+")*",ky="\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",Hy="\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",_p=gp+mp+zy,Gy="(?:"+[Ou,Fu,Bu].join("|")+")"+_p,Vy="(?:"+[up+xn+"?",xn,Fu,Bu,sr].join("|")+")",Wy=RegExp(mn,"g"),Xy=RegExp(xn,"g"),zu=RegExp(Nu+"(?="+Nu+")|"+Vy+_p,"g"),$y=RegExp([Qs+"?"+io+"+"+dp+"(?="+[Js,Qs,"$"].join("|")+")",By+"+"+pp+"(?="+[Js,Qs+fp,"$"].join("|")+")",Qs+"?"+fp+"+"+dp,Qs+"+"+pp,Hy,ky,Ks,Gy].join("|"),"g"),qy=RegExp("["+hp+at+Xn+Ir+"]"),Yy=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Zy=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Jy=-1,$t={};$t[We]=$t[we]=$t[se]=$t[$e]=$t[qe]=$t[Ye]=$t[ke]=$t[He]=$t[gt]=!0,$t[Pe]=$t[Ie]=$t[ve]=$t[it]=$t[Se]=$t[Ze]=$t[et]=$t[z]=$t[re]=$t[xe]=$t[Ne]=$t[tt]=$t[rt]=$t[kt]=$t[ee]=!1;var Xt={};Xt[Pe]=Xt[Ie]=Xt[ve]=Xt[Se]=Xt[it]=Xt[Ze]=Xt[We]=Xt[we]=Xt[se]=Xt[$e]=Xt[qe]=Xt[re]=Xt[xe]=Xt[Ne]=Xt[tt]=Xt[rt]=Xt[kt]=Xt[F]=Xt[Ye]=Xt[ke]=Xt[He]=Xt[gt]=!0,Xt[et]=Xt[z]=Xt[ee]=!1;var Ky={À:"A",Á:"A",Â:"A",Ã:"A",Ä:"A",Å:"A",à:"a",á:"a",â:"a",ã:"a",ä:"a",å:"a",Ç:"C",ç:"c",Ð:"D",ð:"d",È:"E",É:"E",Ê:"E",Ë:"E",è:"e",é:"e",ê:"e",ë:"e",Ì:"I",Í:"I",Î:"I",Ï:"I",ì:"i",í:"i",î:"i",ï:"i",Ñ:"N",ñ:"n",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"O",Ø:"O",ò:"o",ó:"o",ô:"o",õ:"o",ö:"o",ø:"o",Ù:"U",Ú:"U",Û:"U",Ü:"U",ù:"u",ú:"u",û:"u",ü:"u",Ý:"Y",ý:"y",ÿ:"y",Æ:"Ae",æ:"ae",Þ:"Th",þ:"th",ß:"ss",Ā:"A",Ă:"A",Ą:"A",ā:"a",ă:"a",ą:"a",Ć:"C",Ĉ:"C",Ċ:"C",Č:"C",ć:"c",ĉ:"c",ċ:"c",č:"c",Ď:"D",Đ:"D",ď:"d",đ:"d",Ē:"E",Ĕ:"E",Ė:"E",Ę:"E",Ě:"E",ē:"e",ĕ:"e",ė:"e",ę:"e",ě:"e",Ĝ:"G",Ğ:"G",Ġ:"G",Ģ:"G",ĝ:"g",ğ:"g",ġ:"g",ģ:"g",Ĥ:"H",Ħ:"H",ĥ:"h",ħ:"h",Ĩ:"I",Ī:"I",Ĭ:"I",Į:"I",İ:"I",ĩ:"i",ī:"i",ĭ:"i",į:"i",ı:"i",Ĵ:"J",ĵ:"j",Ķ:"K",ķ:"k",ĸ:"k",Ĺ:"L",Ļ:"L",Ľ:"L",Ŀ:"L",Ł:"L",ĺ:"l",ļ:"l",ľ:"l",ŀ:"l",ł:"l",Ń:"N",Ņ:"N",Ň:"N",Ŋ:"N",ń:"n",ņ:"n",ň:"n",ŋ:"n",Ō:"O",Ŏ:"O",Ő:"O",ō:"o",ŏ:"o",ő:"o",Ŕ:"R",Ŗ:"R",Ř:"R",ŕ:"r",ŗ:"r",ř:"r",Ś:"S",Ŝ:"S",Ş:"S",Š:"S",ś:"s",ŝ:"s",ş:"s",š:"s",Ţ:"T",Ť:"T",Ŧ:"T",ţ:"t",ť:"t",ŧ:"t",Ũ:"U",Ū:"U",Ŭ:"U",Ů:"U",Ű:"U",Ų:"U",ũ:"u",ū:"u",ŭ:"u",ů:"u",ű:"u",ų:"u",Ŵ:"W",ŵ:"w",Ŷ:"Y",ŷ:"y",Ÿ:"Y",Ź:"Z",Ż:"Z",Ž:"Z",ź:"z",ż:"z",ž:"z",Ĳ:"IJ",ĳ:"ij",Œ:"Oe",œ:"oe",ŉ:"'n",ſ:"s"},Qy={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},jy={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"},ex={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},tx=parseFloat,nx=parseInt,vp=typeof Po=="object"&&Po&&Po.Object===Object&&Po,ix=typeof self=="object"&&self&&self.Object===Object&&self,An=vp||ix||Function("return this")(),ku=e&&!e.nodeType&&e,cs=ku&&!0&&s&&!s.nodeType&&s,yp=cs&&cs.exports===ku,Hu=yp&&vp.process,_i=function(){try{var G=cs&&cs.require&&cs.require("util").types;return G||Hu&&Hu.binding&&Hu.binding("util")}catch{}}(),xp=_i&&_i.isArrayBuffer,Mp=_i&&_i.isDate,Sp=_i&&_i.isMap,bp=_i&&_i.isRegExp,Ep=_i&&_i.isSet,wp=_i&&_i.isTypedArray;function ei(G,ie,J){switch(J.length){case 0:return G.call(ie);case 1:return G.call(ie,J[0]);case 2:return G.call(ie,J[0],J[1]);case 3:return G.call(ie,J[0],J[1],J[2])}return G.apply(ie,J)}function rx(G,ie,J,Oe){for(var lt=-1,Dt=G==null?0:G.length;++lt<Dt;){var gn=G[lt];ie(Oe,gn,J(gn),G)}return Oe}function vi(G,ie){for(var J=-1,Oe=G==null?0:G.length;++J<Oe&&ie(G[J],J,G)!==!1;);return G}function sx(G,ie){for(var J=G==null?0:G.length;J--&&ie(G[J],J,G)!==!1;);return G}function Tp(G,ie){for(var J=-1,Oe=G==null?0:G.length;++J<Oe;)if(!ie(G[J],J,G))return!1;return!0}function Ur(G,ie){for(var J=-1,Oe=G==null?0:G.length,lt=0,Dt=[];++J<Oe;){var gn=G[J];ie(gn,J,G)&&(Dt[lt++]=gn)}return Dt}function El(G,ie){var J=G==null?0:G.length;return!!J&&js(G,ie,0)>-1}function Gu(G,ie,J){for(var Oe=-1,lt=G==null?0:G.length;++Oe<lt;)if(J(ie,G[Oe]))return!0;return!1}function Zt(G,ie){for(var J=-1,Oe=G==null?0:G.length,lt=Array(Oe);++J<Oe;)lt[J]=ie(G[J],J,G);return lt}function Dr(G,ie){for(var J=-1,Oe=ie.length,lt=G.length;++J<Oe;)G[lt+J]=ie[J];return G}function Vu(G,ie,J,Oe){var lt=-1,Dt=G==null?0:G.length;for(Oe&&Dt&&(J=G[++lt]);++lt<Dt;)J=ie(J,G[lt],lt,G);return J}function ax(G,ie,J,Oe){var lt=G==null?0:G.length;for(Oe&&lt&&(J=G[--lt]);lt--;)J=ie(J,G[lt],lt,G);return J}function Wu(G,ie){for(var J=-1,Oe=G==null?0:G.length;++J<Oe;)if(ie(G[J],J,G))return!0;return!1}var ox=Xu("length");function lx(G){return G.split("")}function cx(G){return G.match(Iu)||[]}function Ap(G,ie,J){var Oe;return J(G,function(lt,Dt,gn){if(ie(lt,Dt,gn))return Oe=Dt,!1}),Oe}function wl(G,ie,J,Oe){for(var lt=G.length,Dt=J+(Oe?1:-1);Oe?Dt--:++Dt<lt;)if(ie(G[Dt],Dt,G))return Dt;return-1}function js(G,ie,J){return ie===ie?Mx(G,ie,J):wl(G,Rp,J)}function ux(G,ie,J,Oe){for(var lt=J-1,Dt=G.length;++lt<Dt;)if(Oe(G[lt],ie))return lt;return-1}function Rp(G){return G!==G}function Cp(G,ie){var J=G==null?0:G.length;return J?qu(G,ie)/J:te}function Xu(G){return function(ie){return ie==null?t:ie[G]}}function $u(G){return function(ie){return G==null?t:G[ie]}}function Pp(G,ie,J,Oe,lt){return lt(G,function(Dt,gn,Vt){J=Oe?(Oe=!1,Dt):ie(J,Dt,gn,Vt)}),J}function hx(G,ie){var J=G.length;for(G.sort(ie);J--;)G[J]=G[J].value;return G}function qu(G,ie){for(var J,Oe=-1,lt=G.length;++Oe<lt;){var Dt=ie(G[Oe]);Dt!==t&&(J=J===t?Dt:J+Dt)}return J}function Yu(G,ie){for(var J=-1,Oe=Array(G);++J<G;)Oe[J]=ie(J);return Oe}function fx(G,ie){return Zt(ie,function(J){return[J,G[J]]})}function Lp(G){return G&&G.slice(0,Op(G)+1).replace(eo,"")}function ti(G){return function(ie){return G(ie)}}function Zu(G,ie){return Zt(ie,function(J){return G[J]})}function ro(G,ie){return G.has(ie)}function Ip(G,ie){for(var J=-1,Oe=G.length;++J<Oe&&js(ie,G[J],0)>-1;);return J}function Up(G,ie){for(var J=G.length;J--&&js(ie,G[J],0)>-1;);return J}function dx(G,ie){for(var J=G.length,Oe=0;J--;)G[J]===ie&&++Oe;return Oe}var px=$u(Ky),mx=$u(Qy);function gx(G){return"\\"+ex[G]}function _x(G,ie){return G==null?t:G[ie]}function ea(G){return qy.test(G)}function vx(G){return Yy.test(G)}function yx(G){for(var ie,J=[];!(ie=G.next()).done;)J.push(ie.value);return J}function Ju(G){var ie=-1,J=Array(G.size);return G.forEach(function(Oe,lt){J[++ie]=[lt,Oe]}),J}function Dp(G,ie){return function(J){return G(ie(J))}}function Or(G,ie){for(var J=-1,Oe=G.length,lt=0,Dt=[];++J<Oe;){var gn=G[J];(gn===ie||gn===f)&&(G[J]=f,Dt[lt++]=J)}return Dt}function Tl(G){var ie=-1,J=Array(G.size);return G.forEach(function(Oe){J[++ie]=Oe}),J}function xx(G){var ie=-1,J=Array(G.size);return G.forEach(function(Oe){J[++ie]=[Oe,Oe]}),J}function Mx(G,ie,J){for(var Oe=J-1,lt=G.length;++Oe<lt;)if(G[Oe]===ie)return Oe;return-1}function Sx(G,ie,J){for(var Oe=J+1;Oe--;)if(G[Oe]===ie)return Oe;return Oe}function ta(G){return ea(G)?Ex(G):ox(G)}function Li(G){return ea(G)?wx(G):lx(G)}function Op(G){for(var ie=G.length;ie--&&qs.test(G.charAt(ie)););return ie}var bx=$u(jy);function Ex(G){for(var ie=zu.lastIndex=0;zu.test(G);)++ie;return ie}function wx(G){return G.match(zu)||[]}function Tx(G){return G.match($y)||[]}var Ax=function G(ie){ie=ie==null?An:na.defaults(An.Object(),ie,na.pick(An,Zy));var J=ie.Array,Oe=ie.Date,lt=ie.Error,Dt=ie.Function,gn=ie.Math,Vt=ie.Object,Ku=ie.RegExp,Rx=ie.String,yi=ie.TypeError,Al=J.prototype,Cx=Dt.prototype,ia=Vt.prototype,Rl=ie["__core-js_shared__"],Cl=Cx.toString,Bt=ia.hasOwnProperty,Px=0,Np=function(){var a=/[^.]+$/.exec(Rl&&Rl.keys&&Rl.keys.IE_PROTO||"");return a?"Symbol(src)_1."+a:""}(),Pl=ia.toString,Lx=Cl.call(Vt),Ix=An._,Ux=Ku("^"+Cl.call(Bt).replace($s,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Ll=yp?ie.Buffer:t,Nr=ie.Symbol,Il=ie.Uint8Array,Fp=Ll?Ll.allocUnsafe:t,Ul=Dp(Vt.getPrototypeOf,Vt),Bp=Vt.create,zp=ia.propertyIsEnumerable,Dl=Al.splice,kp=Nr?Nr.isConcatSpreadable:t,so=Nr?Nr.iterator:t,us=Nr?Nr.toStringTag:t,Ol=function(){try{var a=ms(Vt,"defineProperty");return a({},"",{}),a}catch{}}(),Dx=ie.clearTimeout!==An.clearTimeout&&ie.clearTimeout,Ox=Oe&&Oe.now!==An.Date.now&&Oe.now,Nx=ie.setTimeout!==An.setTimeout&&ie.setTimeout,Nl=gn.ceil,Fl=gn.floor,Qu=Vt.getOwnPropertySymbols,Fx=Ll?Ll.isBuffer:t,Hp=ie.isFinite,Bx=Al.join,zx=Dp(Vt.keys,Vt),_n=gn.max,Pn=gn.min,kx=Oe.now,Hx=ie.parseInt,Gp=gn.random,Gx=Al.reverse,ju=ms(ie,"DataView"),ao=ms(ie,"Map"),eh=ms(ie,"Promise"),ra=ms(ie,"Set"),oo=ms(ie,"WeakMap"),lo=ms(Vt,"create"),Bl=oo&&new oo,sa={},Vx=gs(ju),Wx=gs(ao),Xx=gs(eh),$x=gs(ra),qx=gs(oo),zl=Nr?Nr.prototype:t,co=zl?zl.valueOf:t,Vp=zl?zl.toString:t;function P(a){if(rn(a)&&!dt(a)&&!(a instanceof At)){if(a instanceof xi)return a;if(Bt.call(a,"__wrapped__"))return Wm(a)}return new xi(a)}var aa=function(){function a(){}return function(c){if(!Qt(c))return{};if(Bp)return Bp(c);a.prototype=c;var d=new a;return a.prototype=t,d}}();function kl(){}function xi(a,c){this.__wrapped__=a,this.__actions__=[],this.__chain__=!!c,this.__index__=0,this.__values__=t}P.templateSettings={escape:qt,evaluate:nn,interpolate:Xi,variable:"",imports:{_:P}},P.prototype=kl.prototype,P.prototype.constructor=P,xi.prototype=aa(kl.prototype),xi.prototype.constructor=xi;function At(a){this.__wrapped__=a,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=Ee,this.__views__=[]}function Yx(){var a=new At(this.__wrapped__);return a.__actions__=$n(this.__actions__),a.__dir__=this.__dir__,a.__filtered__=this.__filtered__,a.__iteratees__=$n(this.__iteratees__),a.__takeCount__=this.__takeCount__,a.__views__=$n(this.__views__),a}function Zx(){if(this.__filtered__){var a=new At(this);a.__dir__=-1,a.__filtered__=!0}else a=this.clone(),a.__dir__*=-1;return a}function Jx(){var a=this.__wrapped__.value(),c=this.__dir__,d=dt(a),x=c<0,E=d?a.length:0,I=lS(0,E,this.__views__),B=I.start,k=I.end,V=k-B,le=x?k:B-1,ue=this.__iteratees__,me=ue.length,Re=0,Xe=Pn(V,this.__takeCount__);if(!d||!x&&E==V&&Xe==V)return dm(a,this.__actions__);var Qe=[];e:for(;V--&&Re<Xe;){le+=c;for(var vt=-1,je=a[le];++vt<me;){var wt=ue[vt],Rt=wt.iteratee,ri=wt.type,kn=Rt(je);if(ri==W)je=kn;else if(!kn){if(ri==Y)continue e;break e}}Qe[Re++]=je}return Qe}At.prototype=aa(kl.prototype),At.prototype.constructor=At;function hs(a){var c=-1,d=a==null?0:a.length;for(this.clear();++c<d;){var x=a[c];this.set(x[0],x[1])}}function Kx(){this.__data__=lo?lo(null):{},this.size=0}function Qx(a){var c=this.has(a)&&delete this.__data__[a];return this.size-=c?1:0,c}function jx(a){var c=this.__data__;if(lo){var d=c[a];return d===u?t:d}return Bt.call(c,a)?c[a]:t}function eM(a){var c=this.__data__;return lo?c[a]!==t:Bt.call(c,a)}function tM(a,c){var d=this.__data__;return this.size+=this.has(a)?0:1,d[a]=lo&&c===t?u:c,this}hs.prototype.clear=Kx,hs.prototype.delete=Qx,hs.prototype.get=jx,hs.prototype.has=eM,hs.prototype.set=tM;function ar(a){var c=-1,d=a==null?0:a.length;for(this.clear();++c<d;){var x=a[c];this.set(x[0],x[1])}}function nM(){this.__data__=[],this.size=0}function iM(a){var c=this.__data__,d=Hl(c,a);if(d<0)return!1;var x=c.length-1;return d==x?c.pop():Dl.call(c,d,1),--this.size,!0}function rM(a){var c=this.__data__,d=Hl(c,a);return d<0?t:c[d][1]}function sM(a){return Hl(this.__data__,a)>-1}function aM(a,c){var d=this.__data__,x=Hl(d,a);return x<0?(++this.size,d.push([a,c])):d[x][1]=c,this}ar.prototype.clear=nM,ar.prototype.delete=iM,ar.prototype.get=rM,ar.prototype.has=sM,ar.prototype.set=aM;function or(a){var c=-1,d=a==null?0:a.length;for(this.clear();++c<d;){var x=a[c];this.set(x[0],x[1])}}function oM(){this.size=0,this.__data__={hash:new hs,map:new(ao||ar),string:new hs}}function lM(a){var c=jl(this,a).delete(a);return this.size-=c?1:0,c}function cM(a){return jl(this,a).get(a)}function uM(a){return jl(this,a).has(a)}function hM(a,c){var d=jl(this,a),x=d.size;return d.set(a,c),this.size+=d.size==x?0:1,this}or.prototype.clear=oM,or.prototype.delete=lM,or.prototype.get=cM,or.prototype.has=uM,or.prototype.set=hM;function fs(a){var c=-1,d=a==null?0:a.length;for(this.__data__=new or;++c<d;)this.add(a[c])}function fM(a){return this.__data__.set(a,u),this}function dM(a){return this.__data__.has(a)}fs.prototype.add=fs.prototype.push=fM,fs.prototype.has=dM;function Ii(a){var c=this.__data__=new ar(a);this.size=c.size}function pM(){this.__data__=new ar,this.size=0}function mM(a){var c=this.__data__,d=c.delete(a);return this.size=c.size,d}function gM(a){return this.__data__.get(a)}function _M(a){return this.__data__.has(a)}function vM(a,c){var d=this.__data__;if(d instanceof ar){var x=d.__data__;if(!ao||x.length<i-1)return x.push([a,c]),this.size=++d.size,this;d=this.__data__=new or(x)}return d.set(a,c),this.size=d.size,this}Ii.prototype.clear=pM,Ii.prototype.delete=mM,Ii.prototype.get=gM,Ii.prototype.has=_M,Ii.prototype.set=vM;function Wp(a,c){var d=dt(a),x=!d&&_s(a),E=!d&&!x&&Hr(a),I=!d&&!x&&!E&&ua(a),B=d||x||E||I,k=B?Yu(a.length,Rx):[],V=k.length;for(var le in a)(c||Bt.call(a,le))&&!(B&&(le=="length"||E&&(le=="offset"||le=="parent")||I&&(le=="buffer"||le=="byteLength"||le=="byteOffset")||hr(le,V)))&&k.push(le);return k}function Xp(a){var c=a.length;return c?a[hh(0,c-1)]:t}function yM(a,c){return ec($n(a),ds(c,0,a.length))}function xM(a){return ec($n(a))}function th(a,c,d){(d!==t&&!Ui(a[c],d)||d===t&&!(c in a))&&lr(a,c,d)}function uo(a,c,d){var x=a[c];(!(Bt.call(a,c)&&Ui(x,d))||d===t&&!(c in a))&&lr(a,c,d)}function Hl(a,c){for(var d=a.length;d--;)if(Ui(a[d][0],c))return d;return-1}function MM(a,c,d,x){return Fr(a,function(E,I,B){c(x,E,d(E),B)}),x}function $p(a,c){return a&&qi(c,Mn(c),a)}function SM(a,c){return a&&qi(c,Yn(c),a)}function lr(a,c,d){c=="__proto__"&&Ol?Ol(a,c,{configurable:!0,enumerable:!0,value:d,writable:!0}):a[c]=d}function nh(a,c){for(var d=-1,x=c.length,E=J(x),I=a==null;++d<x;)E[d]=I?t:Nh(a,c[d]);return E}function ds(a,c,d){return a===a&&(d!==t&&(a=a<=d?a:d),c!==t&&(a=a>=c?a:c)),a}function Mi(a,c,d,x,E,I){var B,k=c&p,V=c&m,le=c&g;if(d&&(B=E?d(a,x,E,I):d(a)),B!==t)return B;if(!Qt(a))return a;var ue=dt(a);if(ue){if(B=uS(a),!k)return $n(a,B)}else{var me=Ln(a),Re=me==z||me==Me;if(Hr(a))return gm(a,k);if(me==Ne||me==Pe||Re&&!E){if(B=V||Re?{}:Om(a),!k)return V?jM(a,SM(B,a)):QM(a,$p(B,a))}else{if(!Xt[me])return E?a:{};B=hS(a,me,k)}}I||(I=new Ii);var Xe=I.get(a);if(Xe)return Xe;I.set(a,B),ug(a)?a.forEach(function(je){B.add(Mi(je,c,d,je,a,I))}):lg(a)&&a.forEach(function(je,wt){B.set(wt,Mi(je,c,d,wt,a,I))});var Qe=le?V?Sh:Mh:V?Yn:Mn,vt=ue?t:Qe(a);return vi(vt||a,function(je,wt){vt&&(wt=je,je=a[wt]),uo(B,wt,Mi(je,c,d,wt,a,I))}),B}function bM(a){var c=Mn(a);return function(d){return qp(d,a,c)}}function qp(a,c,d){var x=d.length;if(a==null)return!x;for(a=Vt(a);x--;){var E=d[x],I=c[E],B=a[E];if(B===t&&!(E in a)||!I(B))return!1}return!0}function Yp(a,c,d){if(typeof a!="function")throw new yi(o);return vo(function(){a.apply(t,d)},c)}function ho(a,c,d,x){var E=-1,I=El,B=!0,k=a.length,V=[],le=c.length;if(!k)return V;d&&(c=Zt(c,ti(d))),x?(I=Gu,B=!1):c.length>=i&&(I=ro,B=!1,c=new fs(c));e:for(;++E<k;){var ue=a[E],me=d==null?ue:d(ue);if(ue=x||ue!==0?ue:0,B&&me===me){for(var Re=le;Re--;)if(c[Re]===me)continue e;V.push(ue)}else I(c,me,x)||V.push(ue)}return V}var Fr=Mm($i),Zp=Mm(rh,!0);function EM(a,c){var d=!0;return Fr(a,function(x,E,I){return d=!!c(x,E,I),d}),d}function Gl(a,c,d){for(var x=-1,E=a.length;++x<E;){var I=a[x],B=c(I);if(B!=null&&(k===t?B===B&&!ii(B):d(B,k)))var k=B,V=I}return V}function wM(a,c,d,x){var E=a.length;for(d=_t(d),d<0&&(d=-d>E?0:E+d),x=x===t||x>E?E:_t(x),x<0&&(x+=E),x=d>x?0:fg(x);d<x;)a[d++]=c;return a}function Jp(a,c){var d=[];return Fr(a,function(x,E,I){c(x,E,I)&&d.push(x)}),d}function Rn(a,c,d,x,E){var I=-1,B=a.length;for(d||(d=dS),E||(E=[]);++I<B;){var k=a[I];c>0&&d(k)?c>1?Rn(k,c-1,d,x,E):Dr(E,k):x||(E[E.length]=k)}return E}var ih=Sm(),Kp=Sm(!0);function $i(a,c){return a&&ih(a,c,Mn)}function rh(a,c){return a&&Kp(a,c,Mn)}function Vl(a,c){return Ur(c,function(d){return fr(a[d])})}function ps(a,c){c=zr(c,a);for(var d=0,x=c.length;a!=null&&d<x;)a=a[Yi(c[d++])];return d&&d==x?a:t}function Qp(a,c,d){var x=c(a);return dt(a)?x:Dr(x,d(a))}function Bn(a){return a==null?a===t?U:pe:us&&us in Vt(a)?oS(a):xS(a)}function sh(a,c){return a>c}function TM(a,c){return a!=null&&Bt.call(a,c)}function AM(a,c){return a!=null&&c in Vt(a)}function RM(a,c,d){return a>=Pn(c,d)&&a<_n(c,d)}function ah(a,c,d){for(var x=d?Gu:El,E=a[0].length,I=a.length,B=I,k=J(I),V=1/0,le=[];B--;){var ue=a[B];B&&c&&(ue=Zt(ue,ti(c))),V=Pn(ue.length,V),k[B]=!d&&(c||E>=120&&ue.length>=120)?new fs(B&&ue):t}ue=a[0];var me=-1,Re=k[0];e:for(;++me<E&&le.length<V;){var Xe=ue[me],Qe=c?c(Xe):Xe;if(Xe=d||Xe!==0?Xe:0,!(Re?ro(Re,Qe):x(le,Qe,d))){for(B=I;--B;){var vt=k[B];if(!(vt?ro(vt,Qe):x(a[B],Qe,d)))continue e}Re&&Re.push(Qe),le.push(Xe)}}return le}function CM(a,c,d,x){return $i(a,function(E,I,B){c(x,d(E),I,B)}),x}function fo(a,c,d){c=zr(c,a),a=zm(a,c);var x=a==null?a:a[Yi(bi(c))];return x==null?t:ei(x,a,d)}function jp(a){return rn(a)&&Bn(a)==Pe}function PM(a){return rn(a)&&Bn(a)==ve}function LM(a){return rn(a)&&Bn(a)==Ze}function po(a,c,d,x,E){return a===c?!0:a==null||c==null||!rn(a)&&!rn(c)?a!==a&&c!==c:IM(a,c,d,x,po,E)}function IM(a,c,d,x,E,I){var B=dt(a),k=dt(c),V=B?Ie:Ln(a),le=k?Ie:Ln(c);V=V==Pe?Ne:V,le=le==Pe?Ne:le;var ue=V==Ne,me=le==Ne,Re=V==le;if(Re&&Hr(a)){if(!Hr(c))return!1;B=!0,ue=!1}if(Re&&!ue)return I||(I=new Ii),B||ua(a)?Im(a,c,d,x,E,I):sS(a,c,V,d,x,E,I);if(!(d&v)){var Xe=ue&&Bt.call(a,"__wrapped__"),Qe=me&&Bt.call(c,"__wrapped__");if(Xe||Qe){var vt=Xe?a.value():a,je=Qe?c.value():c;return I||(I=new Ii),E(vt,je,d,x,I)}}return Re?(I||(I=new Ii),aS(a,c,d,x,E,I)):!1}function UM(a){return rn(a)&&Ln(a)==re}function oh(a,c,d,x){var E=d.length,I=E,B=!x;if(a==null)return!I;for(a=Vt(a);E--;){var k=d[E];if(B&&k[2]?k[1]!==a[k[0]]:!(k[0]in a))return!1}for(;++E<I;){k=d[E];var V=k[0],le=a[V],ue=k[1];if(B&&k[2]){if(le===t&&!(V in a))return!1}else{var me=new Ii;if(x)var Re=x(le,ue,V,a,c,me);if(!(Re===t?po(ue,le,v|M,x,me):Re))return!1}}return!0}function em(a){if(!Qt(a)||mS(a))return!1;var c=fr(a)?Ux:ae;return c.test(gs(a))}function DM(a){return rn(a)&&Bn(a)==tt}function OM(a){return rn(a)&&Ln(a)==rt}function NM(a){return rn(a)&&ac(a.length)&&!!$t[Bn(a)]}function tm(a){return typeof a=="function"?a:a==null?Zn:typeof a=="object"?dt(a)?rm(a[0],a[1]):im(a):bg(a)}function lh(a){if(!_o(a))return zx(a);var c=[];for(var d in Vt(a))Bt.call(a,d)&&d!="constructor"&&c.push(d);return c}function FM(a){if(!Qt(a))return yS(a);var c=_o(a),d=[];for(var x in a)x=="constructor"&&(c||!Bt.call(a,x))||d.push(x);return d}function ch(a,c){return a<c}function nm(a,c){var d=-1,x=qn(a)?J(a.length):[];return Fr(a,function(E,I,B){x[++d]=c(E,I,B)}),x}function im(a){var c=Eh(a);return c.length==1&&c[0][2]?Fm(c[0][0],c[0][1]):function(d){return d===a||oh(d,a,c)}}function rm(a,c){return Th(a)&&Nm(c)?Fm(Yi(a),c):function(d){var x=Nh(d,a);return x===t&&x===c?Fh(d,a):po(c,x,v|M)}}function Wl(a,c,d,x,E){a!==c&&ih(c,function(I,B){if(E||(E=new Ii),Qt(I))BM(a,c,B,d,Wl,x,E);else{var k=x?x(Rh(a,B),I,B+"",a,c,E):t;k===t&&(k=I),th(a,B,k)}},Yn)}function BM(a,c,d,x,E,I,B){var k=Rh(a,d),V=Rh(c,d),le=B.get(V);if(le){th(a,d,le);return}var ue=I?I(k,V,d+"",a,c,B):t,me=ue===t;if(me){var Re=dt(V),Xe=!Re&&Hr(V),Qe=!Re&&!Xe&&ua(V);ue=V,Re||Xe||Qe?dt(k)?ue=k:on(k)?ue=$n(k):Xe?(me=!1,ue=gm(V,!0)):Qe?(me=!1,ue=_m(V,!0)):ue=[]:yo(V)||_s(V)?(ue=k,_s(k)?ue=dg(k):(!Qt(k)||fr(k))&&(ue=Om(V))):me=!1}me&&(B.set(V,ue),E(ue,V,x,I,B),B.delete(V)),th(a,d,ue)}function sm(a,c){var d=a.length;if(d)return c+=c<0?d:0,hr(c,d)?a[c]:t}function am(a,c,d){c.length?c=Zt(c,function(I){return dt(I)?function(B){return ps(B,I.length===1?I[0]:I)}:I}):c=[Zn];var x=-1;c=Zt(c,ti(Ke()));var E=nm(a,function(I,B,k){var V=Zt(c,function(le){return le(I)});return{criteria:V,index:++x,value:I}});return hx(E,function(I,B){return KM(I,B,d)})}function zM(a,c){return om(a,c,function(d,x){return Fh(a,x)})}function om(a,c,d){for(var x=-1,E=c.length,I={};++x<E;){var B=c[x],k=ps(a,B);d(k,B)&&mo(I,zr(B,a),k)}return I}function kM(a){return function(c){return ps(c,a)}}function uh(a,c,d,x){var E=x?ux:js,I=-1,B=c.length,k=a;for(a===c&&(c=$n(c)),d&&(k=Zt(a,ti(d)));++I<B;)for(var V=0,le=c[I],ue=d?d(le):le;(V=E(k,ue,V,x))>-1;)k!==a&&Dl.call(k,V,1),Dl.call(a,V,1);return a}function lm(a,c){for(var d=a?c.length:0,x=d-1;d--;){var E=c[d];if(d==x||E!==I){var I=E;hr(E)?Dl.call(a,E,1):ph(a,E)}}return a}function hh(a,c){return a+Fl(Gp()*(c-a+1))}function HM(a,c,d,x){for(var E=-1,I=_n(Nl((c-a)/(d||1)),0),B=J(I);I--;)B[x?I:++E]=a,a+=d;return B}function fh(a,c){var d="";if(!a||c<1||c>oe)return d;do c%2&&(d+=a),c=Fl(c/2),c&&(a+=a);while(c);return d}function bt(a,c){return Ch(Bm(a,c,Zn),a+"")}function GM(a){return Xp(ha(a))}function VM(a,c){var d=ha(a);return ec(d,ds(c,0,d.length))}function mo(a,c,d,x){if(!Qt(a))return a;c=zr(c,a);for(var E=-1,I=c.length,B=I-1,k=a;k!=null&&++E<I;){var V=Yi(c[E]),le=d;if(V==="__proto__"||V==="constructor"||V==="prototype")return a;if(E!=B){var ue=k[V];le=x?x(ue,V,k):t,le===t&&(le=Qt(ue)?ue:hr(c[E+1])?[]:{})}uo(k,V,le),k=k[V]}return a}var cm=Bl?function(a,c){return Bl.set(a,c),a}:Zn,WM=Ol?function(a,c){return Ol(a,"toString",{configurable:!0,enumerable:!1,value:zh(c),writable:!0})}:Zn;function XM(a){return ec(ha(a))}function Si(a,c,d){var x=-1,E=a.length;c<0&&(c=-c>E?0:E+c),d=d>E?E:d,d<0&&(d+=E),E=c>d?0:d-c>>>0,c>>>=0;for(var I=J(E);++x<E;)I[x]=a[x+c];return I}function $M(a,c){var d;return Fr(a,function(x,E,I){return d=c(x,E,I),!d}),!!d}function Xl(a,c,d){var x=0,E=a==null?x:a.length;if(typeof c=="number"&&c===c&&E<=ge){for(;x<E;){var I=x+E>>>1,B=a[I];B!==null&&!ii(B)&&(d?B<=c:B<c)?x=I+1:E=I}return E}return dh(a,c,Zn,d)}function dh(a,c,d,x){var E=0,I=a==null?0:a.length;if(I===0)return 0;c=d(c);for(var B=c!==c,k=c===null,V=ii(c),le=c===t;E<I;){var ue=Fl((E+I)/2),me=d(a[ue]),Re=me!==t,Xe=me===null,Qe=me===me,vt=ii(me);if(B)var je=x||Qe;else le?je=Qe&&(x||Re):k?je=Qe&&Re&&(x||!Xe):V?je=Qe&&Re&&!Xe&&(x||!vt):Xe||vt?je=!1:je=x?me<=c:me<c;je?E=ue+1:I=ue}return Pn(I,Q)}function um(a,c){for(var d=-1,x=a.length,E=0,I=[];++d<x;){var B=a[d],k=c?c(B):B;if(!d||!Ui(k,V)){var V=k;I[E++]=B===0?0:B}}return I}function hm(a){return typeof a=="number"?a:ii(a)?te:+a}function ni(a){if(typeof a=="string")return a;if(dt(a))return Zt(a,ni)+"";if(ii(a))return Vp?Vp.call(a):"";var c=a+"";return c=="0"&&1/a==-j?"-0":c}function Br(a,c,d){var x=-1,E=El,I=a.length,B=!0,k=[],V=k;if(d)B=!1,E=Gu;else if(I>=i){var le=c?null:iS(a);if(le)return Tl(le);B=!1,E=ro,V=new fs}else V=c?[]:k;e:for(;++x<I;){var ue=a[x],me=c?c(ue):ue;if(ue=d||ue!==0?ue:0,B&&me===me){for(var Re=V.length;Re--;)if(V[Re]===me)continue e;c&&V.push(me),k.push(ue)}else E(V,me,d)||(V!==k&&V.push(me),k.push(ue))}return k}function ph(a,c){return c=zr(c,a),a=zm(a,c),a==null||delete a[Yi(bi(c))]}function fm(a,c,d,x){return mo(a,c,d(ps(a,c)),x)}function $l(a,c,d,x){for(var E=a.length,I=x?E:-1;(x?I--:++I<E)&&c(a[I],I,a););return d?Si(a,x?0:I,x?I+1:E):Si(a,x?I+1:0,x?E:I)}function dm(a,c){var d=a;return d instanceof At&&(d=d.value()),Vu(c,function(x,E){return E.func.apply(E.thisArg,Dr([x],E.args))},d)}function mh(a,c,d){var x=a.length;if(x<2)return x?Br(a[0]):[];for(var E=-1,I=J(x);++E<x;)for(var B=a[E],k=-1;++k<x;)k!=E&&(I[E]=ho(I[E]||B,a[k],c,d));return Br(Rn(I,1),c,d)}function pm(a,c,d){for(var x=-1,E=a.length,I=c.length,B={};++x<E;){var k=x<I?c[x]:t;d(B,a[x],k)}return B}function gh(a){return on(a)?a:[]}function _h(a){return typeof a=="function"?a:Zn}function zr(a,c){return dt(a)?a:Th(a,c)?[a]:Vm(Ft(a))}var qM=bt;function kr(a,c,d){var x=a.length;return d=d===t?x:d,!c&&d>=x?a:Si(a,c,d)}var mm=Dx||function(a){return An.clearTimeout(a)};function gm(a,c){if(c)return a.slice();var d=a.length,x=Fp?Fp(d):new a.constructor(d);return a.copy(x),x}function vh(a){var c=new a.constructor(a.byteLength);return new Il(c).set(new Il(a)),c}function YM(a,c){var d=c?vh(a.buffer):a.buffer;return new a.constructor(d,a.byteOffset,a.byteLength)}function ZM(a){var c=new a.constructor(a.source,Z.exec(a));return c.lastIndex=a.lastIndex,c}function JM(a){return co?Vt(co.call(a)):{}}function _m(a,c){var d=c?vh(a.buffer):a.buffer;return new a.constructor(d,a.byteOffset,a.length)}function vm(a,c){if(a!==c){var d=a!==t,x=a===null,E=a===a,I=ii(a),B=c!==t,k=c===null,V=c===c,le=ii(c);if(!k&&!le&&!I&&a>c||I&&B&&V&&!k&&!le||x&&B&&V||!d&&V||!E)return 1;if(!x&&!I&&!le&&a<c||le&&d&&E&&!x&&!I||k&&d&&E||!B&&E||!V)return-1}return 0}function KM(a,c,d){for(var x=-1,E=a.criteria,I=c.criteria,B=E.length,k=d.length;++x<B;){var V=vm(E[x],I[x]);if(V){if(x>=k)return V;var le=d[x];return V*(le=="desc"?-1:1)}}return a.index-c.index}function ym(a,c,d,x){for(var E=-1,I=a.length,B=d.length,k=-1,V=c.length,le=_n(I-B,0),ue=J(V+le),me=!x;++k<V;)ue[k]=c[k];for(;++E<B;)(me||E<I)&&(ue[d[E]]=a[E]);for(;le--;)ue[k++]=a[E++];return ue}function xm(a,c,d,x){for(var E=-1,I=a.length,B=-1,k=d.length,V=-1,le=c.length,ue=_n(I-k,0),me=J(ue+le),Re=!x;++E<ue;)me[E]=a[E];for(var Xe=E;++V<le;)me[Xe+V]=c[V];for(;++B<k;)(Re||E<I)&&(me[Xe+d[B]]=a[E++]);return me}function $n(a,c){var d=-1,x=a.length;for(c||(c=J(x));++d<x;)c[d]=a[d];return c}function qi(a,c,d,x){var E=!d;d||(d={});for(var I=-1,B=c.length;++I<B;){var k=c[I],V=x?x(d[k],a[k],k,d,a):t;V===t&&(V=a[k]),E?lr(d,k,V):uo(d,k,V)}return d}function QM(a,c){return qi(a,wh(a),c)}function jM(a,c){return qi(a,Um(a),c)}function ql(a,c){return function(d,x){var E=dt(d)?rx:MM,I=c?c():{};return E(d,a,Ke(x,2),I)}}function oa(a){return bt(function(c,d){var x=-1,E=d.length,I=E>1?d[E-1]:t,B=E>2?d[2]:t;for(I=a.length>3&&typeof I=="function"?(E--,I):t,B&&zn(d[0],d[1],B)&&(I=E<3?t:I,E=1),c=Vt(c);++x<E;){var k=d[x];k&&a(c,k,x,I)}return c})}function Mm(a,c){return function(d,x){if(d==null)return d;if(!qn(d))return a(d,x);for(var E=d.length,I=c?E:-1,B=Vt(d);(c?I--:++I<E)&&x(B[I],I,B)!==!1;);return d}}function Sm(a){return function(c,d,x){for(var E=-1,I=Vt(c),B=x(c),k=B.length;k--;){var V=B[a?k:++E];if(d(I[V],V,I)===!1)break}return c}}function eS(a,c,d){var x=c&y,E=go(a);function I(){var B=this&&this!==An&&this instanceof I?E:a;return B.apply(x?d:this,arguments)}return I}function bm(a){return function(c){c=Ft(c);var d=ea(c)?Li(c):t,x=d?d[0]:c.charAt(0),E=d?kr(d,1).join(""):c.slice(1);return x[a]()+E}}function la(a){return function(c){return Vu(Mg(xg(c).replace(Wy,"")),a,"")}}function go(a){return function(){var c=arguments;switch(c.length){case 0:return new a;case 1:return new a(c[0]);case 2:return new a(c[0],c[1]);case 3:return new a(c[0],c[1],c[2]);case 4:return new a(c[0],c[1],c[2],c[3]);case 5:return new a(c[0],c[1],c[2],c[3],c[4]);case 6:return new a(c[0],c[1],c[2],c[3],c[4],c[5]);case 7:return new a(c[0],c[1],c[2],c[3],c[4],c[5],c[6])}var d=aa(a.prototype),x=a.apply(d,c);return Qt(x)?x:d}}function tS(a,c,d){var x=go(a);function E(){for(var I=arguments.length,B=J(I),k=I,V=ca(E);k--;)B[k]=arguments[k];var le=I<3&&B[0]!==V&&B[I-1]!==V?[]:Or(B,V);if(I-=le.length,I<d)return Rm(a,c,Yl,E.placeholder,t,B,le,t,t,d-I);var ue=this&&this!==An&&this instanceof E?x:a;return ei(ue,this,B)}return E}function Em(a){return function(c,d,x){var E=Vt(c);if(!qn(c)){var I=Ke(d,3);c=Mn(c),d=function(k){return I(E[k],k,E)}}var B=a(c,d,x);return B>-1?E[I?c[B]:B]:t}}function wm(a){return ur(function(c){var d=c.length,x=d,E=xi.prototype.thru;for(a&&c.reverse();x--;){var I=c[x];if(typeof I!="function")throw new yi(o);if(E&&!B&&Ql(I)=="wrapper")var B=new xi([],!0)}for(x=B?x:d;++x<d;){I=c[x];var k=Ql(I),V=k=="wrapper"?bh(I):t;V&&Ah(V[0])&&V[1]==(C|S|L|R)&&!V[4].length&&V[9]==1?B=B[Ql(V[0])].apply(B,V[3]):B=I.length==1&&Ah(I)?B[k]():B.thru(I)}return function(){var le=arguments,ue=le[0];if(B&&le.length==1&&dt(ue))return B.plant(ue).value();for(var me=0,Re=d?c[me].apply(this,le):ue;++me<d;)Re=c[me].call(this,Re);return Re}})}function Yl(a,c,d,x,E,I,B,k,V,le){var ue=c&C,me=c&y,Re=c&_,Xe=c&(S|w),Qe=c&A,vt=Re?t:go(a);function je(){for(var wt=arguments.length,Rt=J(wt),ri=wt;ri--;)Rt[ri]=arguments[ri];if(Xe)var kn=ca(je),si=dx(Rt,kn);if(x&&(Rt=ym(Rt,x,E,Xe)),I&&(Rt=xm(Rt,I,B,Xe)),wt-=si,Xe&&wt<le){var ln=Or(Rt,kn);return Rm(a,c,Yl,je.placeholder,d,Rt,ln,k,V,le-wt)}var Di=me?d:this,pr=Re?Di[a]:a;return wt=Rt.length,k?Rt=MS(Rt,k):Qe&&wt>1&&Rt.reverse(),ue&&V<wt&&(Rt.length=V),this&&this!==An&&this instanceof je&&(pr=vt||go(pr)),pr.apply(Di,Rt)}return je}function Tm(a,c){return function(d,x){return CM(d,a,c(x),{})}}function Zl(a,c){return function(d,x){var E;if(d===t&&x===t)return c;if(d!==t&&(E=d),x!==t){if(E===t)return x;typeof d=="string"||typeof x=="string"?(d=ni(d),x=ni(x)):(d=hm(d),x=hm(x)),E=a(d,x)}return E}}function yh(a){return ur(function(c){return c=Zt(c,ti(Ke())),bt(function(d){var x=this;return a(c,function(E){return ei(E,x,d)})})})}function Jl(a,c){c=c===t?" ":ni(c);var d=c.length;if(d<2)return d?fh(c,a):c;var x=fh(c,Nl(a/ta(c)));return ea(c)?kr(Li(x),0,a).join(""):x.slice(0,a)}function nS(a,c,d,x){var E=c&y,I=go(a);function B(){for(var k=-1,V=arguments.length,le=-1,ue=x.length,me=J(ue+V),Re=this&&this!==An&&this instanceof B?I:a;++le<ue;)me[le]=x[le];for(;V--;)me[le++]=arguments[++k];return ei(Re,E?d:this,me)}return B}function Am(a){return function(c,d,x){return x&&typeof x!="number"&&zn(c,d,x)&&(d=x=t),c=dr(c),d===t?(d=c,c=0):d=dr(d),x=x===t?c<d?1:-1:dr(x),HM(c,d,x,a)}}function Kl(a){return function(c,d){return typeof c=="string"&&typeof d=="string"||(c=Ei(c),d=Ei(d)),a(c,d)}}function Rm(a,c,d,x,E,I,B,k,V,le){var ue=c&S,me=ue?B:t,Re=ue?t:B,Xe=ue?I:t,Qe=ue?t:I;c|=ue?L:T,c&=~(ue?T:L),c&b||(c&=~(y|_));var vt=[a,c,E,Xe,me,Qe,Re,k,V,le],je=d.apply(t,vt);return Ah(a)&&km(je,vt),je.placeholder=x,Hm(je,a,c)}function xh(a){var c=gn[a];return function(d,x){if(d=Ei(d),x=x==null?0:Pn(_t(x),292),x&&Hp(d)){var E=(Ft(d)+"e").split("e"),I=c(E[0]+"e"+(+E[1]+x));return E=(Ft(I)+"e").split("e"),+(E[0]+"e"+(+E[1]-x))}return c(d)}}var iS=ra&&1/Tl(new ra([,-0]))[1]==j?function(a){return new ra(a)}:Gh;function Cm(a){return function(c){var d=Ln(c);return d==re?Ju(c):d==rt?xx(c):fx(c,a(c))}}function cr(a,c,d,x,E,I,B,k){var V=c&_;if(!V&&typeof a!="function")throw new yi(o);var le=x?x.length:0;if(le||(c&=~(L|T),x=E=t),B=B===t?B:_n(_t(B),0),k=k===t?k:_t(k),le-=E?E.length:0,c&T){var ue=x,me=E;x=E=t}var Re=V?t:bh(a),Xe=[a,c,d,x,E,ue,me,I,B,k];if(Re&&vS(Xe,Re),a=Xe[0],c=Xe[1],d=Xe[2],x=Xe[3],E=Xe[4],k=Xe[9]=Xe[9]===t?V?0:a.length:_n(Xe[9]-le,0),!k&&c&(S|w)&&(c&=~(S|w)),!c||c==y)var Qe=eS(a,c,d);else c==S||c==w?Qe=tS(a,c,k):(c==L||c==(y|L))&&!E.length?Qe=nS(a,c,d,x):Qe=Yl.apply(t,Xe);var vt=Re?cm:km;return Hm(vt(Qe,Xe),a,c)}function Pm(a,c,d,x){return a===t||Ui(a,ia[d])&&!Bt.call(x,d)?c:a}function Lm(a,c,d,x,E,I){return Qt(a)&&Qt(c)&&(I.set(c,a),Wl(a,c,t,Lm,I),I.delete(c)),a}function rS(a){return yo(a)?t:a}function Im(a,c,d,x,E,I){var B=d&v,k=a.length,V=c.length;if(k!=V&&!(B&&V>k))return!1;var le=I.get(a),ue=I.get(c);if(le&&ue)return le==c&&ue==a;var me=-1,Re=!0,Xe=d&M?new fs:t;for(I.set(a,c),I.set(c,a);++me<k;){var Qe=a[me],vt=c[me];if(x)var je=B?x(vt,Qe,me,c,a,I):x(Qe,vt,me,a,c,I);if(je!==t){if(je)continue;Re=!1;break}if(Xe){if(!Wu(c,function(wt,Rt){if(!ro(Xe,Rt)&&(Qe===wt||E(Qe,wt,d,x,I)))return Xe.push(Rt)})){Re=!1;break}}else if(!(Qe===vt||E(Qe,vt,d,x,I))){Re=!1;break}}return I.delete(a),I.delete(c),Re}function sS(a,c,d,x,E,I,B){switch(d){case Se:if(a.byteLength!=c.byteLength||a.byteOffset!=c.byteOffset)return!1;a=a.buffer,c=c.buffer;case ve:return!(a.byteLength!=c.byteLength||!I(new Il(a),new Il(c)));case it:case Ze:case xe:return Ui(+a,+c);case et:return a.name==c.name&&a.message==c.message;case tt:case kt:return a==c+"";case re:var k=Ju;case rt:var V=x&v;if(k||(k=Tl),a.size!=c.size&&!V)return!1;var le=B.get(a);if(le)return le==c;x|=M,B.set(a,c);var ue=Im(k(a),k(c),x,E,I,B);return B.delete(a),ue;case F:if(co)return co.call(a)==co.call(c)}return!1}function aS(a,c,d,x,E,I){var B=d&v,k=Mh(a),V=k.length,le=Mh(c),ue=le.length;if(V!=ue&&!B)return!1;for(var me=V;me--;){var Re=k[me];if(!(B?Re in c:Bt.call(c,Re)))return!1}var Xe=I.get(a),Qe=I.get(c);if(Xe&&Qe)return Xe==c&&Qe==a;var vt=!0;I.set(a,c),I.set(c,a);for(var je=B;++me<V;){Re=k[me];var wt=a[Re],Rt=c[Re];if(x)var ri=B?x(Rt,wt,Re,c,a,I):x(wt,Rt,Re,a,c,I);if(!(ri===t?wt===Rt||E(wt,Rt,d,x,I):ri)){vt=!1;break}je||(je=Re=="constructor")}if(vt&&!je){var kn=a.constructor,si=c.constructor;kn!=si&&"constructor"in a&&"constructor"in c&&!(typeof kn=="function"&&kn instanceof kn&&typeof si=="function"&&si instanceof si)&&(vt=!1)}return I.delete(a),I.delete(c),vt}function ur(a){return Ch(Bm(a,t,qm),a+"")}function Mh(a){return Qp(a,Mn,wh)}function Sh(a){return Qp(a,Yn,Um)}var bh=Bl?function(a){return Bl.get(a)}:Gh;function Ql(a){for(var c=a.name+"",d=sa[c],x=Bt.call(sa,c)?d.length:0;x--;){var E=d[x],I=E.func;if(I==null||I==a)return E.name}return c}function ca(a){var c=Bt.call(P,"placeholder")?P:a;return c.placeholder}function Ke(){var a=P.iteratee||kh;return a=a===kh?tm:a,arguments.length?a(arguments[0],arguments[1]):a}function jl(a,c){var d=a.__data__;return pS(c)?d[typeof c=="string"?"string":"hash"]:d.map}function Eh(a){for(var c=Mn(a),d=c.length;d--;){var x=c[d],E=a[x];c[d]=[x,E,Nm(E)]}return c}function ms(a,c){var d=_x(a,c);return em(d)?d:t}function oS(a){var c=Bt.call(a,us),d=a[us];try{a[us]=t;var x=!0}catch{}var E=Pl.call(a);return x&&(c?a[us]=d:delete a[us]),E}var wh=Qu?function(a){return a==null?[]:(a=Vt(a),Ur(Qu(a),function(c){return zp.call(a,c)}))}:Vh,Um=Qu?function(a){for(var c=[];a;)Dr(c,wh(a)),a=Ul(a);return c}:Vh,Ln=Bn;(ju&&Ln(new ju(new ArrayBuffer(1)))!=Se||ao&&Ln(new ao)!=re||eh&&Ln(eh.resolve())!=Ue||ra&&Ln(new ra)!=rt||oo&&Ln(new oo)!=ee)&&(Ln=function(a){var c=Bn(a),d=c==Ne?a.constructor:t,x=d?gs(d):"";if(x)switch(x){case Vx:return Se;case Wx:return re;case Xx:return Ue;case $x:return rt;case qx:return ee}return c});function lS(a,c,d){for(var x=-1,E=d.length;++x<E;){var I=d[x],B=I.size;switch(I.type){case"drop":a+=B;break;case"dropRight":c-=B;break;case"take":c=Pn(c,a+B);break;case"takeRight":a=_n(a,c-B);break}}return{start:a,end:c}}function cS(a){var c=a.match(Ys);return c?c[1].split(bl):[]}function Dm(a,c,d){c=zr(c,a);for(var x=-1,E=c.length,I=!1;++x<E;){var B=Yi(c[x]);if(!(I=a!=null&&d(a,B)))break;a=a[B]}return I||++x!=E?I:(E=a==null?0:a.length,!!E&&ac(E)&&hr(B,E)&&(dt(a)||_s(a)))}function uS(a){var c=a.length,d=new a.constructor(c);return c&&typeof a[0]=="string"&&Bt.call(a,"index")&&(d.index=a.index,d.input=a.input),d}function Om(a){return typeof a.constructor=="function"&&!_o(a)?aa(Ul(a)):{}}function hS(a,c,d){var x=a.constructor;switch(c){case ve:return vh(a);case it:case Ze:return new x(+a);case Se:return YM(a,d);case We:case we:case se:case $e:case qe:case Ye:case ke:case He:case gt:return _m(a,d);case re:return new x;case xe:case kt:return new x(a);case tt:return ZM(a);case rt:return new x;case F:return JM(a)}}function fS(a,c){var d=c.length;if(!d)return a;var x=d-1;return c[x]=(d>1?"& ":"")+c[x],c=c.join(d>2?", ":" "),a.replace(Sl,`{
/* [wrapped with `+c+`] */
`)}function dS(a){return dt(a)||_s(a)||!!(kp&&a&&a[kp])}function hr(a,c){var d=typeof a;return c=c??oe,!!c&&(d=="number"||d!="symbol"&&Je.test(a))&&a>-1&&a%1==0&&a<c}function zn(a,c,d){if(!Qt(d))return!1;var x=typeof c;return(x=="number"?qn(d)&&hr(c,d.length):x=="string"&&c in d)?Ui(d[c],a):!1}function Th(a,c){if(dt(a))return!1;var d=typeof a;return d=="number"||d=="symbol"||d=="boolean"||a==null||ii(a)?!0:mi.test(a)||!Yt.test(a)||c!=null&&a in Vt(c)}function pS(a){var c=typeof a;return c=="string"||c=="number"||c=="symbol"||c=="boolean"?a!=="__proto__":a===null}function Ah(a){var c=Ql(a),d=P[c];if(typeof d!="function"||!(c in At.prototype))return!1;if(a===d)return!0;var x=bh(d);return!!x&&a===x[0]}function mS(a){return!!Np&&Np in a}var gS=Rl?fr:Wh;function _o(a){var c=a&&a.constructor,d=typeof c=="function"&&c.prototype||ia;return a===d}function Nm(a){return a===a&&!Qt(a)}function Fm(a,c){return function(d){return d==null?!1:d[a]===c&&(c!==t||a in Vt(d))}}function _S(a){var c=rc(a,function(x){return d.size===h&&d.clear(),x}),d=c.cache;return c}function vS(a,c){var d=a[1],x=c[1],E=d|x,I=E<(y|_|C),B=x==C&&d==S||x==C&&d==R&&a[7].length<=c[8]||x==(C|R)&&c[7].length<=c[8]&&d==S;if(!(I||B))return a;x&y&&(a[2]=c[2],E|=d&y?0:b);var k=c[3];if(k){var V=a[3];a[3]=V?ym(V,k,c[4]):k,a[4]=V?Or(a[3],f):c[4]}return k=c[5],k&&(V=a[5],a[5]=V?xm(V,k,c[6]):k,a[6]=V?Or(a[5],f):c[6]),k=c[7],k&&(a[7]=k),x&C&&(a[8]=a[8]==null?c[8]:Pn(a[8],c[8])),a[9]==null&&(a[9]=c[9]),a[0]=c[0],a[1]=E,a}function yS(a){var c=[];if(a!=null)for(var d in Vt(a))c.push(d);return c}function xS(a){return Pl.call(a)}function Bm(a,c,d){return c=_n(c===t?a.length-1:c,0),function(){for(var x=arguments,E=-1,I=_n(x.length-c,0),B=J(I);++E<I;)B[E]=x[c+E];E=-1;for(var k=J(c+1);++E<c;)k[E]=x[E];return k[c]=d(B),ei(a,this,k)}}function zm(a,c){return c.length<2?a:ps(a,Si(c,0,-1))}function MS(a,c){for(var d=a.length,x=Pn(c.length,d),E=$n(a);x--;){var I=c[x];a[x]=hr(I,d)?E[I]:t}return a}function Rh(a,c){if(!(c==="constructor"&&typeof a[c]=="function")&&c!="__proto__")return a[c]}var km=Gm(cm),vo=Nx||function(a,c){return An.setTimeout(a,c)},Ch=Gm(WM);function Hm(a,c,d){var x=c+"";return Ch(a,fS(x,SS(cS(x),d)))}function Gm(a){var c=0,d=0;return function(){var x=kx(),E=q-(x-d);if(d=x,E>0){if(++c>=ce)return arguments[0]}else c=0;return a.apply(t,arguments)}}function ec(a,c){var d=-1,x=a.length,E=x-1;for(c=c===t?x:c;++d<c;){var I=hh(d,E),B=a[I];a[I]=a[d],a[d]=B}return a.length=c,a}var Vm=_S(function(a){var c=[];return a.charCodeAt(0)===46&&c.push(""),a.replace(Tn,function(d,x,E,I){c.push(E?I.replace(Du,"$1"):x||d)}),c});function Yi(a){if(typeof a=="string"||ii(a))return a;var c=a+"";return c=="0"&&1/a==-j?"-0":c}function gs(a){if(a!=null){try{return Cl.call(a)}catch{}try{return a+""}catch{}}return""}function SS(a,c){return vi(_e,function(d){var x="_."+d[0];c&d[1]&&!El(a,x)&&a.push(x)}),a.sort()}function Wm(a){if(a instanceof At)return a.clone();var c=new xi(a.__wrapped__,a.__chain__);return c.__actions__=$n(a.__actions__),c.__index__=a.__index__,c.__values__=a.__values__,c}function bS(a,c,d){(d?zn(a,c,d):c===t)?c=1:c=_n(_t(c),0);var x=a==null?0:a.length;if(!x||c<1)return[];for(var E=0,I=0,B=J(Nl(x/c));E<x;)B[I++]=Si(a,E,E+=c);return B}function ES(a){for(var c=-1,d=a==null?0:a.length,x=0,E=[];++c<d;){var I=a[c];I&&(E[x++]=I)}return E}function wS(){var a=arguments.length;if(!a)return[];for(var c=J(a-1),d=arguments[0],x=a;x--;)c[x-1]=arguments[x];return Dr(dt(d)?$n(d):[d],Rn(c,1))}var TS=bt(function(a,c){return on(a)?ho(a,Rn(c,1,on,!0)):[]}),AS=bt(function(a,c){var d=bi(c);return on(d)&&(d=t),on(a)?ho(a,Rn(c,1,on,!0),Ke(d,2)):[]}),RS=bt(function(a,c){var d=bi(c);return on(d)&&(d=t),on(a)?ho(a,Rn(c,1,on,!0),t,d):[]});function CS(a,c,d){var x=a==null?0:a.length;return x?(c=d||c===t?1:_t(c),Si(a,c<0?0:c,x)):[]}function PS(a,c,d){var x=a==null?0:a.length;return x?(c=d||c===t?1:_t(c),c=x-c,Si(a,0,c<0?0:c)):[]}function LS(a,c){return a&&a.length?$l(a,Ke(c,3),!0,!0):[]}function IS(a,c){return a&&a.length?$l(a,Ke(c,3),!0):[]}function US(a,c,d,x){var E=a==null?0:a.length;return E?(d&&typeof d!="number"&&zn(a,c,d)&&(d=0,x=E),wM(a,c,d,x)):[]}function Xm(a,c,d){var x=a==null?0:a.length;if(!x)return-1;var E=d==null?0:_t(d);return E<0&&(E=_n(x+E,0)),wl(a,Ke(c,3),E)}function $m(a,c,d){var x=a==null?0:a.length;if(!x)return-1;var E=x-1;return d!==t&&(E=_t(d),E=d<0?_n(x+E,0):Pn(E,x-1)),wl(a,Ke(c,3),E,!0)}function qm(a){var c=a==null?0:a.length;return c?Rn(a,1):[]}function DS(a){var c=a==null?0:a.length;return c?Rn(a,j):[]}function OS(a,c){var d=a==null?0:a.length;return d?(c=c===t?1:_t(c),Rn(a,c)):[]}function NS(a){for(var c=-1,d=a==null?0:a.length,x={};++c<d;){var E=a[c];x[E[0]]=E[1]}return x}function Ym(a){return a&&a.length?a[0]:t}function FS(a,c,d){var x=a==null?0:a.length;if(!x)return-1;var E=d==null?0:_t(d);return E<0&&(E=_n(x+E,0)),js(a,c,E)}function BS(a){var c=a==null?0:a.length;return c?Si(a,0,-1):[]}var zS=bt(function(a){var c=Zt(a,gh);return c.length&&c[0]===a[0]?ah(c):[]}),kS=bt(function(a){var c=bi(a),d=Zt(a,gh);return c===bi(d)?c=t:d.pop(),d.length&&d[0]===a[0]?ah(d,Ke(c,2)):[]}),HS=bt(function(a){var c=bi(a),d=Zt(a,gh);return c=typeof c=="function"?c:t,c&&d.pop(),d.length&&d[0]===a[0]?ah(d,t,c):[]});function GS(a,c){return a==null?"":Bx.call(a,c)}function bi(a){var c=a==null?0:a.length;return c?a[c-1]:t}function VS(a,c,d){var x=a==null?0:a.length;if(!x)return-1;var E=x;return d!==t&&(E=_t(d),E=E<0?_n(x+E,0):Pn(E,x-1)),c===c?Sx(a,c,E):wl(a,Rp,E,!0)}function WS(a,c){return a&&a.length?sm(a,_t(c)):t}var XS=bt(Zm);function Zm(a,c){return a&&a.length&&c&&c.length?uh(a,c):a}function $S(a,c,d){return a&&a.length&&c&&c.length?uh(a,c,Ke(d,2)):a}function qS(a,c,d){return a&&a.length&&c&&c.length?uh(a,c,t,d):a}var YS=ur(function(a,c){var d=a==null?0:a.length,x=nh(a,c);return lm(a,Zt(c,function(E){return hr(E,d)?+E:E}).sort(vm)),x});function ZS(a,c){var d=[];if(!(a&&a.length))return d;var x=-1,E=[],I=a.length;for(c=Ke(c,3);++x<I;){var B=a[x];c(B,x,a)&&(d.push(B),E.push(x))}return lm(a,E),d}function Ph(a){return a==null?a:Gx.call(a)}function JS(a,c,d){var x=a==null?0:a.length;return x?(d&&typeof d!="number"&&zn(a,c,d)?(c=0,d=x):(c=c==null?0:_t(c),d=d===t?x:_t(d)),Si(a,c,d)):[]}function KS(a,c){return Xl(a,c)}function QS(a,c,d){return dh(a,c,Ke(d,2))}function jS(a,c){var d=a==null?0:a.length;if(d){var x=Xl(a,c);if(x<d&&Ui(a[x],c))return x}return-1}function eb(a,c){return Xl(a,c,!0)}function tb(a,c,d){return dh(a,c,Ke(d,2),!0)}function nb(a,c){var d=a==null?0:a.length;if(d){var x=Xl(a,c,!0)-1;if(Ui(a[x],c))return x}return-1}function ib(a){return a&&a.length?um(a):[]}function rb(a,c){return a&&a.length?um(a,Ke(c,2)):[]}function sb(a){var c=a==null?0:a.length;return c?Si(a,1,c):[]}function ab(a,c,d){return a&&a.length?(c=d||c===t?1:_t(c),Si(a,0,c<0?0:c)):[]}function ob(a,c,d){var x=a==null?0:a.length;return x?(c=d||c===t?1:_t(c),c=x-c,Si(a,c<0?0:c,x)):[]}function lb(a,c){return a&&a.length?$l(a,Ke(c,3),!1,!0):[]}function cb(a,c){return a&&a.length?$l(a,Ke(c,3)):[]}var ub=bt(function(a){return Br(Rn(a,1,on,!0))}),hb=bt(function(a){var c=bi(a);return on(c)&&(c=t),Br(Rn(a,1,on,!0),Ke(c,2))}),fb=bt(function(a){var c=bi(a);return c=typeof c=="function"?c:t,Br(Rn(a,1,on,!0),t,c)});function db(a){return a&&a.length?Br(a):[]}function pb(a,c){return a&&a.length?Br(a,Ke(c,2)):[]}function mb(a,c){return c=typeof c=="function"?c:t,a&&a.length?Br(a,t,c):[]}function Lh(a){if(!(a&&a.length))return[];var c=0;return a=Ur(a,function(d){if(on(d))return c=_n(d.length,c),!0}),Yu(c,function(d){return Zt(a,Xu(d))})}function Jm(a,c){if(!(a&&a.length))return[];var d=Lh(a);return c==null?d:Zt(d,function(x){return ei(c,t,x)})}var gb=bt(function(a,c){return on(a)?ho(a,c):[]}),_b=bt(function(a){return mh(Ur(a,on))}),vb=bt(function(a){var c=bi(a);return on(c)&&(c=t),mh(Ur(a,on),Ke(c,2))}),yb=bt(function(a){var c=bi(a);return c=typeof c=="function"?c:t,mh(Ur(a,on),t,c)}),xb=bt(Lh);function Mb(a,c){return pm(a||[],c||[],uo)}function Sb(a,c){return pm(a||[],c||[],mo)}var bb=bt(function(a){var c=a.length,d=c>1?a[c-1]:t;return d=typeof d=="function"?(a.pop(),d):t,Jm(a,d)});function Km(a){var c=P(a);return c.__chain__=!0,c}function Eb(a,c){return c(a),a}function tc(a,c){return c(a)}var wb=ur(function(a){var c=a.length,d=c?a[0]:0,x=this.__wrapped__,E=function(I){return nh(I,a)};return c>1||this.__actions__.length||!(x instanceof At)||!hr(d)?this.thru(E):(x=x.slice(d,+d+(c?1:0)),x.__actions__.push({func:tc,args:[E],thisArg:t}),new xi(x,this.__chain__).thru(function(I){return c&&!I.length&&I.push(t),I}))});function Tb(){return Km(this)}function Ab(){return new xi(this.value(),this.__chain__)}function Rb(){this.__values__===t&&(this.__values__=hg(this.value()));var a=this.__index__>=this.__values__.length,c=a?t:this.__values__[this.__index__++];return{done:a,value:c}}function Cb(){return this}function Pb(a){for(var c,d=this;d instanceof kl;){var x=Wm(d);x.__index__=0,x.__values__=t,c?E.__wrapped__=x:c=x;var E=x;d=d.__wrapped__}return E.__wrapped__=a,c}function Lb(){var a=this.__wrapped__;if(a instanceof At){var c=a;return this.__actions__.length&&(c=new At(this)),c=c.reverse(),c.__actions__.push({func:tc,args:[Ph],thisArg:t}),new xi(c,this.__chain__)}return this.thru(Ph)}function Ib(){return dm(this.__wrapped__,this.__actions__)}var Ub=ql(function(a,c,d){Bt.call(a,d)?++a[d]:lr(a,d,1)});function Db(a,c,d){var x=dt(a)?Tp:EM;return d&&zn(a,c,d)&&(c=t),x(a,Ke(c,3))}function Ob(a,c){var d=dt(a)?Ur:Jp;return d(a,Ke(c,3))}var Nb=Em(Xm),Fb=Em($m);function Bb(a,c){return Rn(nc(a,c),1)}function zb(a,c){return Rn(nc(a,c),j)}function kb(a,c,d){return d=d===t?1:_t(d),Rn(nc(a,c),d)}function Qm(a,c){var d=dt(a)?vi:Fr;return d(a,Ke(c,3))}function jm(a,c){var d=dt(a)?sx:Zp;return d(a,Ke(c,3))}var Hb=ql(function(a,c,d){Bt.call(a,d)?a[d].push(c):lr(a,d,[c])});function Gb(a,c,d,x){a=qn(a)?a:ha(a),d=d&&!x?_t(d):0;var E=a.length;return d<0&&(d=_n(E+d,0)),oc(a)?d<=E&&a.indexOf(c,d)>-1:!!E&&js(a,c,d)>-1}var Vb=bt(function(a,c,d){var x=-1,E=typeof c=="function",I=qn(a)?J(a.length):[];return Fr(a,function(B){I[++x]=E?ei(c,B,d):fo(B,c,d)}),I}),Wb=ql(function(a,c,d){lr(a,d,c)});function nc(a,c){var d=dt(a)?Zt:nm;return d(a,Ke(c,3))}function Xb(a,c,d,x){return a==null?[]:(dt(c)||(c=c==null?[]:[c]),d=x?t:d,dt(d)||(d=d==null?[]:[d]),am(a,c,d))}var $b=ql(function(a,c,d){a[d?0:1].push(c)},function(){return[[],[]]});function qb(a,c,d){var x=dt(a)?Vu:Pp,E=arguments.length<3;return x(a,Ke(c,4),d,E,Fr)}function Yb(a,c,d){var x=dt(a)?ax:Pp,E=arguments.length<3;return x(a,Ke(c,4),d,E,Zp)}function Zb(a,c){var d=dt(a)?Ur:Jp;return d(a,sc(Ke(c,3)))}function Jb(a){var c=dt(a)?Xp:GM;return c(a)}function Kb(a,c,d){(d?zn(a,c,d):c===t)?c=1:c=_t(c);var x=dt(a)?yM:VM;return x(a,c)}function Qb(a){var c=dt(a)?xM:XM;return c(a)}function jb(a){if(a==null)return 0;if(qn(a))return oc(a)?ta(a):a.length;var c=Ln(a);return c==re||c==rt?a.size:lh(a).length}function e1(a,c,d){var x=dt(a)?Wu:$M;return d&&zn(a,c,d)&&(c=t),x(a,Ke(c,3))}var t1=bt(function(a,c){if(a==null)return[];var d=c.length;return d>1&&zn(a,c[0],c[1])?c=[]:d>2&&zn(c[0],c[1],c[2])&&(c=[c[0]]),am(a,Rn(c,1),[])}),ic=Ox||function(){return An.Date.now()};function n1(a,c){if(typeof c!="function")throw new yi(o);return a=_t(a),function(){if(--a<1)return c.apply(this,arguments)}}function eg(a,c,d){return c=d?t:c,c=a&&c==null?a.length:c,cr(a,C,t,t,t,t,c)}function tg(a,c){var d;if(typeof c!="function")throw new yi(o);return a=_t(a),function(){return--a>0&&(d=c.apply(this,arguments)),a<=1&&(c=t),d}}var Ih=bt(function(a,c,d){var x=y;if(d.length){var E=Or(d,ca(Ih));x|=L}return cr(a,x,c,d,E)}),ng=bt(function(a,c,d){var x=y|_;if(d.length){var E=Or(d,ca(ng));x|=L}return cr(c,x,a,d,E)});function ig(a,c,d){c=d?t:c;var x=cr(a,S,t,t,t,t,t,c);return x.placeholder=ig.placeholder,x}function rg(a,c,d){c=d?t:c;var x=cr(a,w,t,t,t,t,t,c);return x.placeholder=rg.placeholder,x}function sg(a,c,d){var x,E,I,B,k,V,le=0,ue=!1,me=!1,Re=!0;if(typeof a!="function")throw new yi(o);c=Ei(c)||0,Qt(d)&&(ue=!!d.leading,me="maxWait"in d,I=me?_n(Ei(d.maxWait)||0,c):I,Re="trailing"in d?!!d.trailing:Re);function Xe(ln){var Di=x,pr=E;return x=E=t,le=ln,B=a.apply(pr,Di),B}function Qe(ln){return le=ln,k=vo(wt,c),ue?Xe(ln):B}function vt(ln){var Di=ln-V,pr=ln-le,Eg=c-Di;return me?Pn(Eg,I-pr):Eg}function je(ln){var Di=ln-V,pr=ln-le;return V===t||Di>=c||Di<0||me&&pr>=I}function wt(){var ln=ic();if(je(ln))return Rt(ln);k=vo(wt,vt(ln))}function Rt(ln){return k=t,Re&&x?Xe(ln):(x=E=t,B)}function ri(){k!==t&&mm(k),le=0,x=V=E=k=t}function kn(){return k===t?B:Rt(ic())}function si(){var ln=ic(),Di=je(ln);if(x=arguments,E=this,V=ln,Di){if(k===t)return Qe(V);if(me)return mm(k),k=vo(wt,c),Xe(V)}return k===t&&(k=vo(wt,c)),B}return si.cancel=ri,si.flush=kn,si}var i1=bt(function(a,c){return Yp(a,1,c)}),r1=bt(function(a,c,d){return Yp(a,Ei(c)||0,d)});function s1(a){return cr(a,A)}function rc(a,c){if(typeof a!="function"||c!=null&&typeof c!="function")throw new yi(o);var d=function(){var x=arguments,E=c?c.apply(this,x):x[0],I=d.cache;if(I.has(E))return I.get(E);var B=a.apply(this,x);return d.cache=I.set(E,B)||I,B};return d.cache=new(rc.Cache||or),d}rc.Cache=or;function sc(a){if(typeof a!="function")throw new yi(o);return function(){var c=arguments;switch(c.length){case 0:return!a.call(this);case 1:return!a.call(this,c[0]);case 2:return!a.call(this,c[0],c[1]);case 3:return!a.call(this,c[0],c[1],c[2])}return!a.apply(this,c)}}function a1(a){return tg(2,a)}var o1=qM(function(a,c){c=c.length==1&&dt(c[0])?Zt(c[0],ti(Ke())):Zt(Rn(c,1),ti(Ke()));var d=c.length;return bt(function(x){for(var E=-1,I=Pn(x.length,d);++E<I;)x[E]=c[E].call(this,x[E]);return ei(a,this,x)})}),Uh=bt(function(a,c){var d=Or(c,ca(Uh));return cr(a,L,t,c,d)}),ag=bt(function(a,c){var d=Or(c,ca(ag));return cr(a,T,t,c,d)}),l1=ur(function(a,c){return cr(a,R,t,t,t,c)});function c1(a,c){if(typeof a!="function")throw new yi(o);return c=c===t?c:_t(c),bt(a,c)}function u1(a,c){if(typeof a!="function")throw new yi(o);return c=c==null?0:_n(_t(c),0),bt(function(d){var x=d[c],E=kr(d,0,c);return x&&Dr(E,x),ei(a,this,E)})}function h1(a,c,d){var x=!0,E=!0;if(typeof a!="function")throw new yi(o);return Qt(d)&&(x="leading"in d?!!d.leading:x,E="trailing"in d?!!d.trailing:E),sg(a,c,{leading:x,maxWait:c,trailing:E})}function f1(a){return eg(a,1)}function d1(a,c){return Uh(_h(c),a)}function p1(){if(!arguments.length)return[];var a=arguments[0];return dt(a)?a:[a]}function m1(a){return Mi(a,g)}function g1(a,c){return c=typeof c=="function"?c:t,Mi(a,g,c)}function _1(a){return Mi(a,p|g)}function v1(a,c){return c=typeof c=="function"?c:t,Mi(a,p|g,c)}function y1(a,c){return c==null||qp(a,c,Mn(c))}function Ui(a,c){return a===c||a!==a&&c!==c}var x1=Kl(sh),M1=Kl(function(a,c){return a>=c}),_s=jp(function(){return arguments}())?jp:function(a){return rn(a)&&Bt.call(a,"callee")&&!zp.call(a,"callee")},dt=J.isArray,S1=xp?ti(xp):PM;function qn(a){return a!=null&&ac(a.length)&&!fr(a)}function on(a){return rn(a)&&qn(a)}function b1(a){return a===!0||a===!1||rn(a)&&Bn(a)==it}var Hr=Fx||Wh,E1=Mp?ti(Mp):LM;function w1(a){return rn(a)&&a.nodeType===1&&!yo(a)}function T1(a){if(a==null)return!0;if(qn(a)&&(dt(a)||typeof a=="string"||typeof a.splice=="function"||Hr(a)||ua(a)||_s(a)))return!a.length;var c=Ln(a);if(c==re||c==rt)return!a.size;if(_o(a))return!lh(a).length;for(var d in a)if(Bt.call(a,d))return!1;return!0}function A1(a,c){return po(a,c)}function R1(a,c,d){d=typeof d=="function"?d:t;var x=d?d(a,c):t;return x===t?po(a,c,t,d):!!x}function Dh(a){if(!rn(a))return!1;var c=Bn(a);return c==et||c==Nt||typeof a.message=="string"&&typeof a.name=="string"&&!yo(a)}function C1(a){return typeof a=="number"&&Hp(a)}function fr(a){if(!Qt(a))return!1;var c=Bn(a);return c==z||c==Me||c==Ge||c==Fe}function og(a){return typeof a=="number"&&a==_t(a)}function ac(a){return typeof a=="number"&&a>-1&&a%1==0&&a<=oe}function Qt(a){var c=typeof a;return a!=null&&(c=="object"||c=="function")}function rn(a){return a!=null&&typeof a=="object"}var lg=Sp?ti(Sp):UM;function P1(a,c){return a===c||oh(a,c,Eh(c))}function L1(a,c,d){return d=typeof d=="function"?d:t,oh(a,c,Eh(c),d)}function I1(a){return cg(a)&&a!=+a}function U1(a){if(gS(a))throw new lt(r);return em(a)}function D1(a){return a===null}function O1(a){return a==null}function cg(a){return typeof a=="number"||rn(a)&&Bn(a)==xe}function yo(a){if(!rn(a)||Bn(a)!=Ne)return!1;var c=Ul(a);if(c===null)return!0;var d=Bt.call(c,"constructor")&&c.constructor;return typeof d=="function"&&d instanceof d&&Cl.call(d)==Lx}var Oh=bp?ti(bp):DM;function N1(a){return og(a)&&a>=-oe&&a<=oe}var ug=Ep?ti(Ep):OM;function oc(a){return typeof a=="string"||!dt(a)&&rn(a)&&Bn(a)==kt}function ii(a){return typeof a=="symbol"||rn(a)&&Bn(a)==F}var ua=wp?ti(wp):NM;function F1(a){return a===t}function B1(a){return rn(a)&&Ln(a)==ee}function z1(a){return rn(a)&&Bn(a)==ye}var k1=Kl(ch),H1=Kl(function(a,c){return a<=c});function hg(a){if(!a)return[];if(qn(a))return oc(a)?Li(a):$n(a);if(so&&a[so])return yx(a[so]());var c=Ln(a),d=c==re?Ju:c==rt?Tl:ha;return d(a)}function dr(a){if(!a)return a===0?a:0;if(a=Ei(a),a===j||a===-j){var c=a<0?-1:1;return c*de}return a===a?a:0}function _t(a){var c=dr(a),d=c%1;return c===c?d?c-d:c:0}function fg(a){return a?ds(_t(a),0,Ee):0}function Ei(a){if(typeof a=="number")return a;if(ii(a))return te;if(Qt(a)){var c=typeof a.valueOf=="function"?a.valueOf():a;a=Qt(c)?c+"":c}if(typeof a!="string")return a===0?a:+a;a=Lp(a);var d=$.test(a);return d||Be.test(a)?nx(a.slice(2),d?2:8):ne.test(a)?te:+a}function dg(a){return qi(a,Yn(a))}function G1(a){return a?ds(_t(a),-oe,oe):a===0?a:0}function Ft(a){return a==null?"":ni(a)}var V1=oa(function(a,c){if(_o(c)||qn(c)){qi(c,Mn(c),a);return}for(var d in c)Bt.call(c,d)&&uo(a,d,c[d])}),pg=oa(function(a,c){qi(c,Yn(c),a)}),lc=oa(function(a,c,d,x){qi(c,Yn(c),a,x)}),W1=oa(function(a,c,d,x){qi(c,Mn(c),a,x)}),X1=ur(nh);function $1(a,c){var d=aa(a);return c==null?d:$p(d,c)}var q1=bt(function(a,c){a=Vt(a);var d=-1,x=c.length,E=x>2?c[2]:t;for(E&&zn(c[0],c[1],E)&&(x=1);++d<x;)for(var I=c[d],B=Yn(I),k=-1,V=B.length;++k<V;){var le=B[k],ue=a[le];(ue===t||Ui(ue,ia[le])&&!Bt.call(a,le))&&(a[le]=I[le])}return a}),Y1=bt(function(a){return a.push(t,Lm),ei(mg,t,a)});function Z1(a,c){return Ap(a,Ke(c,3),$i)}function J1(a,c){return Ap(a,Ke(c,3),rh)}function K1(a,c){return a==null?a:ih(a,Ke(c,3),Yn)}function Q1(a,c){return a==null?a:Kp(a,Ke(c,3),Yn)}function j1(a,c){return a&&$i(a,Ke(c,3))}function eE(a,c){return a&&rh(a,Ke(c,3))}function tE(a){return a==null?[]:Vl(a,Mn(a))}function nE(a){return a==null?[]:Vl(a,Yn(a))}function Nh(a,c,d){var x=a==null?t:ps(a,c);return x===t?d:x}function iE(a,c){return a!=null&&Dm(a,c,TM)}function Fh(a,c){return a!=null&&Dm(a,c,AM)}var rE=Tm(function(a,c,d){c!=null&&typeof c.toString!="function"&&(c=Pl.call(c)),a[c]=d},zh(Zn)),sE=Tm(function(a,c,d){c!=null&&typeof c.toString!="function"&&(c=Pl.call(c)),Bt.call(a,c)?a[c].push(d):a[c]=[d]},Ke),aE=bt(fo);function Mn(a){return qn(a)?Wp(a):lh(a)}function Yn(a){return qn(a)?Wp(a,!0):FM(a)}function oE(a,c){var d={};return c=Ke(c,3),$i(a,function(x,E,I){lr(d,c(x,E,I),x)}),d}function lE(a,c){var d={};return c=Ke(c,3),$i(a,function(x,E,I){lr(d,E,c(x,E,I))}),d}var cE=oa(function(a,c,d){Wl(a,c,d)}),mg=oa(function(a,c,d,x){Wl(a,c,d,x)}),uE=ur(function(a,c){var d={};if(a==null)return d;var x=!1;c=Zt(c,function(I){return I=zr(I,a),x||(x=I.length>1),I}),qi(a,Sh(a),d),x&&(d=Mi(d,p|m|g,rS));for(var E=c.length;E--;)ph(d,c[E]);return d});function hE(a,c){return gg(a,sc(Ke(c)))}var fE=ur(function(a,c){return a==null?{}:zM(a,c)});function gg(a,c){if(a==null)return{};var d=Zt(Sh(a),function(x){return[x]});return c=Ke(c),om(a,d,function(x,E){return c(x,E[0])})}function dE(a,c,d){c=zr(c,a);var x=-1,E=c.length;for(E||(E=1,a=t);++x<E;){var I=a==null?t:a[Yi(c[x])];I===t&&(x=E,I=d),a=fr(I)?I.call(a):I}return a}function pE(a,c,d){return a==null?a:mo(a,c,d)}function mE(a,c,d,x){return x=typeof x=="function"?x:t,a==null?a:mo(a,c,d,x)}var _g=Cm(Mn),vg=Cm(Yn);function gE(a,c,d){var x=dt(a),E=x||Hr(a)||ua(a);if(c=Ke(c,4),d==null){var I=a&&a.constructor;E?d=x?new I:[]:Qt(a)?d=fr(I)?aa(Ul(a)):{}:d={}}return(E?vi:$i)(a,function(B,k,V){return c(d,B,k,V)}),d}function _E(a,c){return a==null?!0:ph(a,c)}function vE(a,c,d){return a==null?a:fm(a,c,_h(d))}function yE(a,c,d,x){return x=typeof x=="function"?x:t,a==null?a:fm(a,c,_h(d),x)}function ha(a){return a==null?[]:Zu(a,Mn(a))}function xE(a){return a==null?[]:Zu(a,Yn(a))}function ME(a,c,d){return d===t&&(d=c,c=t),d!==t&&(d=Ei(d),d=d===d?d:0),c!==t&&(c=Ei(c),c=c===c?c:0),ds(Ei(a),c,d)}function SE(a,c,d){return c=dr(c),d===t?(d=c,c=0):d=dr(d),a=Ei(a),RM(a,c,d)}function bE(a,c,d){if(d&&typeof d!="boolean"&&zn(a,c,d)&&(c=d=t),d===t&&(typeof c=="boolean"?(d=c,c=t):typeof a=="boolean"&&(d=a,a=t)),a===t&&c===t?(a=0,c=1):(a=dr(a),c===t?(c=a,a=0):c=dr(c)),a>c){var x=a;a=c,c=x}if(d||a%1||c%1){var E=Gp();return Pn(a+E*(c-a+tx("1e-"+((E+"").length-1))),c)}return hh(a,c)}var EE=la(function(a,c,d){return c=c.toLowerCase(),a+(d?yg(c):c)});function yg(a){return Bh(Ft(a).toLowerCase())}function xg(a){return a=Ft(a),a&&a.replace(st,px).replace(Xy,"")}function wE(a,c,d){a=Ft(a),c=ni(c);var x=a.length;d=d===t?x:ds(_t(d),0,x);var E=d;return d-=c.length,d>=0&&a.slice(d,E)==c}function TE(a){return a=Ft(a),a&&Ct.test(a)?a.replace(be,mx):a}function AE(a){return a=Ft(a),a&&Ml.test(a)?a.replace($s,"\\$&"):a}var RE=la(function(a,c,d){return a+(d?"-":"")+c.toLowerCase()}),CE=la(function(a,c,d){return a+(d?" ":"")+c.toLowerCase()}),PE=bm("toLowerCase");function LE(a,c,d){a=Ft(a),c=_t(c);var x=c?ta(a):0;if(!c||x>=c)return a;var E=(c-x)/2;return Jl(Fl(E),d)+a+Jl(Nl(E),d)}function IE(a,c,d){a=Ft(a),c=_t(c);var x=c?ta(a):0;return c&&x<c?a+Jl(c-x,d):a}function UE(a,c,d){a=Ft(a),c=_t(c);var x=c?ta(a):0;return c&&x<c?Jl(c-x,d)+a:a}function DE(a,c,d){return d||c==null?c=0:c&&(c=+c),Hx(Ft(a).replace(eo,""),c||0)}function OE(a,c,d){return(d?zn(a,c,d):c===t)?c=1:c=_t(c),fh(Ft(a),c)}function NE(){var a=arguments,c=Ft(a[0]);return a.length<3?c:c.replace(a[1],a[2])}var FE=la(function(a,c,d){return a+(d?"_":"")+c.toLowerCase()});function BE(a,c,d){return d&&typeof d!="number"&&zn(a,c,d)&&(c=d=t),d=d===t?Ee:d>>>0,d?(a=Ft(a),a&&(typeof c=="string"||c!=null&&!Oh(c))&&(c=ni(c),!c&&ea(a))?kr(Li(a),0,d):a.split(c,d)):[]}var zE=la(function(a,c,d){return a+(d?" ":"")+Bh(c)});function kE(a,c,d){return a=Ft(a),d=d==null?0:ds(_t(d),0,a.length),c=ni(c),a.slice(d,d+c.length)==c}function HE(a,c,d){var x=P.templateSettings;d&&zn(a,c,d)&&(c=t),a=Ft(a),c=lc({},c,x,Pm);var E=lc({},c.imports,x.imports,Pm),I=Mn(E),B=Zu(E,I),k,V,le=0,ue=c.interpolate||nt,me="__p += '",Re=Ku((c.escape||nt).source+"|"+ue.source+"|"+(ue===Xi?O:nt).source+"|"+(c.evaluate||nt).source+"|$","g"),Xe="//# sourceURL="+(Bt.call(c,"sourceURL")?(c.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++Jy+"]")+`
`;a.replace(Re,function(je,wt,Rt,ri,kn,si){return Rt||(Rt=ri),me+=a.slice(le,si).replace(St,gx),wt&&(k=!0,me+=`' +
__e(`+wt+`) +
'`),kn&&(V=!0,me+=`';
`+kn+`;
__p += '`),Rt&&(me+=`' +
((__t = (`+Rt+`)) == null ? '' : __t) +
'`),le=si+je.length,je}),me+=`';
`;var Qe=Bt.call(c,"variable")&&c.variable;if(!Qe)me=`with (obj) {
`+me+`
}
`;else if(Uu.test(Qe))throw new lt(l);me=(V?me.replace(Ht,""):me).replace(H,"$1").replace(Ae,"$1;"),me="function("+(Qe||"obj")+`) {
`+(Qe?"":`obj || (obj = {});
`)+"var __t, __p = ''"+(k?", __e = _.escape":"")+(V?`, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
`:`;
`)+me+`return __p
}`;var vt=Sg(function(){return Dt(I,Xe+"return "+me).apply(t,B)});if(vt.source=me,Dh(vt))throw vt;return vt}function GE(a){return Ft(a).toLowerCase()}function VE(a){return Ft(a).toUpperCase()}function WE(a,c,d){if(a=Ft(a),a&&(d||c===t))return Lp(a);if(!a||!(c=ni(c)))return a;var x=Li(a),E=Li(c),I=Ip(x,E),B=Up(x,E)+1;return kr(x,I,B).join("")}function XE(a,c,d){if(a=Ft(a),a&&(d||c===t))return a.slice(0,Op(a)+1);if(!a||!(c=ni(c)))return a;var x=Li(a),E=Up(x,Li(c))+1;return kr(x,0,E).join("")}function $E(a,c,d){if(a=Ft(a),a&&(d||c===t))return a.replace(eo,"");if(!a||!(c=ni(c)))return a;var x=Li(a),E=Ip(x,Li(c));return kr(x,E).join("")}function qE(a,c){var d=D,x=X;if(Qt(c)){var E="separator"in c?c.separator:E;d="length"in c?_t(c.length):d,x="omission"in c?ni(c.omission):x}a=Ft(a);var I=a.length;if(ea(a)){var B=Li(a);I=B.length}if(d>=I)return a;var k=d-ta(x);if(k<1)return x;var V=B?kr(B,0,k).join(""):a.slice(0,k);if(E===t)return V+x;if(B&&(k+=V.length-k),Oh(E)){if(a.slice(k).search(E)){var le,ue=V;for(E.global||(E=Ku(E.source,Ft(Z.exec(E))+"g")),E.lastIndex=0;le=E.exec(ue);)var me=le.index;V=V.slice(0,me===t?k:me)}}else if(a.indexOf(ni(E),k)!=k){var Re=V.lastIndexOf(E);Re>-1&&(V=V.slice(0,Re))}return V+x}function YE(a){return a=Ft(a),a&&Ce.test(a)?a.replace(K,bx):a}var ZE=la(function(a,c,d){return a+(d?" ":"")+c.toUpperCase()}),Bh=bm("toUpperCase");function Mg(a,c,d){return a=Ft(a),c=d?t:c,c===t?vx(a)?Tx(a):cx(a):a.match(c)||[]}var Sg=bt(function(a,c){try{return ei(a,t,c)}catch(d){return Dh(d)?d:new lt(d)}}),JE=ur(function(a,c){return vi(c,function(d){d=Yi(d),lr(a,d,Ih(a[d],a))}),a});function KE(a){var c=a==null?0:a.length,d=Ke();return a=c?Zt(a,function(x){if(typeof x[1]!="function")throw new yi(o);return[d(x[0]),x[1]]}):[],bt(function(x){for(var E=-1;++E<c;){var I=a[E];if(ei(I[0],this,x))return ei(I[1],this,x)}})}function QE(a){return bM(Mi(a,p))}function zh(a){return function(){return a}}function jE(a,c){return a==null||a!==a?c:a}var ew=wm(),tw=wm(!0);function Zn(a){return a}function kh(a){return tm(typeof a=="function"?a:Mi(a,p))}function nw(a){return im(Mi(a,p))}function iw(a,c){return rm(a,Mi(c,p))}var rw=bt(function(a,c){return function(d){return fo(d,a,c)}}),sw=bt(function(a,c){return function(d){return fo(a,d,c)}});function Hh(a,c,d){var x=Mn(c),E=Vl(c,x);d==null&&!(Qt(c)&&(E.length||!x.length))&&(d=c,c=a,a=this,E=Vl(c,Mn(c)));var I=!(Qt(d)&&"chain"in d)||!!d.chain,B=fr(a);return vi(E,function(k){var V=c[k];a[k]=V,B&&(a.prototype[k]=function(){var le=this.__chain__;if(I||le){var ue=a(this.__wrapped__),me=ue.__actions__=$n(this.__actions__);return me.push({func:V,args:arguments,thisArg:a}),ue.__chain__=le,ue}return V.apply(a,Dr([this.value()],arguments))})}),a}function aw(){return An._===this&&(An._=Ix),this}function Gh(){}function ow(a){return a=_t(a),bt(function(c){return sm(c,a)})}var lw=yh(Zt),cw=yh(Tp),uw=yh(Wu);function bg(a){return Th(a)?Xu(Yi(a)):kM(a)}function hw(a){return function(c){return a==null?t:ps(a,c)}}var fw=Am(),dw=Am(!0);function Vh(){return[]}function Wh(){return!1}function pw(){return{}}function mw(){return""}function gw(){return!0}function _w(a,c){if(a=_t(a),a<1||a>oe)return[];var d=Ee,x=Pn(a,Ee);c=Ke(c),a-=Ee;for(var E=Yu(x,c);++d<a;)c(d);return E}function vw(a){return dt(a)?Zt(a,Yi):ii(a)?[a]:$n(Vm(Ft(a)))}function yw(a){var c=++Px;return Ft(a)+c}var xw=Zl(function(a,c){return a+c},0),Mw=xh("ceil"),Sw=Zl(function(a,c){return a/c},1),bw=xh("floor");function Ew(a){return a&&a.length?Gl(a,Zn,sh):t}function ww(a,c){return a&&a.length?Gl(a,Ke(c,2),sh):t}function Tw(a){return Cp(a,Zn)}function Aw(a,c){return Cp(a,Ke(c,2))}function Rw(a){return a&&a.length?Gl(a,Zn,ch):t}function Cw(a,c){return a&&a.length?Gl(a,Ke(c,2),ch):t}var Pw=Zl(function(a,c){return a*c},1),Lw=xh("round"),Iw=Zl(function(a,c){return a-c},0);function Uw(a){return a&&a.length?qu(a,Zn):0}function Dw(a,c){return a&&a.length?qu(a,Ke(c,2)):0}return P.after=n1,P.ary=eg,P.assign=V1,P.assignIn=pg,P.assignInWith=lc,P.assignWith=W1,P.at=X1,P.before=tg,P.bind=Ih,P.bindAll=JE,P.bindKey=ng,P.castArray=p1,P.chain=Km,P.chunk=bS,P.compact=ES,P.concat=wS,P.cond=KE,P.conforms=QE,P.constant=zh,P.countBy=Ub,P.create=$1,P.curry=ig,P.curryRight=rg,P.debounce=sg,P.defaults=q1,P.defaultsDeep=Y1,P.defer=i1,P.delay=r1,P.difference=TS,P.differenceBy=AS,P.differenceWith=RS,P.drop=CS,P.dropRight=PS,P.dropRightWhile=LS,P.dropWhile=IS,P.fill=US,P.filter=Ob,P.flatMap=Bb,P.flatMapDeep=zb,P.flatMapDepth=kb,P.flatten=qm,P.flattenDeep=DS,P.flattenDepth=OS,P.flip=s1,P.flow=ew,P.flowRight=tw,P.fromPairs=NS,P.functions=tE,P.functionsIn=nE,P.groupBy=Hb,P.initial=BS,P.intersection=zS,P.intersectionBy=kS,P.intersectionWith=HS,P.invert=rE,P.invertBy=sE,P.invokeMap=Vb,P.iteratee=kh,P.keyBy=Wb,P.keys=Mn,P.keysIn=Yn,P.map=nc,P.mapKeys=oE,P.mapValues=lE,P.matches=nw,P.matchesProperty=iw,P.memoize=rc,P.merge=cE,P.mergeWith=mg,P.method=rw,P.methodOf=sw,P.mixin=Hh,P.negate=sc,P.nthArg=ow,P.omit=uE,P.omitBy=hE,P.once=a1,P.orderBy=Xb,P.over=lw,P.overArgs=o1,P.overEvery=cw,P.overSome=uw,P.partial=Uh,P.partialRight=ag,P.partition=$b,P.pick=fE,P.pickBy=gg,P.property=bg,P.propertyOf=hw,P.pull=XS,P.pullAll=Zm,P.pullAllBy=$S,P.pullAllWith=qS,P.pullAt=YS,P.range=fw,P.rangeRight=dw,P.rearg=l1,P.reject=Zb,P.remove=ZS,P.rest=c1,P.reverse=Ph,P.sampleSize=Kb,P.set=pE,P.setWith=mE,P.shuffle=Qb,P.slice=JS,P.sortBy=t1,P.sortedUniq=ib,P.sortedUniqBy=rb,P.split=BE,P.spread=u1,P.tail=sb,P.take=ab,P.takeRight=ob,P.takeRightWhile=lb,P.takeWhile=cb,P.tap=Eb,P.throttle=h1,P.thru=tc,P.toArray=hg,P.toPairs=_g,P.toPairsIn=vg,P.toPath=vw,P.toPlainObject=dg,P.transform=gE,P.unary=f1,P.union=ub,P.unionBy=hb,P.unionWith=fb,P.uniq=db,P.uniqBy=pb,P.uniqWith=mb,P.unset=_E,P.unzip=Lh,P.unzipWith=Jm,P.update=vE,P.updateWith=yE,P.values=ha,P.valuesIn=xE,P.without=gb,P.words=Mg,P.wrap=d1,P.xor=_b,P.xorBy=vb,P.xorWith=yb,P.zip=xb,P.zipObject=Mb,P.zipObjectDeep=Sb,P.zipWith=bb,P.entries=_g,P.entriesIn=vg,P.extend=pg,P.extendWith=lc,Hh(P,P),P.add=xw,P.attempt=Sg,P.camelCase=EE,P.capitalize=yg,P.ceil=Mw,P.clamp=ME,P.clone=m1,P.cloneDeep=_1,P.cloneDeepWith=v1,P.cloneWith=g1,P.conformsTo=y1,P.deburr=xg,P.defaultTo=jE,P.divide=Sw,P.endsWith=wE,P.eq=Ui,P.escape=TE,P.escapeRegExp=AE,P.every=Db,P.find=Nb,P.findIndex=Xm,P.findKey=Z1,P.findLast=Fb,P.findLastIndex=$m,P.findLastKey=J1,P.floor=bw,P.forEach=Qm,P.forEachRight=jm,P.forIn=K1,P.forInRight=Q1,P.forOwn=j1,P.forOwnRight=eE,P.get=Nh,P.gt=x1,P.gte=M1,P.has=iE,P.hasIn=Fh,P.head=Ym,P.identity=Zn,P.includes=Gb,P.indexOf=FS,P.inRange=SE,P.invoke=aE,P.isArguments=_s,P.isArray=dt,P.isArrayBuffer=S1,P.isArrayLike=qn,P.isArrayLikeObject=on,P.isBoolean=b1,P.isBuffer=Hr,P.isDate=E1,P.isElement=w1,P.isEmpty=T1,P.isEqual=A1,P.isEqualWith=R1,P.isError=Dh,P.isFinite=C1,P.isFunction=fr,P.isInteger=og,P.isLength=ac,P.isMap=lg,P.isMatch=P1,P.isMatchWith=L1,P.isNaN=I1,P.isNative=U1,P.isNil=O1,P.isNull=D1,P.isNumber=cg,P.isObject=Qt,P.isObjectLike=rn,P.isPlainObject=yo,P.isRegExp=Oh,P.isSafeInteger=N1,P.isSet=ug,P.isString=oc,P.isSymbol=ii,P.isTypedArray=ua,P.isUndefined=F1,P.isWeakMap=B1,P.isWeakSet=z1,P.join=GS,P.kebabCase=RE,P.last=bi,P.lastIndexOf=VS,P.lowerCase=CE,P.lowerFirst=PE,P.lt=k1,P.lte=H1,P.max=Ew,P.maxBy=ww,P.mean=Tw,P.meanBy=Aw,P.min=Rw,P.minBy=Cw,P.stubArray=Vh,P.stubFalse=Wh,P.stubObject=pw,P.stubString=mw,P.stubTrue=gw,P.multiply=Pw,P.nth=WS,P.noConflict=aw,P.noop=Gh,P.now=ic,P.pad=LE,P.padEnd=IE,P.padStart=UE,P.parseInt=DE,P.random=bE,P.reduce=qb,P.reduceRight=Yb,P.repeat=OE,P.replace=NE,P.result=dE,P.round=Lw,P.runInContext=G,P.sample=Jb,P.size=jb,P.snakeCase=FE,P.some=e1,P.sortedIndex=KS,P.sortedIndexBy=QS,P.sortedIndexOf=jS,P.sortedLastIndex=eb,P.sortedLastIndexBy=tb,P.sortedLastIndexOf=nb,P.startCase=zE,P.startsWith=kE,P.subtract=Iw,P.sum=Uw,P.sumBy=Dw,P.template=HE,P.times=_w,P.toFinite=dr,P.toInteger=_t,P.toLength=fg,P.toLower=GE,P.toNumber=Ei,P.toSafeInteger=G1,P.toString=Ft,P.toUpper=VE,P.trim=WE,P.trimEnd=XE,P.trimStart=$E,P.truncate=qE,P.unescape=YE,P.uniqueId=yw,P.upperCase=ZE,P.upperFirst=Bh,P.each=Qm,P.eachRight=jm,P.first=Ym,Hh(P,function(){var a={};return $i(P,function(c,d){Bt.call(P.prototype,d)||(a[d]=c)}),a}(),{chain:!1}),P.VERSION=n,vi(["bind","bindKey","curry","curryRight","partial","partialRight"],function(a){P[a].placeholder=P}),vi(["drop","take"],function(a,c){At.prototype[a]=function(d){d=d===t?1:_n(_t(d),0);var x=this.__filtered__&&!c?new At(this):this.clone();return x.__filtered__?x.__takeCount__=Pn(d,x.__takeCount__):x.__views__.push({size:Pn(d,Ee),type:a+(x.__dir__<0?"Right":"")}),x},At.prototype[a+"Right"]=function(d){return this.reverse()[a](d).reverse()}}),vi(["filter","map","takeWhile"],function(a,c){var d=c+1,x=d==Y||d==he;At.prototype[a]=function(E){var I=this.clone();return I.__iteratees__.push({iteratee:Ke(E,3),type:d}),I.__filtered__=I.__filtered__||x,I}}),vi(["head","last"],function(a,c){var d="take"+(c?"Right":"");At.prototype[a]=function(){return this[d](1).value()[0]}}),vi(["initial","tail"],function(a,c){var d="drop"+(c?"":"Right");At.prototype[a]=function(){return this.__filtered__?new At(this):this[d](1)}}),At.prototype.compact=function(){return this.filter(Zn)},At.prototype.find=function(a){return this.filter(a).head()},At.prototype.findLast=function(a){return this.reverse().find(a)},At.prototype.invokeMap=bt(function(a,c){return typeof a=="function"?new At(this):this.map(function(d){return fo(d,a,c)})}),At.prototype.reject=function(a){return this.filter(sc(Ke(a)))},At.prototype.slice=function(a,c){a=_t(a);var d=this;return d.__filtered__&&(a>0||c<0)?new At(d):(a<0?d=d.takeRight(-a):a&&(d=d.drop(a)),c!==t&&(c=_t(c),d=c<0?d.dropRight(-c):d.take(c-a)),d)},At.prototype.takeRightWhile=function(a){return this.reverse().takeWhile(a).reverse()},At.prototype.toArray=function(){return this.take(Ee)},$i(At.prototype,function(a,c){var d=/^(?:filter|find|map|reject)|While$/.test(c),x=/^(?:head|last)$/.test(c),E=P[x?"take"+(c=="last"?"Right":""):c],I=x||/^find/.test(c);E&&(P.prototype[c]=function(){var B=this.__wrapped__,k=x?[1]:arguments,V=B instanceof At,le=k[0],ue=V||dt(B),me=function(wt){var Rt=E.apply(P,Dr([wt],k));return x&&Re?Rt[0]:Rt};ue&&d&&typeof le=="function"&&le.length!=1&&(V=ue=!1);var Re=this.__chain__,Xe=!!this.__actions__.length,Qe=I&&!Re,vt=V&&!Xe;if(!I&&ue){B=vt?B:new At(this);var je=a.apply(B,k);return je.__actions__.push({func:tc,args:[me],thisArg:t}),new xi(je,Re)}return Qe&&vt?a.apply(this,k):(je=this.thru(me),Qe?x?je.value()[0]:je.value():je)})}),vi(["pop","push","shift","sort","splice","unshift"],function(a){var c=Al[a],d=/^(?:push|sort|unshift)$/.test(a)?"tap":"thru",x=/^(?:pop|shift)$/.test(a);P.prototype[a]=function(){var E=arguments;if(x&&!this.__chain__){var I=this.value();return c.apply(dt(I)?I:[],E)}return this[d](function(B){return c.apply(dt(B)?B:[],E)})}}),$i(At.prototype,function(a,c){var d=P[c];if(d){var x=d.name+"";Bt.call(sa,x)||(sa[x]=[]),sa[x].push({name:c,func:d})}}),sa[Yl(t,_).name]=[{name:"wrapper",func:t}],At.prototype.clone=Yx,At.prototype.reverse=Zx,At.prototype.value=Jx,P.prototype.at=wb,P.prototype.chain=Tb,P.prototype.commit=Ab,P.prototype.next=Rb,P.prototype.plant=Pb,P.prototype.reverse=Lb,P.prototype.toJSON=P.prototype.valueOf=P.prototype.value=Ib,P.prototype.first=P.prototype.head,so&&(P.prototype[so]=Cb),P},na=Ax();cs?((cs.exports=na)._=na,ku._=na):An._=na}).call(Po)})(uu,uu.exports);uu.exports;new ot;new ot;new wn;const JU=s=>{const e=Dy(ls().camera);let t=0,n=0;const i=new ResizeObserver(r=>{for(const o of r)t=o.contentRect.width,n=o.contentRect.height});return ja(s.target,r=>(r&&i.observe(r),()=>{r&&i.unobserve(r)})),(r,o)=>{o.pointer.update(l=>(l.set(r.offsetX/t*2-1,-(r.offsetY/n)*2+1),l)),o.raycaster.setFromCamera(o.pointer.current,e.current)}},KU=()=>{const s=On("threlte-interactivity-context"),e=ap();return{...s,addInteractiveObject:i=>{if(!s){console.warn("No interactivity context found. Did you forget to implement interactivity()?");return}i.userData._threlte_interactivity_dispatcher=e,!s.interactiveObjects.find(r=>r.uuid===i.uuid)&&s.interactiveObjects.push(i)},removeInteractiveObject:i=>{if(!s){console.warn("No interactivity context found. Did you forget to implement interactivity()?");return}s.interactiveObjects=s.interactiveObjects.filter(r=>r.uuid!==i.uuid),delete i.userData._threlte_interactivity_dispatcher}}},QU=s=>{const e=pd(),t=jn(!1);return Wa(()=>{t.set(!!Object.keys(e.$$.callbacks).filter(n=>s?s.includes(n):!0).length)}),{hasEventHandlers:t}},jU=["click","contextmenu","dblclick","wheel","pointerup","pointerdown","pointerover","pointerout","pointerenter","pointerleave","pointermove","pointermissed"],e3=()=>{Oy("interactivity",({ref:s})=>{if(!(s instanceof Pt))return;const{addInteractiveObject:e,removeInteractiveObject:t}=KU(),n=jn(s),{hasEventHandlers:i}=QU(jU);return ja([i,n],([r,o])=>{if(r)return e(o),()=>t(o)}),{onRefChange(r){n.set(r)}}})},Jc=s=>s.userData._threlte_interactivity_dispatcher;function Tf(s){return(s.eventObject||s.object).uuid+"/"+s.index+s.instanceId}const c0=[["click",!1],["contextmenu",!1],["dblclick",!1],["wheel",!1],["pointerdown",!0],["pointerup",!0],["pointerleave",!0],["pointerenter",!0],["pointermove",!0],["pointercancel",!0]],t3=s=>{function e(h){const f=h.offsetX-s.initialClick[0],p=h.offsetY-s.initialClick[1];return Math.round(Math.sqrt(f*f+p*p))}function t(h){for(const f of s.hovered.values())if(!h.length||!h.find(p=>p.object===f.object&&p.index===f.index&&p.instanceId===f.instanceId)){const p=f.eventObject;s.hovered.delete(Tf(f));const m=Jc(p);if(m){const g={...f,intersections:h};m("pointerout",g),m("pointerleave",g)}}}const n=Dy(s.enabled),i=()=>{const h=new Set,f=[];let p=s.interactiveObjects.flatMap(m=>n.current?s.raycaster.intersectObject(m,!0):[]).sort((m,g)=>m.distance-g.distance).filter(m=>{const g=Tf(m);return h.has(g)?!1:(h.add(g),!0)});s.filter&&(p=s.filter(p,s));for(const m of p){let g=m.object;for(;g;)Jc(g)&&f.push({...m,eventObject:g}),g=g.parent}return f};function r(h,f){for(let p=0;p<f.length;p++){const m=Jc(f[p]);m&&m("pointermissed",h)}}const o=h=>h==="pointerleave"||h==="pointercancel"?()=>{s.pointerOverTarget.set(!1),t([])}:h==="pointerenter"?()=>{s.pointerOverTarget.set(!0)}:f=>{const p=h==="pointermove",m=h==="click"||h==="contextmenu"||h==="dblclick";s.compute(f,s);const g=i(),v=m?e(f):0;h==="pointerdown"&&(s.initialClick=[f.offsetX,f.offsetY],s.initialHits=g.map(y=>y.eventObject)),m&&!g.length&&v<=2&&r(f,s.interactiveObjects),p&&t(g);let M=!1;e:for(const y of g){const _={stopped:M,...y,intersections:g,stopPropagation(){if(M=!0,_.stopped=!0,s.hovered.size&&Array.from(s.hovered.values()).find(S=>S.eventObject===y.eventObject)){const S=g.slice(0,g.indexOf(y));t([...S,y])}},camera:s.raycaster.camera,delta:v,nativeEvent:f,pointer:s.pointer.current,ray:s.raycaster.ray},b=Jc(y.eventObject);if(!b)return;if(p){if(b.hasEventListener("pointerover")||b.hasEventListener("pointerenter")||b.hasEventListener("pointerout")||b.hasEventListener("pointerleave")){const S=Tf(_),w=s.hovered.get(S);w?w.stopped&&_.stopPropagation():(s.hovered.set(S,_),b("pointerover",_),b("pointerenter",_))}b("pointermove",_)}else b.hasEventListener(h)?(!m||s.initialHits.includes(y.eventObject))&&(r(f,s.interactiveObjects.filter(w=>!s.initialHits.includes(w))),b(h,_)):m&&s.initialHits.includes(y.eventObject)&&r(f,s.interactiveObjects.filter(w=>!s.initialHits.includes(w)));if(M)break e}},l=h=>{c0.forEach(([f])=>{h.removeEventListener(f,o(f))})},u=h=>{c0.forEach(([f,p])=>{h.addEventListener(f,o(f),{passive:p})})};ja(s.target,h=>(h&&u(h),()=>{h&&l(h)}))},n3=s=>{var t;const e={enabled:ci((s==null?void 0:s.enabled)??!0),pointer:ci(new fe),pointerOverTarget:ci(!1),lastEvent:void 0,raycaster:new Ry,initialClick:[0,0],initialHits:[],hovered:new Map,interactiveObjects:[],target:ci((s==null?void 0:s.target)??((t=ls().renderer)==null?void 0:t.domElement)),compute:()=>{},filter:s==null?void 0:s.filter};return e.compute=(s==null?void 0:s.compute)??JU(e),Nn("threlte-interactivity-context",e),e3(),t3(e),e},i3=()=>{Oy("lookAt",({ref:s,props:e})=>{if(!(s instanceof Pt)||!("lookAt"in e))return;const{invalidate:t}=ls();let n=s,i=e;const r=new N,o=(l,u)=>{if(!("lookAt"in l))return;const h=l.lookAt;h instanceof N&&r.copy(h),Array.isArray(h)&&h.length===3?r.set(h[0],h[1],h[2]):typeof h=="object"&&r.set(h.x??0,h.y??0,h.z??0),u.lookAt(r),t()};return o(i,n),{onRefChange(l){n=l,o(i,n)},onPropsChange(l){i=l,o(i,n)},pluginProps:["lookAt"]}})};function r3(s){const e=s-1;return e*e*e+1}function Lo(s){return s===1?s:1-Math.pow(2,-10*s)}function u0(s){return s/=.5,s<1?.5*s*s:(s--,-.5*(s*(s-2)-1))}function s3(s){return-s*(s-2)}function Af(s){return s<.5?8*Math.pow(s,4):-8*Math.pow(s-1,4)+1}function h0(s){return Object.prototype.toString.call(s)==="[object Date]"}function dd(s,e){if(s===e||s!==s)return()=>s;const t=typeof s;if(t!==typeof e||Array.isArray(s)!==Array.isArray(e))throw new Error("Cannot interpolate values of different type");if(Array.isArray(s)){const n=e.map((i,r)=>dd(s[r],i));return i=>n.map(r=>r(i))}if(t==="object"){if(!s||!e)throw new Error("Object cannot be null");if(h0(s)&&h0(e)){s=s.getTime(),e=e.getTime();const r=e-s;return o=>new Date(s+o*r)}const n=Object.keys(e),i={};return n.forEach(r=>{i[r]=dd(s[r],e[r])}),r=>{const o={};return n.forEach(l=>{o[l]=i[l](r)}),o}}if(t==="number"){const n=e-s;return i=>s+i*n}throw new Error(`Cannot interpolate ${t} values`)}function zi(s,e={}){const t=jn(s);let n,i=s;function r(o,l){if(s==null)return t.set(s=o),Promise.resolve();i=o;let u=n,h=!1,{delay:f=0,duration:p=400,easing:m=kw,interpolate:g=dd}=su(su({},e),l);if(p===0)return u&&(u.abort(),u=null),t.set(s=i),Promise.resolve();const v=Bw()+f;let M;return n=zw(y=>{if(y<v)return!0;h||(M=g(s,o),typeof p=="function"&&(p=p(s,o)),h=!0),u&&(u.abort(),u=null);const _=y-v;return _>p?(t.set(s=o),!1):(t.set(s=M(m(_/p))),!0)}),n.promise}return{set:r,update:(o,l)=>r(o(i,s),l),subscribe:t.subscribe}}function a3(s){let e,t;return e=new Ut.PerspectiveCamera({props:{makeDefault:!0,"position.x":s[2],"position.y":s[1],"position.z":s[0],lookAt:[0,0,0]}}),{c(){ct(e.$$.fragment)},l(n){ut(e.$$.fragment,n)},m(n,i){ht(e,n,i),t=!0},p(n,[i]){const r={};i&4&&(r["position.x"]=n[2]),i&2&&(r["position.y"]=n[1]),i&1&&(r["position.z"]=n[0]),e.$set(r)},i(n){t||(De(e.$$.fragment,n),t=!0)},o(n){ze(e.$$.fragment,n),t=!1},d(n){ft(e,n)}}}function o3(s,e,t){let n,i,r,o,l;const u=zi(0,{duration:1e3,easing:Lo});bn(s,u,D=>t(10,i=D));const h=zi(0,{duration:100,easing:Lo});bn(s,h,D=>t(9,n=D));const f=zi(0,{duration:2e3,easing:Lo}),p=zi(5,{duration:2e3,easing:Lo}),m=zi(0,{duration:2e3,easing:Lo});bn(s,f,D=>t(2,l=D)),bn(s,p,D=>t(1,o=D)),bn(s,m,D=>t(0,r=D));let g=!1,v=!1,M=!1,y=0,_=0,b=0,S=0,w=0;const L=D=>{g=!0,v=!0,y=D.clientX,_=D.clientY,b=D.clientX,S=D.clientY},T=D=>{v&&((Math.abs(b-D.clientX)>20||Math.abs(S-D.clientY)>20)&&(g=!1,M=!0),ui(u,i+=(D.clientX-y)/100,i),y=D.clientX,D.clientX,D.clientY,ui(h,n=Math.min(Math.max(n+(D.clientY-_)/50,0),Math.PI*.85),n),n||ui(h,n=0,n),_=D.clientY,M=!0)},C=()=>{g&&M&&(t(8,w++,w),t(8,w--,w),setTimeout(()=>M=!1,100)),v=!1},R=()=>{g&&!M&&t(8,w++,w)},{renderer:{domElement:A}}=ls();return Wa(()=>(A.addEventListener("mousedown",L),A.addEventListener("mousemove",T),A.addEventListener("mouseup",C),A.addEventListener("click",R),()=>{A.removeEventListener("mousedown",L),A.removeEventListener("mousemove",T),A.removeEventListener("mouseup",C),A.removeEventListener("click",R)})),s.$$.update=()=>{s.$$.dirty&256&&(ui(u,i=w*Math.PI,i),ui(h,n=.35,n)),s.$$.dirty&1536&&ui(f,[l,o,r]=[7.6*Math.exp(-n)*Math.cos(i)+.2,-7.5+14*Math.exp(.5*Math.sin(n)),7.6*Math.exp(-n)*Math.sin(i)],l,p.set(o),m.set(r))},[r,o,l,u,h,f,p,m,w,n,i]}class l3 extends Ri{constructor(e){super(),Ci(this,e,o3,a3,Pi,{})}}function c3(s){let e,t,n,i,r,o,l,u,h,f,p,m,g,v,M,y,_,b,S,w,L;e=new l3({}),n=new Ut.SpotLight({props:{castShadow:!0,position:[20,18,0],intensity:.2,color:"#ed4434",angle:.2,penumbra:.2}}),r=new Ut.SpotLight({props:{castShadow:!0,position:[-20,18,0],intensity:.2,color:"#2d8ad6",angle:.2,penumbra:.2}}),l=new Ut.SpotLight({props:{castShadow:!0,position:[-16,28,0],intensity:.1,color:"#ed4434",angle:.2,penumbra:.2}}),h=new Ut.SpotLight({props:{castShadow:!0,position:[16,28,0],intensity:.1,color:"#2d8ad6",angle:.2,penumbra:.2}}),p=new Ut.SpotLight({props:{castShadow:!0,position:[20,10,0],intensity:.1,color:"#ddd",angle:.2,penumbra:.2}}),g=new Ut.SpotLight({props:{castShadow:!0,position:[-20,10,0],intensity:.1,color:"#ddd",angle:.2,penumbra:.2}}),M=new Ut.SpotLight({props:{castShadow:!0,position:[20,6,0],lookAt:[20,0,0],intensity:.2,color:"#ed4434",angle:.2,penumbra:.2}}),_=new Ut.SpotLight({props:{castShadow:!0,position:[-20,6,0],lookAt:[-20,0,0],intensity:.2,color:"#2d8ad6",angle:.2,penumbra:.2}}),S=new Ut.AmbientLight({props:{intensity:.3}});const T=s[1].default,C=ts(T,s,s[0],null);return{c(){ct(e.$$.fragment),t=jt(),ct(n.$$.fragment),i=jt(),ct(r.$$.fragment),o=jt(),ct(l.$$.fragment),u=jt(),ct(h.$$.fragment),f=jt(),ct(p.$$.fragment),m=jt(),ct(g.$$.fragment),v=jt(),ct(M.$$.fragment),y=jt(),ct(_.$$.fragment),b=jt(),ct(S.$$.fragment),w=jt(),C&&C.c()},l(R){ut(e.$$.fragment,R),t=en(R),ut(n.$$.fragment,R),i=en(R),ut(r.$$.fragment,R),o=en(R),ut(l.$$.fragment,R),u=en(R),ut(h.$$.fragment,R),f=en(R),ut(p.$$.fragment,R),m=en(R),ut(g.$$.fragment,R),v=en(R),ut(M.$$.fragment,R),y=en(R),ut(_.$$.fragment,R),b=en(R),ut(S.$$.fragment,R),w=en(R),C&&C.l(R)},m(R,A){ht(e,R,A),Ot(R,t,A),ht(n,R,A),Ot(R,i,A),ht(r,R,A),Ot(R,o,A),ht(l,R,A),Ot(R,u,A),ht(h,R,A),Ot(R,f,A),ht(p,R,A),Ot(R,m,A),ht(g,R,A),Ot(R,v,A),ht(M,R,A),Ot(R,y,A),ht(_,R,A),Ot(R,b,A),ht(S,R,A),Ot(R,w,A),C&&C.m(R,A),L=!0},p(R,[A]){C&&C.p&&(!L||A&1)&&ns(C,T,R,R[0],L?rs(T,R[0],A,null):is(R[0]),null)},i(R){L||(De(e.$$.fragment,R),De(n.$$.fragment,R),De(r.$$.fragment,R),De(l.$$.fragment,R),De(h.$$.fragment,R),De(p.$$.fragment,R),De(g.$$.fragment,R),De(M.$$.fragment,R),De(_.$$.fragment,R),De(S.$$.fragment,R),De(C,R),L=!0)},o(R){ze(e.$$.fragment,R),ze(n.$$.fragment,R),ze(r.$$.fragment,R),ze(l.$$.fragment,R),ze(h.$$.fragment,R),ze(p.$$.fragment,R),ze(g.$$.fragment,R),ze(M.$$.fragment,R),ze(_.$$.fragment,R),ze(S.$$.fragment,R),ze(C,R),L=!1},d(R){ft(e,R),R&&It(t),ft(n,R),R&&It(i),ft(r,R),R&&It(o),ft(l,R),R&&It(u),ft(h,R),R&&It(f),ft(p,R),R&&It(m),ft(g,R),R&&It(v),ft(M,R),R&&It(y),ft(_,R),R&&It(b),ft(S,R),R&&It(w),C&&C.d(R)}}}function u3(s,e,t){let{$$slots:n={},$$scope:i}=e;return n3(),i3(),s.$$set=r=>{"$$scope"in r&&t(0,i=r.$$scope)},[i,n]}class h3 extends Ri{constructor(e){super(),Ci(this,e,u3,c3,Pi,{})}}function f3(s){let e;const t=s[4].default,n=ts(t,s,s[6],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&64)&&ns(n,t,i,i[6],e?rs(t,i[6],r,null):is(i[6]),null)},i(i){e||(De(n,i),e=!0)},o(i){ze(n,i),e=!1},d(i){n&&n.d(i)}}}function d3(s){let e,t;return e=new h3({props:{$$slots:{default:[f3]},$$scope:{ctx:s}}}),{c(){ct(e.$$.fragment)},l(n){ut(e.$$.fragment,n)},m(n,i){ht(e,n,i),t=!0},p(n,i){const r={};i&64&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(De(e.$$.fragment,n),t=!0)},o(n){ze(e.$$.fragment,n),t=!1},d(n){ft(e,n)}}}function p3(s){let e,t,n;function i(o){s[5](o)}let r={$$slots:{default:[d3]},$$scope:{ctx:s}};return s[1]!==void 0&&(r.ref=s[1]),e=new Ut.Scene({props:r}),E0.push(()=>Hw(e,"ref",i)),{c(){ct(e.$$.fragment)},l(o){ut(e.$$.fragment,o)},m(o,l){ht(e,o,l),n=!0},p(o,l){const u={};l&64&&(u.$$scope={dirty:l,ctx:o}),!t&&l&2&&(t=!0,u.ref=o[1],Gw(()=>t=!1)),e.$set(u)},i(o){n||(De(e.$$.fragment,o),n=!0)},o(o){ze(e.$$.fragment,o),n=!1},d(o){ft(e,o)}}}function m3(s){let e,t,n;return t=new $U({props:{$$slots:{default:[p3]},$$scope:{ctx:s}}}),{c(){e=x0("main"),ct(t.$$.fragment),this.h()},l(i){e=M0(i,"MAIN",{class:!0});var r=S0(e);ut(t.$$.fragment,r),r.forEach(It),this.h()},h(){b0(e,"class","svelte-1asp73b"),Ag(e,"cursor",s[0])},m(i,r){Ot(i,e,r),ht(t,e,null),n=!0},p(i,[r]){const o={};r&66&&(o.$$scope={dirty:r,ctx:i}),t.$set(o),(!n||r&1)&&Ag(e,"cursor",i[0])},i(i){n||(De(t.$$.fragment,i),n=!0)},o(i){ze(t.$$.fragment,i),n=!1},d(i){i&&It(e),ft(t)}}}function g3(s,e,t){let n,i,{$$slots:r={},$$scope:o}=e;const l=Nn("scene",jn(void 0));bn(s,l,f=>t(1,i=f));const u=Nn("selectable",jn(0));bn(s,u,f=>t(0,n=f));function h(f){i=f,l.set(i)}return s.$$set=f=>{"$$scope"in f&&t(6,o=f.$$scope)},[n,i,l,u,r,h,o]}class _3 extends Ri{constructor(e){super(),Ci(this,e,g3,m3,Pi,{})}}const v3=Math.PI/180;function y3(s){return s*v3}function x3(s){let e,t;return e=new Ut.BoxGeometry({props:{args:[s[3],.2,s[3]]}}),{c(){ct(e.$$.fragment)},l(n){ut(e.$$.fragment,n)},m(n,i){ht(e,n,i),t=!0},p(n,i){const r={};i&8&&(r.args=[n[3],.2,n[3]]),e.$set(r)},i(n){t||(De(e.$$.fragment,n),t=!0)},o(n){ze(e.$$.fragment,n),t=!1},d(n){ft(e,n)}}}function M3(s){let e,t;return e=new Ut.BoxGeometry({props:{args:[s[3],.2,s[3]]}}),{c(){ct(e.$$.fragment)},l(n){ut(e.$$.fragment,n)},m(n,i){ht(e,n,i),t=!0},p(n,i){const r={};i&8&&(r.args=[n[3],.2,n[3]]),e.$set(r)},i(n){t||(De(e.$$.fragment,n),t=!0)},o(n){ze(e.$$.fragment,n),t=!1},d(n){ft(e,n)}}}function S3(s){let e,t,n,i;return e=new Ut.Mesh({props:{castShadow:!0,material:s[0],position:[s[2],.251,s[1]],$$slots:{default:[x3]},$$scope:{ctx:s}}}),n=new Ut.Mesh({props:{castShadow:!0,material:b3,position:[s[2],.101,s[1]],$$slots:{default:[M3]},$$scope:{ctx:s}}}),{c(){ct(e.$$.fragment),t=jt(),ct(n.$$.fragment)},l(r){ut(e.$$.fragment,r),t=en(r),ut(n.$$.fragment,r)},m(r,o){ht(e,r,o),Ot(r,t,o),ht(n,r,o),i=!0},p(r,[o]){const l={};o&1&&(l.material=r[0]),o&6&&(l.position=[r[2],.251,r[1]]),o&520&&(l.$$scope={dirty:o,ctx:r}),e.$set(l);const u={};o&6&&(u.position=[r[2],.101,r[1]]),o&520&&(u.$$scope={dirty:o,ctx:r}),n.$set(u)},i(r){i||(De(e.$$.fragment,r),De(n.$$.fragment,r),i=!0)},o(r){ze(e.$$.fragment,r),ze(n.$$.fragment,r),i=!1},d(r){ft(e,r),r&&It(t),ft(n,r)}}}const b3=new Cu({color:2236962,roughness:.7,thickness:.1,metalness:.4,side:2,emissive:14540253,emissiveIntensity:.38});function E3(s,e,t){let n,i,r,o,l;const u=On("MAP_SIZE"),h=On("BOARD_SIZE");let{x:f=0,y:p=0}=e;return s.$$set=m=>{"x"in m&&t(4,f=m.x),"y"in m&&t(5,p=m.y)},s.$$.update=()=>{s.$$.dirty&48&&t(6,n=3<=f&&f<=5&&3<=p&&p<=5),s.$$.dirty&16&&t(2,r=(f-(h-1)/2)/h*u),s.$$.dirty&32&&t(1,o=(p-(h-1)/2)/h*u),s.$$.dirty&64&&t(0,l=new Pr({color:15921906,roughness:.7,metalness:.4,emissive:14540253,emissiveIntensity:.58,side:2,transparent:!n,opacity:.8}))},t(3,i=u/h*.8),[l,o,r,i,f,p,n]}class w3 extends Ri{constructor(e){super(),Ci(this,e,E3,S3,Pi,{x:4,y:5})}}function T3(s){let e,t;return e=new Ut.BoxGeometry({props:{args:[s[7],.6,s[6]]}}),{c(){ct(e.$$.fragment)},l(n){ut(e.$$.fragment,n)},m(n,i){ht(e,n,i),t=!0},p(n,i){const r={};i[0]&192&&(r.args=[n[7],.6,n[6]]),e.$set(r)},i(n){t||(De(e.$$.fragment,n),t=!0)},o(n){ze(e.$$.fragment,n),t=!1},d(n){ft(e,n)}}}function A3(s){let e,t;return e=new Ut.Mesh({props:{castShadow:!0,position:[s[4],s[9],s[5]],"rotation.y":s[8],$$slots:{default:[C3]},$$scope:{ctx:s}}}),{c(){ct(e.$$.fragment)},l(n){ut(e.$$.fragment,n)},m(n,i){ht(e,n,i),t=!0},p(n,i){const r={};i[0]&560&&(r.position=[n[4],n[9],n[5]]),i[0]&256&&(r["rotation.y"]=n[8]),i[0]&193|i[1]&4&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(De(e.$$.fragment,n),t=!0)},o(n){ze(e.$$.fragment,n),t=!1},d(n){ft(e,n)}}}function R3(s){let e,t;return e=new Ut.Mesh({props:{castShadow:!0,position:[s[4],s[9],s[5]],"rotation.y":s[8],$$slots:{default:[P3]},$$scope:{ctx:s}}}),{c(){ct(e.$$.fragment)},l(n){ut(e.$$.fragment,n)},m(n,i){ht(e,n,i),t=!0},p(n,i){const r={};i[0]&560&&(r.position=[n[4],n[9],n[5]]),i[0]&256&&(r["rotation.y"]=n[8]),i[0]&193|i[1]&4&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(De(e.$$.fragment,n),t=!0)},o(n){ze(e.$$.fragment,n),t=!1},d(n){ft(e,n)}}}function C3(s){let e,t,n,i;return e=new Ut.MeshBasicMaterial({props:{color:s[0]?s[12]:s[13],transparent:!0,opacity:.16}}),n=new Ut.BoxGeometry({props:{args:[s[7],.6,s[6]]}}),{c(){ct(e.$$.fragment),t=jt(),ct(n.$$.fragment)},l(r){ut(e.$$.fragment,r),t=en(r),ut(n.$$.fragment,r)},m(r,o){ht(e,r,o),Ot(r,t,o),ht(n,r,o),i=!0},p(r,o){const l={};o[0]&1&&(l.color=r[0]?r[12]:r[13]),e.$set(l);const u={};o[0]&192&&(u.args=[r[7],.6,r[6]]),n.$set(u)},i(r){i||(De(e.$$.fragment,r),De(n.$$.fragment,r),i=!0)},o(r){ze(e.$$.fragment,r),ze(n.$$.fragment,r),i=!1},d(r){ft(e,r),r&&It(t),ft(n,r)}}}function P3(s){let e,t,n,i;return e=new Ut.MeshBasicMaterial({props:{color:s[0]?s[13]:s[12]}}),n=new Ut.BoxGeometry({props:{args:[s[7],.6,s[6]]}}),{c(){ct(e.$$.fragment),t=jt(),ct(n.$$.fragment)},l(r){ut(e.$$.fragment,r),t=en(r),ut(n.$$.fragment,r)},m(r,o){ht(e,r,o),Ot(r,t,o),ht(n,r,o),i=!0},p(r,o){const l={};o[0]&1&&(l.color=r[0]?r[13]:r[12]),e.$set(l);const u={};o[0]&192&&(u.args=[r[7],.6,r[6]]),n.$set(u)},i(r){i||(De(e.$$.fragment,r),De(n.$$.fragment,r),i=!0)},o(r){ze(e.$$.fragment,r),ze(n.$$.fragment,r),i=!1},d(r){ft(e,r),r&&It(t),ft(n,r)}}}function L3(s){let e,t,n,i,r,o;e=new Ut.Mesh({props:{castShadow:!0,material:s[2],position:[s[4],s[9],s[5]],"rotation.y":s[8],$$slots:{default:[T3]},$$scope:{ctx:s}}}),e.$on("pointerenter",s[28]),e.$on("pointerleave",s[29]);const l=[R3,A3],u=[];function h(f,p){return f[3]?0:1}return n=h(s),i=u[n]=l[n](s),{c(){ct(e.$$.fragment),t=jt(),i.c(),r=Ai()},l(f){ut(e.$$.fragment,f),t=en(f),i.l(f),r=Ai()},m(f,p){ht(e,f,p),Ot(f,t,p),u[n].m(f,p),Ot(f,r,p),o=!0},p(f,p){const m={};p[0]&4&&(m.material=f[2]),p[0]&560&&(m.position=[f[4],f[9],f[5]]),p[0]&256&&(m["rotation.y"]=f[8]),p[0]&192|p[1]&4&&(m.$$scope={dirty:p,ctx:f}),e.$set(m);let g=n;n=h(f),n===g?u[n].p(f,p):(Os(),ze(u[g],1,1,()=>{u[g]=null}),Ds(),i=u[n],i?i.p(f,p):(i=u[n]=l[n](f),i.c()),De(i,1),i.m(r.parentNode,r))},i(f){o||(De(e.$$.fragment,f),De(i),o=!0)},o(f){ze(e.$$.fragment,f),ze(i),o=!1},d(f){ft(e,f),f&&It(t),u[n].d(f),f&&It(r)}}}function f0(s,e){return e===1?s-1:e===2?s:-1}function d0(s,e){return e===1?s:e===2?s-1:-1}function I3(s,e,t){let n,i,r,o,l,u,h,f,p,m;const g=On("MAP_SIZE"),v=On("BOARD_SIZE"),M=On("selectable");bn(s,M,te=>t(10,m=te));const y=new Le(15549492),_=new Le(4033238),b=new Le(65280),S=zi(0,{duration:100});bn(s,S,te=>t(25,l=te));let{x:w=0,y:L=0,d:T=0,kaist:C,postech:R}=e,A,D,X=zi(f0(w,T),{easing:u0,duration:2e3}),ce=zi(d0(L,T),{easing:u0,duration:2e3});bn(s,X,te=>t(27,h=te)),bn(s,ce,te=>t(26,u=te));let q=zi(3.31,{easing:Af,duration:1e3});bn(s,q,te=>t(9,p=te)),q.set(.31,{easing:r3,duration:1500});let Y=zi((T-1)*Math.PI/2,{easing:Af,duration:1e3});bn(s,Y,te=>t(8,f=te));let W=!1,he=w,j=L;const oe=()=>{t(1,A=!0),ui(M,m++,m)},de=()=>{t(1,A=!1),ui(M,m--,m)};return s.$$set=te=>{"x"in te&&t(19,w=te.x),"y"in te&&t(20,L=te.y),"d"in te&&t(21,T=te.d),"kaist"in te&&t(0,C=te.kaist),"postech"in te&&t(22,R=te.postech)},s.$$.update=()=>{if(s.$$.dirty[0]&2621440&&ui(X,h=f0(w,T),h),s.$$.dirty[0]&3145728&&ui(ce,u=d0(L,T),u),s.$$.dirty[0]&134217728&&t(5,r=(h-v/2)/v*g),s.$$.dirty[0]&67108864&&t(4,o=(u-v/2)/v*g),s.$$.dirty[0]&2&&ui(S,l=A?.5:0,l),s.$$.dirty[0]&2097152&&ui(Y,f=(T-1)*Math.PI/2,f),s.$$.dirty[0]&201326592&&(3<=h&&h<=6&&3<=u&&u<=6?t(3,W=!0):t(3,W=!1)),s.$$.dirty[0]&33554437){D&&D.dispose();let te=(C?_:y).clone();te.lerp(b,l),t(2,D=new Cu({color:9385195,roughness:.033,transmission:.8,thickness:1,emissive:te,emissiveIntensity:(1.48+l*4)*.8}))}s.$$.dirty[0]&26738688&&(he!==w||j!==L)&&(t(23,he=w),t(24,j=L),q.set(2.2,{easing:s3,duration:1e3}),setTimeout(()=>q.set(.31,{easing:Af,duration:1500}),500))},t(7,n=g/v*2),t(6,i=g/v*.16),[C,A,D,W,o,r,i,n,f,p,m,M,y,_,S,X,ce,q,Y,w,L,T,R,he,j,l,u,h,oe,de]}class Ny extends Ri{constructor(e){super(),Ci(this,e,I3,L3,Pi,{x:19,y:20,d:21,kaist:0,postech:22},null,[-1,-1])}}function p0(s,e,t){const n=s.slice();return n[11]=e[t][0],n[12]=e[t][1],n[13]=e[t][2],n[15]=t,n}function m0(s,e,t){const n=s.slice();return n[11]=e[t][0],n[12]=e[t][1],n[13]=e[t][2],n[15]=t,n}function g0(s,e,t){const n=s.slice();return n[17]=e[t],n[11]=t,n}function U3(s,e,t){const n=s.slice();return n[17]=e[t],n[12]=t,n}function D3(s){let e,t,n,i;return e=new Ut.CircleGeometry({props:{args:[8,72]}}),n=new Ut.MeshStandardMaterial({props:{color:"#555"}}),{c(){ct(e.$$.fragment),t=jt(),ct(n.$$.fragment)},l(r){ut(e.$$.fragment,r),t=en(r),ut(n.$$.fragment,r)},m(r,o){ht(e,r,o),Ot(r,t,o),ht(n,r,o),i=!0},p:rl,i(r){i||(De(e.$$.fragment,r),De(n.$$.fragment,r),i=!0)},o(r){ze(e.$$.fragment,r),ze(n.$$.fragment,r),i=!1},d(r){ft(e,r),r&&It(t),ft(n,r)}}}function O3(s){let e,t,n,i;return e=new Ut.BoxGeometry({props:{args:[8.2,.2,6.2]}}),n=new Ut.MeshStandardMaterial({props:{color:"#777",metalness:.6,roughness:.46}}),{c(){ct(e.$$.fragment),t=jt(),ct(n.$$.fragment)},l(r){ut(e.$$.fragment,r),t=en(r),ut(n.$$.fragment,r)},m(r,o){ht(e,r,o),Ot(r,t,o),ht(n,r,o),i=!0},p:rl,i(r){i||(De(e.$$.fragment,r),De(n.$$.fragment,r),i=!0)},o(r){ze(e.$$.fragment,r),ze(n.$$.fragment,r),i=!1},d(r){ft(e,r),r&&It(t),ft(n,r)}}}function N3(s){let e,t,n,i;return e=new Ut.BoxGeometry({props:{args:[1.95,1.2,1.95]}}),n=new Ut.MeshPhysicalMaterial({props:{color:"#aaa",metalness:.026,roughness:.396*(1-s[3]),transmission:(1-s[3]*2)*.999,thickness:.2,transparent:!0,opacity:1-.6*s[3]}}),{c(){ct(e.$$.fragment),t=jt(),ct(n.$$.fragment)},l(r){ut(e.$$.fragment,r),t=en(r),ut(n.$$.fragment,r)},m(r,o){ht(e,r,o),Ot(r,t,o),ht(n,r,o),i=!0},p(r,o){const l={};o&8&&(l.roughness=.396*(1-r[3])),o&8&&(l.transmission=(1-r[3]*2)*.999),o&8&&(l.opacity=1-.6*r[3]),n.$set(l)},i(r){i||(De(e.$$.fragment,r),De(n.$$.fragment,r),i=!0)},o(r){ze(e.$$.fragment,r),ze(n.$$.fragment,r),i=!1},d(r){ft(e,r),r&&It(t),ft(n,r)}}}function F3(s){let e,t;return e=new w3({props:{x:s[11],y:s[12]}}),{c(){ct(e.$$.fragment)},l(n){ut(e.$$.fragment,n)},m(n,i){ht(e,n,i),t=!0},p:rl,i(n){t||(De(e.$$.fragment,n),t=!0)},o(n){ze(e.$$.fragment,n),t=!1},d(n){ft(e,n)}}}function _0(s){let e,t,n={length:s[4]},i=[];for(let r=0;r<n.length;r+=1)i[r]=F3(U3(s,n,r));return{c(){for(let r=0;r<i.length;r+=1)i[r].c();e=Ai()},l(r){for(let o=0;o<i.length;o+=1)i[o].l(r);e=Ai()},m(r,o){for(let l=0;l<i.length;l+=1)i[l]&&i[l].m(r,o);Ot(r,e,o),t=!0},p:rl,i(r){if(!t){for(let o=0;o<n.length;o+=1)De(i[o]);t=!0}},o(r){i=i.filter(Boolean);for(let o=0;o<i.length;o+=1)ze(i[o]);t=!1},d(r){w0(i,r),r&&It(e)}}}function v0(s,e){let t,n,i;return n=new Ny({props:{kaist:!0,x:e[11],y:e[12],d:e[13]}}),{key:s,first:null,c(){t=Ai(),ct(n.$$.fragment),this.h()},l(r){t=Ai(),ut(n.$$.fragment,r),this.h()},h(){this.first=t},m(r,o){Ot(r,t,o),ht(n,r,o),i=!0},p(r,o){e=r;const l={};o&2&&(l.x=e[11]),o&2&&(l.y=e[12]),o&2&&(l.d=e[13]),n.$set(l)},i(r){i||(De(n.$$.fragment,r),i=!0)},o(r){ze(n.$$.fragment,r),i=!1},d(r){r&&It(t),ft(n,r)}}}function y0(s,e){let t,n,i;return n=new Ny({props:{postech:!0,x:e[11],y:e[12],d:e[13]}}),{key:s,first:null,c(){t=Ai(),ct(n.$$.fragment),this.h()},l(r){t=Ai(),ut(n.$$.fragment,r),this.h()},h(){this.first=t},m(r,o){Ot(r,t,o),ht(n,r,o),i=!0},p(r,o){e=r;const l={};o&4&&(l.x=e[11]),o&4&&(l.y=e[12]),o&4&&(l.d=e[13]),n.$set(l)},i(r){i||(De(n.$$.fragment,r),i=!0)},o(r){ze(n.$$.fragment,r),i=!1},d(r){r&&It(t),ft(n,r)}}}function B3(s){let e,t,n,i,r,o,l,u=[],h=new Map,f,p=[],m=new Map,g,v;e=new Ut.Mesh({props:{receiveShadow:!0,"rotation.x":y3(-90),$$slots:{default:[D3]},$$scope:{ctx:s}}}),n=new Ut.Mesh({props:{"position.y":.1,castShadow:!0,$$slots:{default:[O3]},$$scope:{ctx:s}}}),r=new Ut.Mesh({props:{"position.y":.61,castShadow:!0,$$slots:{default:[N3]},$$scope:{ctx:s}}}),r.$on("pointerenter",s[8]),r.$on("pointerleave",s[9]);let M={length:s[4]},y=[];for(let T=0;T<M.length;T+=1)y[T]=_0(g0(s,M,T));const _=T=>ze(y[T],1,1,()=>{y[T]=null});let b=s[1];const S=T=>T[15];for(let T=0;T<b.length;T+=1){let C=m0(s,b,T),R=S(C);h.set(R,u[T]=v0(R,C))}let w=s[2];const L=T=>T[15];for(let T=0;T<w.length;T+=1){let C=p0(s,w,T),R=L(C);m.set(R,p[T]=y0(R,C))}return{c(){ct(e.$$.fragment),t=jt(),ct(n.$$.fragment),i=jt(),ct(r.$$.fragment),o=jt();for(let T=0;T<y.length;T+=1)y[T].c();l=jt();for(let T=0;T<u.length;T+=1)u[T].c();f=jt();for(let T=0;T<p.length;T+=1)p[T].c();g=Ai()},l(T){ut(e.$$.fragment,T),t=en(T),ut(n.$$.fragment,T),i=en(T),ut(r.$$.fragment,T),o=en(T);for(let C=0;C<y.length;C+=1)y[C].l(T);l=en(T);for(let C=0;C<u.length;C+=1)u[C].l(T);f=en(T);for(let C=0;C<p.length;C+=1)p[C].l(T);g=Ai()},m(T,C){ht(e,T,C),Ot(T,t,C),ht(n,T,C),Ot(T,i,C),ht(r,T,C),Ot(T,o,C);for(let R=0;R<y.length;R+=1)y[R]&&y[R].m(T,C);Ot(T,l,C);for(let R=0;R<u.length;R+=1)u[R]&&u[R].m(T,C);Ot(T,f,C);for(let R=0;R<p.length;R+=1)p[R]&&p[R].m(T,C);Ot(T,g,C),v=!0},p(T,C){const R={};C&1048576&&(R.$$scope={dirty:C,ctx:T}),e.$set(R);const A={};C&1048576&&(A.$$scope={dirty:C,ctx:T}),n.$set(A);const D={};if(C&1048584&&(D.$$scope={dirty:C,ctx:T}),r.$set(D),C&16){M={length:T[4]};let X;for(X=0;X<M.length;X+=1){const ce=g0(T,M,X);y[X]?(y[X].p(ce,C),De(y[X],1)):(y[X]=_0(ce),y[X].c(),De(y[X],1),y[X].m(l.parentNode,l))}for(Os(),X=M.length;X<y.length;X+=1)_(X);Ds()}C&2&&(b=T[1],Os(),u=Rg(u,C,S,1,T,b,h,f.parentNode,Cg,v0,f,m0),Ds()),C&4&&(w=T[2],Os(),p=Rg(p,C,L,1,T,w,m,g.parentNode,Cg,y0,g,p0),Ds())},i(T){if(!v){De(e.$$.fragment,T),De(n.$$.fragment,T),De(r.$$.fragment,T);for(let C=0;C<M.length;C+=1)De(y[C]);for(let C=0;C<b.length;C+=1)De(u[C]);for(let C=0;C<w.length;C+=1)De(p[C]);v=!0}},o(T){ze(e.$$.fragment,T),ze(n.$$.fragment,T),ze(r.$$.fragment,T),y=y.filter(Boolean);for(let C=0;C<y.length;C+=1)ze(y[C]);for(let C=0;C<u.length;C+=1)ze(u[C]);for(let C=0;C<p.length;C+=1)ze(p[C]);v=!1},d(T){ft(e,T),T&&It(t),ft(n,T),T&&It(i),ft(r,T),T&&It(o),w0(y,T),T&&It(l);for(let C=0;C<u.length;C+=1)u[C].d(T);T&&It(f);for(let C=0;C<p.length;C+=1)p[C].d(T);T&&It(g)}}}function z3(s){let e,t;return e=new _3({props:{$$slots:{default:[B3]},$$scope:{ctx:s}}}),{c(){ct(e.$$.fragment)},l(n){ut(e.$$.fragment,n)},m(n,i){ht(e,n,i),t=!0},p(n,[i]){const r={};i&1048591&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(De(e.$$.fragment,n),t=!0)},o(n){ze(e.$$.fragment,n),t=!1},d(n){ft(e,n)}}}function k3(s,e,t){let n;Nn("MAP_SIZE",6);const i=Nn("BOARD_SIZE",9);let{blocker_ik:r=[],blocker_ip:o=[],blocker_lk:l=[],blocker_lp:u=[],mask:h=!0}=e;const f=zi(h?0:1,{duration:500});bn(s,f,g=>t(3,n=g)),Wa(()=>{for(let g=1;g<=6;g++){const v=i*g/6;r.push([v,-1.2,1]),o.push([v,i+1.2,1])}setTimeout(()=>{t(1,r[0]=[1,1,1],r),t(1,r[1]=[1,1,2],r),t(2,o[0]=[1,7,1],o),t(2,o[2]=[5,5,1],o)},2e3)});const p=()=>{t(0,h=!1)},m=()=>{t(0,h=!0)};return s.$$set=g=>{"blocker_ik"in g&&t(1,r=g.blocker_ik),"blocker_ip"in g&&t(2,o=g.blocker_ip),"blocker_lk"in g&&t(6,l=g.blocker_lk),"blocker_lp"in g&&t(7,u=g.blocker_lp),"mask"in g&&t(0,h=g.mask)},s.$$.update=()=>{s.$$.dirty&1&&ui(f,n=h?0:1,n)},[h,r,o,n,i,f,l,u,p,m]}class H3 extends Ri{constructor(e){super(),Ci(this,e,k3,z3,Pi,{blocker_ik:1,blocker_ip:2,blocker_lk:6,blocker_lp:7,mask:0})}}function G3(s){let e,t;return e=new H3({}),{c(){ct(e.$$.fragment)},l(n){ut(e.$$.fragment,n)},m(n,i){ht(e,n,i),t=!0},p:rl,i(n){t||(De(e.$$.fragment,n),t=!0)},o(n){ze(e.$$.fragment,n),t=!1},d(n){ft(e,n)}}}class q3 extends Ri{constructor(e){super(),Ci(this,e,null,G3,Pi,{})}}export{q3 as component};
